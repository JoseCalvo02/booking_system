generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model ActividadCliente {
  actividadID    Int       @id(map: "PK__Activida__E4EF86949D5C9E6E") @default(autoincrement())
  clienteID      Int?
  ultimaConexion DateTime? @db.DateTime
  ultimaCitaID   Int?
  Usuarios       Usuarios? @relation(fields: [clienteID], references: [usuarioID], onDelete: NoAction, onUpdate: NoAction, map: "fk_ActividadCliente_clienteID")
  Citas          Citas?    @relation(fields: [ultimaCitaID], references: [citaID], onDelete: NoAction, onUpdate: NoAction, map: "fk_ActividadCliente_ultimaCitaID")
}

model BitacoraCliente {
  bitacoraID    Int       @id(map: "PK__Bitacora__43BC1FDF08E1DC04") @default(autoincrement())
  clienteID     Int?
  fechaRegistro DateTime? @db.DateTime
  Usuarios      Usuarios? @relation(fields: [clienteID], references: [usuarioID], onDelete: NoAction, onUpdate: NoAction, map: "fk_bitacoraClientes_clienteID")
}

model BitacoraEstilista {
  bitacoraID   Int       @id(map: "PK__Bitacora__43BC1FDF6A240AE4") @default(autoincrement())
  estilistaID  Int?
  fechaIngreso DateTime? @db.Date
  fechaSalida  DateTime? @db.Date
  Usuarios     Usuarios? @relation(fields: [estilistaID], references: [usuarioID], onDelete: NoAction, onUpdate: NoAction, map: "fk_bitacoraEstilistas_estilistaID")
}

model BloqueoHorarios {
  bloqueoID     Int          @id(map: "PK__BloqueoH__3314B8A02CC72FB9") @default(autoincrement())
  estilistaID   Int?
  fecha         DateTime     @db.Date
  tipoBloqueoID Int?
  horaInicio    String?      @db.VarChar(5)
  horaFinal     String?      @db.VarChar(5)
  descripcion   String?      @db.VarChar(255)
  Usuarios      Usuarios?    @relation(fields: [estilistaID], references: [usuarioID], onDelete: NoAction, onUpdate: NoAction, map: "fk_BloqueoHorarios_estilistaID")
  TipoBloqueo   TipoBloqueo? @relation(fields: [tipoBloqueoID], references: [tipoBloqueoID], onDelete: NoAction, onUpdate: NoAction, map: "fk_BloqueoHorarios_tipoBloqueoID")
}

model Citas {
  citaID              Int                 @id(map: "PK__Citas__A9534FEC28AA7349") @default(autoincrement())
  clienteID           Int?
  estilistaID         Int?
  comentarios         String?             @db.VarChar(150)
  estadoID            Int?
  cuponID             Int?
  ActividadCliente    ActividadCliente[]
  Usuarios_Clientes   Usuarios?           @relation("Citas_clienteIDToUsuarios", fields: [clienteID], references: [usuarioID], onDelete: NoAction, onUpdate: NoAction, map: "fk_Citas_clienteID")
  Cupones             CuponesCanjeados?   @relation(fields: [cuponID], references: [cuponCanjeadoID], onDelete: NoAction, onUpdate: NoAction, map: "fk_Citas_cuponID")
  EstadoCita          EstadoCita?         @relation(fields: [estadoID], references: [estadoID], onDelete: NoAction, onUpdate: NoAction, map: "fk_Citas_estadoID")
  Usuarios_Estilistas Usuarios?           @relation("Citas_estilistaIDToUsuarios", fields: [estilistaID], references: [usuarioID], onDelete: NoAction, onUpdate: NoAction, map: "fk_Citas_estilistaID")
  DetallesCita        DetallesCita?
  HistorialCitas      HistorialCitas[]
  HorariosReservados  HorariosReservados?
}

model EstadoCita {
  estadoID Int     @id(map: "PK__EstadoCi__C696F363F5376FA9") @default(autoincrement())
  nombre   String? @db.VarChar(50)
  Citas    Citas[]
}

model HistorialCitas {
  historialCitasID Int       @id(map: "PK__Historia__1E8361EEE1FE5EFD") @default(autoincrement())
  clienteID        Int?
  citaID           Int?
  Citas            Citas?    @relation(fields: [citaID], references: [citaID], onDelete: NoAction, onUpdate: NoAction, map: "fk_HistorialCitas_citaID")
  Usuarios         Usuarios? @relation(fields: [clienteID], references: [usuarioID], onDelete: NoAction, onUpdate: NoAction, map: "fk_HistorialCitas_clienteID")
}

model HistorialRecompensas {
  historialID     Int        @id(map: "PK__Historia__68FB3544E7F3F580") @default(autoincrement())
  clienteID       Int?
  servicioID      Int?
  puntosCanjeados Int?
  fecha           DateTime?  @db.DateTime
  Usuarios        Usuarios?  @relation(fields: [clienteID], references: [usuarioID], onDelete: NoAction, onUpdate: NoAction, map: "fk_HistorialRecompensas_clienteID")
  Servicios       Servicios? @relation(fields: [servicioID], references: [servicioID], onDelete: NoAction, onUpdate: NoAction, map: "fk_HistorialRecompensas_servicioID")
}

model Horarios {
  horarioID   Int       @id(map: "PK__Horarios__BFF858D3BA02855B") @default(autoincrement())
  estilistaID Int?
  fecha       DateTime? @db.Date
  diaSemana   String?   @db.VarChar(20)
  horaInicio  String?   @db.VarChar(5)
  horaFinal   String?   @db.VarChar(5)
  esDiaLibre  Boolean?
  Usuarios    Usuarios? @relation(fields: [estilistaID], references: [usuarioID], onDelete: NoAction, onUpdate: NoAction, map: "fk_Horarios_estilistaID")
}

model HorariosReservados {
  citaID     Int       @id(map: "PK__Horarios__A9534FEC2C93A3E3")
  dia        DateTime? @db.Date
  horaInicio String?   @db.VarChar(5)
  horaFinal  String?   @db.VarChar(5)
  Citas      Citas     @relation(fields: [citaID], references: [citaID], onUpdate: NoAction, map: "fk_HorariosReservados_citaID")
}

model PuntosClientes {
  puntosID         Int       @id(map: "PK__PuntosCl__DC505A371D081791") @default(autoincrement())
  clienteID        Int?
  puntosAcumulados Int?
  puntosCanjeados  Int?
  Usuarios         Usuarios? @relation(fields: [clienteID], references: [usuarioID], onDelete: NoAction, onUpdate: NoAction, map: "fk_PuntosClientes_clienteID")
}

model PuntosServicio {
  servicioID      Int       @id(map: "PK__PuntosSe__65FD6B29A332B52A") @default(autoincrement())
  puntosGenerados Int?
  Servicios       Servicios @relation(fields: [servicioID], references: [servicioID], onUpdate: NoAction, map: "fk_PuntosServicio_servicioID")
}

model Roles {
  rolID     Int        @id(map: "PK__Roles__5402365493D719B4") @default(autoincrement())
  nombreRol String?    @db.VarChar(25)
  Usuarios  Usuarios[]
}

model Servicios {
  servicioID           Int                    @id(map: "PK__Servicio__65FD6B29878B0AFF") @default(autoincrement())
  nombreServicio       String?                @db.VarChar(50)
  descripcion          String?                @db.VarChar(255)
  precio               Int?
  rutaImagen           String?                @db.VarChar(150)
  tiempoEstimado       String?                @db.VarChar(5)
  DetallesCita         DetallesCita[]
  HistorialRecompensas HistorialRecompensas[]
  PuntosServicio       PuntosServicio?
}

model Usuarios {
  usuarioID                         Int                    @id(map: "PK__Usuarios__A5B1ABAE3DB4F188") @default(autoincrement())
  nombre                            String                 @db.VarChar(50)
  apellidos                         String                 @db.VarChar(50)
  telefono                          String?                @db.VarChar(20)
  correo                            String                 @unique(map: "UQ_Usuarios_correo") @db.VarChar(100)
  direccion                         String?                @db.VarChar(255)
  contra                            String                 @db.VarChar(60)
  rolID                             Int?
  estado                            String?                @db.VarChar(15)
  ActividadCliente                  ActividadCliente[]
  BitacoraCliente                   BitacoraCliente[]
  BitacoraEstilista                 BitacoraEstilista[]
  BloqueoHorarios                   BloqueoHorarios[]
  Citas_Citas_clienteIDToUsuarios   Citas[]                @relation("Citas_clienteIDToUsuarios")
  Citas_Citas_estilistaIDToUsuarios Citas[]                @relation("Citas_estilistaIDToUsuarios")
  CuponesCanjeados                  CuponesCanjeados[]
  HistorialCitas                    HistorialCitas[]
  HistorialRecompensas              HistorialRecompensas[]
  Horarios                          Horarios[]
  PuntosClientes                    PuntosClientes[]
  Roles                             Roles?                 @relation(fields: [rolID], references: [rolID], onDelete: NoAction, onUpdate: NoAction, map: "fk_Usuarios_rolID")
}

model Cupones {
  cuponID          Int                @id(map: "PK__Cupones__9FC50856B758C684") @default(autoincrement())
  nombreCupon      String?            @db.VarChar(100)
  valorPuntos      Int?
  estado           String?            @db.VarChar(15)
  CuponesCanjeados CuponesCanjeados[]
}

model CuponesCanjeados {
  cuponCanjeadoID Int       @id(map: "PK__CuponesC__606B3DC20682C740") @default(autoincrement())
  cuponID         Int?
  clienteID       Int?
  fecha           DateTime? @db.Date
  estado          String?   @db.VarChar(15)
  Citas           Citas[]
  Usuarios        Usuarios? @relation(fields: [clienteID], references: [usuarioID], onDelete: NoAction, onUpdate: NoAction, map: "fk_CuponesCanjeados_clienteID")
  Cupones         Cupones?  @relation(fields: [cuponID], references: [cuponID], onDelete: NoAction, onUpdate: NoAction, map: "fk_CuponesCanjeados_cuponID")
}

model HorariosSemanales {
  horarioSemID   Int     @id(map: "PK__Horarios__2A976C8CF93B2EA4") @default(autoincrement())
  diasLaborables String? @db.VarChar(150)
  horaInicio     String? @db.VarChar(5)
  horaFinal      String? @db.VarChar(5)
}

model TipoBloqueo {
  tipoBloqueoID   Int               @id(map: "PK__TipoBloq__389A46C6319D13D2") @default(autoincrement())
  nombre          String            @db.VarChar(50)
  BloqueoHorarios BloqueoHorarios[]
}

model sysdiagrams {
  name         String @db.NVarChar(128)
  principal_id Int
  diagram_id   Int    @id(map: "PK__sysdiagr__C2B05B6180416BBF") @default(autoincrement())
  version      Int?
  definition   Bytes?

  @@unique([principal_id, name], map: "UK_principal_name")
}

model DetallesCita {
  citaID     Int        @id(map: "PK__Detalles__A9534FEC71F7F018")
  servicioID Int?
  Citas      Citas      @relation(fields: [citaID], references: [citaID], onUpdate: NoAction, map: "fk_DetallesCita_citaID")
  Servicios  Servicios? @relation(fields: [servicioID], references: [servicioID], onDelete: NoAction, onUpdate: NoAction, map: "fk_DetallesCita_servicioID")
}
