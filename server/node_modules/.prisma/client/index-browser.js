
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  detectRuntime,
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.10.2
 * Query Engine version: 5a9203d0590c951969e85a7d07215503f4672eb9
 */
Prisma.prismaVersion = {
  client: "5.10.2",
  engine: "5a9203d0590c951969e85a7d07215503f4672eb9"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable',
  Snapshot: 'Snapshot'
});

exports.Prisma.AdministradoresScalarFieldEnum = {
  adminID: 'adminID',
  nombre: 'nombre',
  apellidos: 'apellidos',
  correo: 'correo',
  contrase_a: 'contrase_a',
  rolID: 'rolID'
};

exports.Prisma.BloqueoHorariosScalarFieldEnum = {
  bloqueoID: 'bloqueoID',
  estilistaID: 'estilistaID',
  dia: 'dia',
  horaInicio: 'horaInicio',
  horaFinal: 'horaFinal',
  motivo: 'motivo'
};

exports.Prisma.CatalogoScalarFieldEnum = {
  servicioID: 'servicioID',
  nombreServicio: 'nombreServicio',
  descripcion: 'descripcion',
  precio: 'precio'
};

exports.Prisma.CitasScalarFieldEnum = {
  citaID: 'citaID',
  clienteID: 'clienteID',
  estilistaID: 'estilistaID',
  servicioID: 'servicioID',
  fechaCita: 'fechaCita',
  estiloID: 'estiloID',
  comentarios: 'comentarios'
};

exports.Prisma.CitasReagendadasScalarFieldEnum = {
  reagendadaID: 'reagendadaID',
  citaID: 'citaID',
  idCitaNueva: 'idCitaNueva',
  fechaNuevaCita: 'fechaNuevaCita',
  motivo: 'motivo'
};

exports.Prisma.ClientesScalarFieldEnum = {
  clienteID: 'clienteID',
  nombre: 'nombre',
  apellidos: 'apellidos',
  correo: 'correo',
  telefono: 'telefono',
  direccion: 'direccion',
  puntosGanados: 'puntosGanados',
  puntosCanjeados: 'puntosCanjeados',
  contrase_a: 'contrase_a',
  rolID: 'rolID',
  estado: 'estado'
};

exports.Prisma.DetalleServicioScalarFieldEnum = {
  detalleID: 'detalleID',
  servicioID: 'servicioID',
  tiempoEstimado: 'tiempoEstimado'
};

exports.Prisma.DisponibilidadTiempoRealScalarFieldEnum = {
  disponibilidadID: 'disponibilidadID',
  estilistaID: 'estilistaID',
  diaSemana: 'diaSemana',
  horaInicio: 'horaInicio',
  horaFinal: 'horaFinal'
};

exports.Prisma.EstilistasScalarFieldEnum = {
  estilistaID: 'estilistaID',
  nombre: 'nombre',
  apellidos: 'apellidos',
  telefono: 'telefono',
  direccion: 'direccion',
  fechaIngreso: 'fechaIngreso',
  fechaSalida: 'fechaSalida',
  correo: 'correo',
  contrase_a: 'contrase_a',
  rolID: 'rolID',
  estado: 'estado'
};

exports.Prisma.GaleriaEstilosScalarFieldEnum = {
  estiloID: 'estiloID',
  nombreEstilo: 'nombreEstilo',
  rutaImagen: 'rutaImagen'
};

exports.Prisma.HistorialCitasScalarFieldEnum = {
  historialID: 'historialID',
  citaID: 'citaID',
  clienteID: 'clienteID',
  estilistaID: 'estilistaID',
  fechaCita: 'fechaCita',
  servicioID: 'servicioID'
};

exports.Prisma.HistorialClientesScalarFieldEnum = {
  historialID: 'historialID',
  clienteID: 'clienteID',
  nombreCliente: 'nombreCliente',
  fechaRegistro: 'fechaRegistro',
  ultimoServicioID: 'ultimoServicioID'
};

exports.Prisma.HistorialCuentaScalarFieldEnum = {
  historialID: 'historialID',
  clienteID: 'clienteID',
  serviciosUtilizados: 'serviciosUtilizados',
  ultimaConexion: 'ultimaConexion'
};

exports.Prisma.HistorialGastoPuntosScalarFieldEnum = {
  gastoID: 'gastoID',
  clienteID: 'clienteID',
  puntosGastados: 'puntosGastados',
  fecha: 'fecha',
  descripcionGasto: 'descripcionGasto'
};

exports.Prisma.PuntosClientesScalarFieldEnum = {
  puntosID: 'puntosID',
  clienteID: 'clienteID',
  saldoPuntos: 'saldoPuntos'
};

exports.Prisma.RecompensasScalarFieldEnum = {
  recompensaID: 'recompensaID',
  servicioID: 'servicioID',
  puntosRecompensa: 'puntosRecompensa'
};

exports.Prisma.ReporteCitasPendientesScalarFieldEnum = {
  reporteID: 'reporteID',
  citaID: 'citaID',
  clienteID: 'clienteID',
  fechaCita: 'fechaCita',
  estilistaID: 'estilistaID'
};

exports.Prisma.ReporteClientesCitasScalarFieldEnum = {
  reporteID: 'reporteID',
  clienteID: 'clienteID',
  citaID: 'citaID',
  nombreCliente: 'nombreCliente',
  fechaCita: 'fechaCita',
  servicioID: 'servicioID'
};

exports.Prisma.ReporteHorarioEstilistasScalarFieldEnum = {
  reporteID: 'reporteID',
  estilistaID: 'estilistaID',
  diaSemana: 'diaSemana',
  horaInicio: 'horaInicio',
  horaFinal: 'horaFinal'
};

exports.Prisma.RolesScalarFieldEnum = {
  rolID: 'rolID',
  nombreRol: 'nombreRol'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  administradores: 'administradores',
  bloqueoHorarios: 'bloqueoHorarios',
  catalogo: 'catalogo',
  citas: 'citas',
  citasReagendadas: 'citasReagendadas',
  clientes: 'clientes',
  detalleServicio: 'detalleServicio',
  disponibilidadTiempoReal: 'disponibilidadTiempoReal',
  estilistas: 'estilistas',
  galeriaEstilos: 'galeriaEstilos',
  historialCitas: 'historialCitas',
  historialClientes: 'historialClientes',
  historialCuenta: 'historialCuenta',
  historialGastoPuntos: 'historialGastoPuntos',
  puntosClientes: 'puntosClientes',
  recompensas: 'recompensas',
  reporteCitasPendientes: 'reporteCitasPendientes',
  reporteClientesCitas: 'reporteClientesCitas',
  reporteHorarioEstilistas: 'reporteHorarioEstilistas',
  roles: 'roles'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        const runtime = detectRuntime()
        const edgeRuntimeName = {
          'workerd': 'Cloudflare Workers',
          'deno': 'Deno and Deno Deploy',
          'netlify': 'Netlify Edge Functions',
          'edge-light': 'Vercel Edge Functions or Edge Middleware',
        }[runtime]

        let message = 'PrismaClient is unable to run in '
        if (edgeRuntimeName !== undefined) {
          message += edgeRuntimeName + '. As an alternative, try Accelerate: https://pris.ly/d/accelerate.'
        } else {
          message += 'this browser environment, or has been bundled for the browser (running in `' + runtime + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
