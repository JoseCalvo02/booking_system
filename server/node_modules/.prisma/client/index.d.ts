
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model administradores
 * 
 */
export type administradores = $Result.DefaultSelection<Prisma.$administradoresPayload>
/**
 * Model bloqueoHorarios
 * 
 */
export type bloqueoHorarios = $Result.DefaultSelection<Prisma.$bloqueoHorariosPayload>
/**
 * Model catalogo
 * 
 */
export type catalogo = $Result.DefaultSelection<Prisma.$catalogoPayload>
/**
 * Model citas
 * 
 */
export type citas = $Result.DefaultSelection<Prisma.$citasPayload>
/**
 * Model citasReagendadas
 * 
 */
export type citasReagendadas = $Result.DefaultSelection<Prisma.$citasReagendadasPayload>
/**
 * Model clientes
 * 
 */
export type clientes = $Result.DefaultSelection<Prisma.$clientesPayload>
/**
 * Model detalleServicio
 * 
 */
export type detalleServicio = $Result.DefaultSelection<Prisma.$detalleServicioPayload>
/**
 * Model disponibilidadTiempoReal
 * 
 */
export type disponibilidadTiempoReal = $Result.DefaultSelection<Prisma.$disponibilidadTiempoRealPayload>
/**
 * Model estilistas
 * 
 */
export type estilistas = $Result.DefaultSelection<Prisma.$estilistasPayload>
/**
 * Model galeriaEstilos
 * 
 */
export type galeriaEstilos = $Result.DefaultSelection<Prisma.$galeriaEstilosPayload>
/**
 * Model historialCitas
 * 
 */
export type historialCitas = $Result.DefaultSelection<Prisma.$historialCitasPayload>
/**
 * Model historialClientes
 * 
 */
export type historialClientes = $Result.DefaultSelection<Prisma.$historialClientesPayload>
/**
 * Model historialCuenta
 * 
 */
export type historialCuenta = $Result.DefaultSelection<Prisma.$historialCuentaPayload>
/**
 * Model historialGastoPuntos
 * 
 */
export type historialGastoPuntos = $Result.DefaultSelection<Prisma.$historialGastoPuntosPayload>
/**
 * Model puntosClientes
 * 
 */
export type puntosClientes = $Result.DefaultSelection<Prisma.$puntosClientesPayload>
/**
 * Model recompensas
 * 
 */
export type recompensas = $Result.DefaultSelection<Prisma.$recompensasPayload>
/**
 * Model reporteCitasPendientes
 * 
 */
export type reporteCitasPendientes = $Result.DefaultSelection<Prisma.$reporteCitasPendientesPayload>
/**
 * Model reporteClientesCitas
 * 
 */
export type reporteClientesCitas = $Result.DefaultSelection<Prisma.$reporteClientesCitasPayload>
/**
 * Model reporteHorarioEstilistas
 * 
 */
export type reporteHorarioEstilistas = $Result.DefaultSelection<Prisma.$reporteHorarioEstilistasPayload>
/**
 * Model roles
 * 
 */
export type roles = $Result.DefaultSelection<Prisma.$rolesPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Administradores
 * const administradores = await prisma.administradores.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Administradores
   * const administradores = await prisma.administradores.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.administradores`: Exposes CRUD operations for the **administradores** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Administradores
    * const administradores = await prisma.administradores.findMany()
    * ```
    */
  get administradores(): Prisma.administradoresDelegate<ExtArgs>;

  /**
   * `prisma.bloqueoHorarios`: Exposes CRUD operations for the **bloqueoHorarios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BloqueoHorarios
    * const bloqueoHorarios = await prisma.bloqueoHorarios.findMany()
    * ```
    */
  get bloqueoHorarios(): Prisma.bloqueoHorariosDelegate<ExtArgs>;

  /**
   * `prisma.catalogo`: Exposes CRUD operations for the **catalogo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Catalogos
    * const catalogos = await prisma.catalogo.findMany()
    * ```
    */
  get catalogo(): Prisma.catalogoDelegate<ExtArgs>;

  /**
   * `prisma.citas`: Exposes CRUD operations for the **citas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Citas
    * const citas = await prisma.citas.findMany()
    * ```
    */
  get citas(): Prisma.citasDelegate<ExtArgs>;

  /**
   * `prisma.citasReagendadas`: Exposes CRUD operations for the **citasReagendadas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CitasReagendadas
    * const citasReagendadas = await prisma.citasReagendadas.findMany()
    * ```
    */
  get citasReagendadas(): Prisma.citasReagendadasDelegate<ExtArgs>;

  /**
   * `prisma.clientes`: Exposes CRUD operations for the **clientes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clientes
    * const clientes = await prisma.clientes.findMany()
    * ```
    */
  get clientes(): Prisma.clientesDelegate<ExtArgs>;

  /**
   * `prisma.detalleServicio`: Exposes CRUD operations for the **detalleServicio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DetalleServicios
    * const detalleServicios = await prisma.detalleServicio.findMany()
    * ```
    */
  get detalleServicio(): Prisma.detalleServicioDelegate<ExtArgs>;

  /**
   * `prisma.disponibilidadTiempoReal`: Exposes CRUD operations for the **disponibilidadTiempoReal** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DisponibilidadTiempoReals
    * const disponibilidadTiempoReals = await prisma.disponibilidadTiempoReal.findMany()
    * ```
    */
  get disponibilidadTiempoReal(): Prisma.disponibilidadTiempoRealDelegate<ExtArgs>;

  /**
   * `prisma.estilistas`: Exposes CRUD operations for the **estilistas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Estilistas
    * const estilistas = await prisma.estilistas.findMany()
    * ```
    */
  get estilistas(): Prisma.estilistasDelegate<ExtArgs>;

  /**
   * `prisma.galeriaEstilos`: Exposes CRUD operations for the **galeriaEstilos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more GaleriaEstilos
    * const galeriaEstilos = await prisma.galeriaEstilos.findMany()
    * ```
    */
  get galeriaEstilos(): Prisma.galeriaEstilosDelegate<ExtArgs>;

  /**
   * `prisma.historialCitas`: Exposes CRUD operations for the **historialCitas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more HistorialCitas
    * const historialCitas = await prisma.historialCitas.findMany()
    * ```
    */
  get historialCitas(): Prisma.historialCitasDelegate<ExtArgs>;

  /**
   * `prisma.historialClientes`: Exposes CRUD operations for the **historialClientes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more HistorialClientes
    * const historialClientes = await prisma.historialClientes.findMany()
    * ```
    */
  get historialClientes(): Prisma.historialClientesDelegate<ExtArgs>;

  /**
   * `prisma.historialCuenta`: Exposes CRUD operations for the **historialCuenta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more HistorialCuentas
    * const historialCuentas = await prisma.historialCuenta.findMany()
    * ```
    */
  get historialCuenta(): Prisma.historialCuentaDelegate<ExtArgs>;

  /**
   * `prisma.historialGastoPuntos`: Exposes CRUD operations for the **historialGastoPuntos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more HistorialGastoPuntos
    * const historialGastoPuntos = await prisma.historialGastoPuntos.findMany()
    * ```
    */
  get historialGastoPuntos(): Prisma.historialGastoPuntosDelegate<ExtArgs>;

  /**
   * `prisma.puntosClientes`: Exposes CRUD operations for the **puntosClientes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PuntosClientes
    * const puntosClientes = await prisma.puntosClientes.findMany()
    * ```
    */
  get puntosClientes(): Prisma.puntosClientesDelegate<ExtArgs>;

  /**
   * `prisma.recompensas`: Exposes CRUD operations for the **recompensas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Recompensas
    * const recompensas = await prisma.recompensas.findMany()
    * ```
    */
  get recompensas(): Prisma.recompensasDelegate<ExtArgs>;

  /**
   * `prisma.reporteCitasPendientes`: Exposes CRUD operations for the **reporteCitasPendientes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReporteCitasPendientes
    * const reporteCitasPendientes = await prisma.reporteCitasPendientes.findMany()
    * ```
    */
  get reporteCitasPendientes(): Prisma.reporteCitasPendientesDelegate<ExtArgs>;

  /**
   * `prisma.reporteClientesCitas`: Exposes CRUD operations for the **reporteClientesCitas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReporteClientesCitas
    * const reporteClientesCitas = await prisma.reporteClientesCitas.findMany()
    * ```
    */
  get reporteClientesCitas(): Prisma.reporteClientesCitasDelegate<ExtArgs>;

  /**
   * `prisma.reporteHorarioEstilistas`: Exposes CRUD operations for the **reporteHorarioEstilistas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReporteHorarioEstilistas
    * const reporteHorarioEstilistas = await prisma.reporteHorarioEstilistas.findMany()
    * ```
    */
  get reporteHorarioEstilistas(): Prisma.reporteHorarioEstilistasDelegate<ExtArgs>;

  /**
   * `prisma.roles`: Exposes CRUD operations for the **roles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.roles.findMany()
    * ```
    */
  get roles(): Prisma.rolesDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.10.2
   * Query Engine version: 5a9203d0590c951969e85a7d07215503f4672eb9
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    administradores: 'administradores',
    bloqueoHorarios: 'bloqueoHorarios',
    catalogo: 'catalogo',
    citas: 'citas',
    citasReagendadas: 'citasReagendadas',
    clientes: 'clientes',
    detalleServicio: 'detalleServicio',
    disponibilidadTiempoReal: 'disponibilidadTiempoReal',
    estilistas: 'estilistas',
    galeriaEstilos: 'galeriaEstilos',
    historialCitas: 'historialCitas',
    historialClientes: 'historialClientes',
    historialCuenta: 'historialCuenta',
    historialGastoPuntos: 'historialGastoPuntos',
    puntosClientes: 'puntosClientes',
    recompensas: 'recompensas',
    reporteCitasPendientes: 'reporteCitasPendientes',
    reporteClientesCitas: 'reporteClientesCitas',
    reporteHorarioEstilistas: 'reporteHorarioEstilistas',
    roles: 'roles'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'administradores' | 'bloqueoHorarios' | 'catalogo' | 'citas' | 'citasReagendadas' | 'clientes' | 'detalleServicio' | 'disponibilidadTiempoReal' | 'estilistas' | 'galeriaEstilos' | 'historialCitas' | 'historialClientes' | 'historialCuenta' | 'historialGastoPuntos' | 'puntosClientes' | 'recompensas' | 'reporteCitasPendientes' | 'reporteClientesCitas' | 'reporteHorarioEstilistas' | 'roles'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      administradores: {
        payload: Prisma.$administradoresPayload<ExtArgs>
        fields: Prisma.administradoresFieldRefs
        operations: {
          findUnique: {
            args: Prisma.administradoresFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$administradoresPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.administradoresFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$administradoresPayload>
          }
          findFirst: {
            args: Prisma.administradoresFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$administradoresPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.administradoresFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$administradoresPayload>
          }
          findMany: {
            args: Prisma.administradoresFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$administradoresPayload>[]
          }
          create: {
            args: Prisma.administradoresCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$administradoresPayload>
          }
          createMany: {
            args: Prisma.administradoresCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.administradoresDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$administradoresPayload>
          }
          update: {
            args: Prisma.administradoresUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$administradoresPayload>
          }
          deleteMany: {
            args: Prisma.administradoresDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.administradoresUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.administradoresUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$administradoresPayload>
          }
          aggregate: {
            args: Prisma.AdministradoresAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAdministradores>
          }
          groupBy: {
            args: Prisma.administradoresGroupByArgs<ExtArgs>,
            result: $Utils.Optional<AdministradoresGroupByOutputType>[]
          }
          count: {
            args: Prisma.administradoresCountArgs<ExtArgs>,
            result: $Utils.Optional<AdministradoresCountAggregateOutputType> | number
          }
        }
      }
      bloqueoHorarios: {
        payload: Prisma.$bloqueoHorariosPayload<ExtArgs>
        fields: Prisma.bloqueoHorariosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.bloqueoHorariosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$bloqueoHorariosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.bloqueoHorariosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$bloqueoHorariosPayload>
          }
          findFirst: {
            args: Prisma.bloqueoHorariosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$bloqueoHorariosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.bloqueoHorariosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$bloqueoHorariosPayload>
          }
          findMany: {
            args: Prisma.bloqueoHorariosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$bloqueoHorariosPayload>[]
          }
          create: {
            args: Prisma.bloqueoHorariosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$bloqueoHorariosPayload>
          }
          createMany: {
            args: Prisma.bloqueoHorariosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.bloqueoHorariosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$bloqueoHorariosPayload>
          }
          update: {
            args: Prisma.bloqueoHorariosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$bloqueoHorariosPayload>
          }
          deleteMany: {
            args: Prisma.bloqueoHorariosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.bloqueoHorariosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.bloqueoHorariosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$bloqueoHorariosPayload>
          }
          aggregate: {
            args: Prisma.BloqueoHorariosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateBloqueoHorarios>
          }
          groupBy: {
            args: Prisma.bloqueoHorariosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<BloqueoHorariosGroupByOutputType>[]
          }
          count: {
            args: Prisma.bloqueoHorariosCountArgs<ExtArgs>,
            result: $Utils.Optional<BloqueoHorariosCountAggregateOutputType> | number
          }
        }
      }
      catalogo: {
        payload: Prisma.$catalogoPayload<ExtArgs>
        fields: Prisma.catalogoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.catalogoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$catalogoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.catalogoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$catalogoPayload>
          }
          findFirst: {
            args: Prisma.catalogoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$catalogoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.catalogoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$catalogoPayload>
          }
          findMany: {
            args: Prisma.catalogoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$catalogoPayload>[]
          }
          create: {
            args: Prisma.catalogoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$catalogoPayload>
          }
          createMany: {
            args: Prisma.catalogoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.catalogoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$catalogoPayload>
          }
          update: {
            args: Prisma.catalogoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$catalogoPayload>
          }
          deleteMany: {
            args: Prisma.catalogoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.catalogoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.catalogoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$catalogoPayload>
          }
          aggregate: {
            args: Prisma.CatalogoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCatalogo>
          }
          groupBy: {
            args: Prisma.catalogoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CatalogoGroupByOutputType>[]
          }
          count: {
            args: Prisma.catalogoCountArgs<ExtArgs>,
            result: $Utils.Optional<CatalogoCountAggregateOutputType> | number
          }
        }
      }
      citas: {
        payload: Prisma.$citasPayload<ExtArgs>
        fields: Prisma.citasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.citasFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$citasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.citasFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$citasPayload>
          }
          findFirst: {
            args: Prisma.citasFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$citasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.citasFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$citasPayload>
          }
          findMany: {
            args: Prisma.citasFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$citasPayload>[]
          }
          create: {
            args: Prisma.citasCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$citasPayload>
          }
          createMany: {
            args: Prisma.citasCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.citasDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$citasPayload>
          }
          update: {
            args: Prisma.citasUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$citasPayload>
          }
          deleteMany: {
            args: Prisma.citasDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.citasUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.citasUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$citasPayload>
          }
          aggregate: {
            args: Prisma.CitasAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCitas>
          }
          groupBy: {
            args: Prisma.citasGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CitasGroupByOutputType>[]
          }
          count: {
            args: Prisma.citasCountArgs<ExtArgs>,
            result: $Utils.Optional<CitasCountAggregateOutputType> | number
          }
        }
      }
      citasReagendadas: {
        payload: Prisma.$citasReagendadasPayload<ExtArgs>
        fields: Prisma.citasReagendadasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.citasReagendadasFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$citasReagendadasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.citasReagendadasFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$citasReagendadasPayload>
          }
          findFirst: {
            args: Prisma.citasReagendadasFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$citasReagendadasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.citasReagendadasFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$citasReagendadasPayload>
          }
          findMany: {
            args: Prisma.citasReagendadasFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$citasReagendadasPayload>[]
          }
          create: {
            args: Prisma.citasReagendadasCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$citasReagendadasPayload>
          }
          createMany: {
            args: Prisma.citasReagendadasCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.citasReagendadasDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$citasReagendadasPayload>
          }
          update: {
            args: Prisma.citasReagendadasUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$citasReagendadasPayload>
          }
          deleteMany: {
            args: Prisma.citasReagendadasDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.citasReagendadasUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.citasReagendadasUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$citasReagendadasPayload>
          }
          aggregate: {
            args: Prisma.CitasReagendadasAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCitasReagendadas>
          }
          groupBy: {
            args: Prisma.citasReagendadasGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CitasReagendadasGroupByOutputType>[]
          }
          count: {
            args: Prisma.citasReagendadasCountArgs<ExtArgs>,
            result: $Utils.Optional<CitasReagendadasCountAggregateOutputType> | number
          }
        }
      }
      clientes: {
        payload: Prisma.$clientesPayload<ExtArgs>
        fields: Prisma.clientesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.clientesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$clientesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.clientesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$clientesPayload>
          }
          findFirst: {
            args: Prisma.clientesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$clientesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.clientesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$clientesPayload>
          }
          findMany: {
            args: Prisma.clientesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$clientesPayload>[]
          }
          create: {
            args: Prisma.clientesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$clientesPayload>
          }
          createMany: {
            args: Prisma.clientesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.clientesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$clientesPayload>
          }
          update: {
            args: Prisma.clientesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$clientesPayload>
          }
          deleteMany: {
            args: Prisma.clientesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.clientesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.clientesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$clientesPayload>
          }
          aggregate: {
            args: Prisma.ClientesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateClientes>
          }
          groupBy: {
            args: Prisma.clientesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ClientesGroupByOutputType>[]
          }
          count: {
            args: Prisma.clientesCountArgs<ExtArgs>,
            result: $Utils.Optional<ClientesCountAggregateOutputType> | number
          }
        }
      }
      detalleServicio: {
        payload: Prisma.$detalleServicioPayload<ExtArgs>
        fields: Prisma.detalleServicioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.detalleServicioFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$detalleServicioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.detalleServicioFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$detalleServicioPayload>
          }
          findFirst: {
            args: Prisma.detalleServicioFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$detalleServicioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.detalleServicioFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$detalleServicioPayload>
          }
          findMany: {
            args: Prisma.detalleServicioFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$detalleServicioPayload>[]
          }
          create: {
            args: Prisma.detalleServicioCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$detalleServicioPayload>
          }
          createMany: {
            args: Prisma.detalleServicioCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.detalleServicioDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$detalleServicioPayload>
          }
          update: {
            args: Prisma.detalleServicioUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$detalleServicioPayload>
          }
          deleteMany: {
            args: Prisma.detalleServicioDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.detalleServicioUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.detalleServicioUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$detalleServicioPayload>
          }
          aggregate: {
            args: Prisma.DetalleServicioAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateDetalleServicio>
          }
          groupBy: {
            args: Prisma.detalleServicioGroupByArgs<ExtArgs>,
            result: $Utils.Optional<DetalleServicioGroupByOutputType>[]
          }
          count: {
            args: Prisma.detalleServicioCountArgs<ExtArgs>,
            result: $Utils.Optional<DetalleServicioCountAggregateOutputType> | number
          }
        }
      }
      disponibilidadTiempoReal: {
        payload: Prisma.$disponibilidadTiempoRealPayload<ExtArgs>
        fields: Prisma.disponibilidadTiempoRealFieldRefs
        operations: {
          findUnique: {
            args: Prisma.disponibilidadTiempoRealFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disponibilidadTiempoRealPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.disponibilidadTiempoRealFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disponibilidadTiempoRealPayload>
          }
          findFirst: {
            args: Prisma.disponibilidadTiempoRealFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disponibilidadTiempoRealPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.disponibilidadTiempoRealFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disponibilidadTiempoRealPayload>
          }
          findMany: {
            args: Prisma.disponibilidadTiempoRealFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disponibilidadTiempoRealPayload>[]
          }
          create: {
            args: Prisma.disponibilidadTiempoRealCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disponibilidadTiempoRealPayload>
          }
          createMany: {
            args: Prisma.disponibilidadTiempoRealCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.disponibilidadTiempoRealDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disponibilidadTiempoRealPayload>
          }
          update: {
            args: Prisma.disponibilidadTiempoRealUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disponibilidadTiempoRealPayload>
          }
          deleteMany: {
            args: Prisma.disponibilidadTiempoRealDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.disponibilidadTiempoRealUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.disponibilidadTiempoRealUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disponibilidadTiempoRealPayload>
          }
          aggregate: {
            args: Prisma.DisponibilidadTiempoRealAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateDisponibilidadTiempoReal>
          }
          groupBy: {
            args: Prisma.disponibilidadTiempoRealGroupByArgs<ExtArgs>,
            result: $Utils.Optional<DisponibilidadTiempoRealGroupByOutputType>[]
          }
          count: {
            args: Prisma.disponibilidadTiempoRealCountArgs<ExtArgs>,
            result: $Utils.Optional<DisponibilidadTiempoRealCountAggregateOutputType> | number
          }
        }
      }
      estilistas: {
        payload: Prisma.$estilistasPayload<ExtArgs>
        fields: Prisma.estilistasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.estilistasFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$estilistasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.estilistasFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$estilistasPayload>
          }
          findFirst: {
            args: Prisma.estilistasFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$estilistasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.estilistasFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$estilistasPayload>
          }
          findMany: {
            args: Prisma.estilistasFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$estilistasPayload>[]
          }
          create: {
            args: Prisma.estilistasCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$estilistasPayload>
          }
          createMany: {
            args: Prisma.estilistasCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.estilistasDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$estilistasPayload>
          }
          update: {
            args: Prisma.estilistasUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$estilistasPayload>
          }
          deleteMany: {
            args: Prisma.estilistasDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.estilistasUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.estilistasUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$estilistasPayload>
          }
          aggregate: {
            args: Prisma.EstilistasAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateEstilistas>
          }
          groupBy: {
            args: Prisma.estilistasGroupByArgs<ExtArgs>,
            result: $Utils.Optional<EstilistasGroupByOutputType>[]
          }
          count: {
            args: Prisma.estilistasCountArgs<ExtArgs>,
            result: $Utils.Optional<EstilistasCountAggregateOutputType> | number
          }
        }
      }
      galeriaEstilos: {
        payload: Prisma.$galeriaEstilosPayload<ExtArgs>
        fields: Prisma.galeriaEstilosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.galeriaEstilosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$galeriaEstilosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.galeriaEstilosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$galeriaEstilosPayload>
          }
          findFirst: {
            args: Prisma.galeriaEstilosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$galeriaEstilosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.galeriaEstilosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$galeriaEstilosPayload>
          }
          findMany: {
            args: Prisma.galeriaEstilosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$galeriaEstilosPayload>[]
          }
          create: {
            args: Prisma.galeriaEstilosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$galeriaEstilosPayload>
          }
          createMany: {
            args: Prisma.galeriaEstilosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.galeriaEstilosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$galeriaEstilosPayload>
          }
          update: {
            args: Prisma.galeriaEstilosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$galeriaEstilosPayload>
          }
          deleteMany: {
            args: Prisma.galeriaEstilosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.galeriaEstilosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.galeriaEstilosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$galeriaEstilosPayload>
          }
          aggregate: {
            args: Prisma.GaleriaEstilosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateGaleriaEstilos>
          }
          groupBy: {
            args: Prisma.galeriaEstilosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<GaleriaEstilosGroupByOutputType>[]
          }
          count: {
            args: Prisma.galeriaEstilosCountArgs<ExtArgs>,
            result: $Utils.Optional<GaleriaEstilosCountAggregateOutputType> | number
          }
        }
      }
      historialCitas: {
        payload: Prisma.$historialCitasPayload<ExtArgs>
        fields: Prisma.historialCitasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.historialCitasFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialCitasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.historialCitasFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialCitasPayload>
          }
          findFirst: {
            args: Prisma.historialCitasFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialCitasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.historialCitasFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialCitasPayload>
          }
          findMany: {
            args: Prisma.historialCitasFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialCitasPayload>[]
          }
          create: {
            args: Prisma.historialCitasCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialCitasPayload>
          }
          createMany: {
            args: Prisma.historialCitasCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.historialCitasDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialCitasPayload>
          }
          update: {
            args: Prisma.historialCitasUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialCitasPayload>
          }
          deleteMany: {
            args: Prisma.historialCitasDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.historialCitasUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.historialCitasUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialCitasPayload>
          }
          aggregate: {
            args: Prisma.HistorialCitasAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateHistorialCitas>
          }
          groupBy: {
            args: Prisma.historialCitasGroupByArgs<ExtArgs>,
            result: $Utils.Optional<HistorialCitasGroupByOutputType>[]
          }
          count: {
            args: Prisma.historialCitasCountArgs<ExtArgs>,
            result: $Utils.Optional<HistorialCitasCountAggregateOutputType> | number
          }
        }
      }
      historialClientes: {
        payload: Prisma.$historialClientesPayload<ExtArgs>
        fields: Prisma.historialClientesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.historialClientesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialClientesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.historialClientesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialClientesPayload>
          }
          findFirst: {
            args: Prisma.historialClientesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialClientesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.historialClientesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialClientesPayload>
          }
          findMany: {
            args: Prisma.historialClientesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialClientesPayload>[]
          }
          create: {
            args: Prisma.historialClientesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialClientesPayload>
          }
          createMany: {
            args: Prisma.historialClientesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.historialClientesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialClientesPayload>
          }
          update: {
            args: Prisma.historialClientesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialClientesPayload>
          }
          deleteMany: {
            args: Prisma.historialClientesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.historialClientesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.historialClientesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialClientesPayload>
          }
          aggregate: {
            args: Prisma.HistorialClientesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateHistorialClientes>
          }
          groupBy: {
            args: Prisma.historialClientesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<HistorialClientesGroupByOutputType>[]
          }
          count: {
            args: Prisma.historialClientesCountArgs<ExtArgs>,
            result: $Utils.Optional<HistorialClientesCountAggregateOutputType> | number
          }
        }
      }
      historialCuenta: {
        payload: Prisma.$historialCuentaPayload<ExtArgs>
        fields: Prisma.historialCuentaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.historialCuentaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialCuentaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.historialCuentaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialCuentaPayload>
          }
          findFirst: {
            args: Prisma.historialCuentaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialCuentaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.historialCuentaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialCuentaPayload>
          }
          findMany: {
            args: Prisma.historialCuentaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialCuentaPayload>[]
          }
          create: {
            args: Prisma.historialCuentaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialCuentaPayload>
          }
          createMany: {
            args: Prisma.historialCuentaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.historialCuentaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialCuentaPayload>
          }
          update: {
            args: Prisma.historialCuentaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialCuentaPayload>
          }
          deleteMany: {
            args: Prisma.historialCuentaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.historialCuentaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.historialCuentaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialCuentaPayload>
          }
          aggregate: {
            args: Prisma.HistorialCuentaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateHistorialCuenta>
          }
          groupBy: {
            args: Prisma.historialCuentaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<HistorialCuentaGroupByOutputType>[]
          }
          count: {
            args: Prisma.historialCuentaCountArgs<ExtArgs>,
            result: $Utils.Optional<HistorialCuentaCountAggregateOutputType> | number
          }
        }
      }
      historialGastoPuntos: {
        payload: Prisma.$historialGastoPuntosPayload<ExtArgs>
        fields: Prisma.historialGastoPuntosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.historialGastoPuntosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialGastoPuntosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.historialGastoPuntosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialGastoPuntosPayload>
          }
          findFirst: {
            args: Prisma.historialGastoPuntosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialGastoPuntosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.historialGastoPuntosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialGastoPuntosPayload>
          }
          findMany: {
            args: Prisma.historialGastoPuntosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialGastoPuntosPayload>[]
          }
          create: {
            args: Prisma.historialGastoPuntosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialGastoPuntosPayload>
          }
          createMany: {
            args: Prisma.historialGastoPuntosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.historialGastoPuntosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialGastoPuntosPayload>
          }
          update: {
            args: Prisma.historialGastoPuntosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialGastoPuntosPayload>
          }
          deleteMany: {
            args: Prisma.historialGastoPuntosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.historialGastoPuntosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.historialGastoPuntosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$historialGastoPuntosPayload>
          }
          aggregate: {
            args: Prisma.HistorialGastoPuntosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateHistorialGastoPuntos>
          }
          groupBy: {
            args: Prisma.historialGastoPuntosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<HistorialGastoPuntosGroupByOutputType>[]
          }
          count: {
            args: Prisma.historialGastoPuntosCountArgs<ExtArgs>,
            result: $Utils.Optional<HistorialGastoPuntosCountAggregateOutputType> | number
          }
        }
      }
      puntosClientes: {
        payload: Prisma.$puntosClientesPayload<ExtArgs>
        fields: Prisma.puntosClientesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.puntosClientesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$puntosClientesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.puntosClientesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$puntosClientesPayload>
          }
          findFirst: {
            args: Prisma.puntosClientesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$puntosClientesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.puntosClientesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$puntosClientesPayload>
          }
          findMany: {
            args: Prisma.puntosClientesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$puntosClientesPayload>[]
          }
          create: {
            args: Prisma.puntosClientesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$puntosClientesPayload>
          }
          createMany: {
            args: Prisma.puntosClientesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.puntosClientesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$puntosClientesPayload>
          }
          update: {
            args: Prisma.puntosClientesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$puntosClientesPayload>
          }
          deleteMany: {
            args: Prisma.puntosClientesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.puntosClientesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.puntosClientesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$puntosClientesPayload>
          }
          aggregate: {
            args: Prisma.PuntosClientesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregatePuntosClientes>
          }
          groupBy: {
            args: Prisma.puntosClientesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<PuntosClientesGroupByOutputType>[]
          }
          count: {
            args: Prisma.puntosClientesCountArgs<ExtArgs>,
            result: $Utils.Optional<PuntosClientesCountAggregateOutputType> | number
          }
        }
      }
      recompensas: {
        payload: Prisma.$recompensasPayload<ExtArgs>
        fields: Prisma.recompensasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.recompensasFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$recompensasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.recompensasFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$recompensasPayload>
          }
          findFirst: {
            args: Prisma.recompensasFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$recompensasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.recompensasFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$recompensasPayload>
          }
          findMany: {
            args: Prisma.recompensasFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$recompensasPayload>[]
          }
          create: {
            args: Prisma.recompensasCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$recompensasPayload>
          }
          createMany: {
            args: Prisma.recompensasCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.recompensasDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$recompensasPayload>
          }
          update: {
            args: Prisma.recompensasUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$recompensasPayload>
          }
          deleteMany: {
            args: Prisma.recompensasDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.recompensasUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.recompensasUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$recompensasPayload>
          }
          aggregate: {
            args: Prisma.RecompensasAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateRecompensas>
          }
          groupBy: {
            args: Prisma.recompensasGroupByArgs<ExtArgs>,
            result: $Utils.Optional<RecompensasGroupByOutputType>[]
          }
          count: {
            args: Prisma.recompensasCountArgs<ExtArgs>,
            result: $Utils.Optional<RecompensasCountAggregateOutputType> | number
          }
        }
      }
      reporteCitasPendientes: {
        payload: Prisma.$reporteCitasPendientesPayload<ExtArgs>
        fields: Prisma.reporteCitasPendientesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.reporteCitasPendientesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reporteCitasPendientesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.reporteCitasPendientesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reporteCitasPendientesPayload>
          }
          findFirst: {
            args: Prisma.reporteCitasPendientesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reporteCitasPendientesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.reporteCitasPendientesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reporteCitasPendientesPayload>
          }
          findMany: {
            args: Prisma.reporteCitasPendientesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reporteCitasPendientesPayload>[]
          }
          create: {
            args: Prisma.reporteCitasPendientesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reporteCitasPendientesPayload>
          }
          createMany: {
            args: Prisma.reporteCitasPendientesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.reporteCitasPendientesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reporteCitasPendientesPayload>
          }
          update: {
            args: Prisma.reporteCitasPendientesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reporteCitasPendientesPayload>
          }
          deleteMany: {
            args: Prisma.reporteCitasPendientesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.reporteCitasPendientesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.reporteCitasPendientesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reporteCitasPendientesPayload>
          }
          aggregate: {
            args: Prisma.ReporteCitasPendientesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateReporteCitasPendientes>
          }
          groupBy: {
            args: Prisma.reporteCitasPendientesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ReporteCitasPendientesGroupByOutputType>[]
          }
          count: {
            args: Prisma.reporteCitasPendientesCountArgs<ExtArgs>,
            result: $Utils.Optional<ReporteCitasPendientesCountAggregateOutputType> | number
          }
        }
      }
      reporteClientesCitas: {
        payload: Prisma.$reporteClientesCitasPayload<ExtArgs>
        fields: Prisma.reporteClientesCitasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.reporteClientesCitasFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reporteClientesCitasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.reporteClientesCitasFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reporteClientesCitasPayload>
          }
          findFirst: {
            args: Prisma.reporteClientesCitasFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reporteClientesCitasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.reporteClientesCitasFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reporteClientesCitasPayload>
          }
          findMany: {
            args: Prisma.reporteClientesCitasFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reporteClientesCitasPayload>[]
          }
          create: {
            args: Prisma.reporteClientesCitasCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reporteClientesCitasPayload>
          }
          createMany: {
            args: Prisma.reporteClientesCitasCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.reporteClientesCitasDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reporteClientesCitasPayload>
          }
          update: {
            args: Prisma.reporteClientesCitasUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reporteClientesCitasPayload>
          }
          deleteMany: {
            args: Prisma.reporteClientesCitasDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.reporteClientesCitasUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.reporteClientesCitasUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reporteClientesCitasPayload>
          }
          aggregate: {
            args: Prisma.ReporteClientesCitasAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateReporteClientesCitas>
          }
          groupBy: {
            args: Prisma.reporteClientesCitasGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ReporteClientesCitasGroupByOutputType>[]
          }
          count: {
            args: Prisma.reporteClientesCitasCountArgs<ExtArgs>,
            result: $Utils.Optional<ReporteClientesCitasCountAggregateOutputType> | number
          }
        }
      }
      reporteHorarioEstilistas: {
        payload: Prisma.$reporteHorarioEstilistasPayload<ExtArgs>
        fields: Prisma.reporteHorarioEstilistasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.reporteHorarioEstilistasFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reporteHorarioEstilistasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.reporteHorarioEstilistasFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reporteHorarioEstilistasPayload>
          }
          findFirst: {
            args: Prisma.reporteHorarioEstilistasFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reporteHorarioEstilistasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.reporteHorarioEstilistasFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reporteHorarioEstilistasPayload>
          }
          findMany: {
            args: Prisma.reporteHorarioEstilistasFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reporteHorarioEstilistasPayload>[]
          }
          create: {
            args: Prisma.reporteHorarioEstilistasCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reporteHorarioEstilistasPayload>
          }
          createMany: {
            args: Prisma.reporteHorarioEstilistasCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.reporteHorarioEstilistasDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reporteHorarioEstilistasPayload>
          }
          update: {
            args: Prisma.reporteHorarioEstilistasUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reporteHorarioEstilistasPayload>
          }
          deleteMany: {
            args: Prisma.reporteHorarioEstilistasDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.reporteHorarioEstilistasUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.reporteHorarioEstilistasUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reporteHorarioEstilistasPayload>
          }
          aggregate: {
            args: Prisma.ReporteHorarioEstilistasAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateReporteHorarioEstilistas>
          }
          groupBy: {
            args: Prisma.reporteHorarioEstilistasGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ReporteHorarioEstilistasGroupByOutputType>[]
          }
          count: {
            args: Prisma.reporteHorarioEstilistasCountArgs<ExtArgs>,
            result: $Utils.Optional<ReporteHorarioEstilistasCountAggregateOutputType> | number
          }
        }
      }
      roles: {
        payload: Prisma.$rolesPayload<ExtArgs>
        fields: Prisma.rolesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.rolesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$rolesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.rolesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          findFirst: {
            args: Prisma.rolesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$rolesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.rolesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          findMany: {
            args: Prisma.rolesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>[]
          }
          create: {
            args: Prisma.rolesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          createMany: {
            args: Prisma.rolesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.rolesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          update: {
            args: Prisma.rolesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          deleteMany: {
            args: Prisma.rolesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.rolesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.rolesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          aggregate: {
            args: Prisma.RolesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateRoles>
          }
          groupBy: {
            args: Prisma.rolesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<RolesGroupByOutputType>[]
          }
          count: {
            args: Prisma.rolesCountArgs<ExtArgs>,
            result: $Utils.Optional<RolesCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CatalogoCountOutputType
   */

  export type CatalogoCountOutputType = {
    citas: number
    detalleServicio: number
    historialClientes: number
    recompensas: number
    reporteClientesCitas: number
  }

  export type CatalogoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    citas?: boolean | CatalogoCountOutputTypeCountCitasArgs
    detalleServicio?: boolean | CatalogoCountOutputTypeCountDetalleServicioArgs
    historialClientes?: boolean | CatalogoCountOutputTypeCountHistorialClientesArgs
    recompensas?: boolean | CatalogoCountOutputTypeCountRecompensasArgs
    reporteClientesCitas?: boolean | CatalogoCountOutputTypeCountReporteClientesCitasArgs
  }

  // Custom InputTypes

  /**
   * CatalogoCountOutputType without action
   */
  export type CatalogoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatalogoCountOutputType
     */
    select?: CatalogoCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * CatalogoCountOutputType without action
   */
  export type CatalogoCountOutputTypeCountCitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: citasWhereInput
  }


  /**
   * CatalogoCountOutputType without action
   */
  export type CatalogoCountOutputTypeCountDetalleServicioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalleServicioWhereInput
  }


  /**
   * CatalogoCountOutputType without action
   */
  export type CatalogoCountOutputTypeCountHistorialClientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: historialClientesWhereInput
  }


  /**
   * CatalogoCountOutputType without action
   */
  export type CatalogoCountOutputTypeCountRecompensasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: recompensasWhereInput
  }


  /**
   * CatalogoCountOutputType without action
   */
  export type CatalogoCountOutputTypeCountReporteClientesCitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reporteClientesCitasWhereInput
  }



  /**
   * Count Type CitasCountOutputType
   */

  export type CitasCountOutputType = {
    citasReagendadas: number
    historialCitas: number
    reporteCitasPendientes: number
    reporteClientesCitas: number
  }

  export type CitasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    citasReagendadas?: boolean | CitasCountOutputTypeCountCitasReagendadasArgs
    historialCitas?: boolean | CitasCountOutputTypeCountHistorialCitasArgs
    reporteCitasPendientes?: boolean | CitasCountOutputTypeCountReporteCitasPendientesArgs
    reporteClientesCitas?: boolean | CitasCountOutputTypeCountReporteClientesCitasArgs
  }

  // Custom InputTypes

  /**
   * CitasCountOutputType without action
   */
  export type CitasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CitasCountOutputType
     */
    select?: CitasCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * CitasCountOutputType without action
   */
  export type CitasCountOutputTypeCountCitasReagendadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: citasReagendadasWhereInput
  }


  /**
   * CitasCountOutputType without action
   */
  export type CitasCountOutputTypeCountHistorialCitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: historialCitasWhereInput
  }


  /**
   * CitasCountOutputType without action
   */
  export type CitasCountOutputTypeCountReporteCitasPendientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reporteCitasPendientesWhereInput
  }


  /**
   * CitasCountOutputType without action
   */
  export type CitasCountOutputTypeCountReporteClientesCitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reporteClientesCitasWhereInput
  }



  /**
   * Count Type ClientesCountOutputType
   */

  export type ClientesCountOutputType = {
    citas: number
    historialCitas: number
    historialClientes: number
    historialCuenta: number
    historialGastoPuntos: number
    puntosClientes: number
    reporteCitasPendientes: number
    reporteClientesCitas: number
  }

  export type ClientesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    citas?: boolean | ClientesCountOutputTypeCountCitasArgs
    historialCitas?: boolean | ClientesCountOutputTypeCountHistorialCitasArgs
    historialClientes?: boolean | ClientesCountOutputTypeCountHistorialClientesArgs
    historialCuenta?: boolean | ClientesCountOutputTypeCountHistorialCuentaArgs
    historialGastoPuntos?: boolean | ClientesCountOutputTypeCountHistorialGastoPuntosArgs
    puntosClientes?: boolean | ClientesCountOutputTypeCountPuntosClientesArgs
    reporteCitasPendientes?: boolean | ClientesCountOutputTypeCountReporteCitasPendientesArgs
    reporteClientesCitas?: boolean | ClientesCountOutputTypeCountReporteClientesCitasArgs
  }

  // Custom InputTypes

  /**
   * ClientesCountOutputType without action
   */
  export type ClientesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientesCountOutputType
     */
    select?: ClientesCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * ClientesCountOutputType without action
   */
  export type ClientesCountOutputTypeCountCitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: citasWhereInput
  }


  /**
   * ClientesCountOutputType without action
   */
  export type ClientesCountOutputTypeCountHistorialCitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: historialCitasWhereInput
  }


  /**
   * ClientesCountOutputType without action
   */
  export type ClientesCountOutputTypeCountHistorialClientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: historialClientesWhereInput
  }


  /**
   * ClientesCountOutputType without action
   */
  export type ClientesCountOutputTypeCountHistorialCuentaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: historialCuentaWhereInput
  }


  /**
   * ClientesCountOutputType without action
   */
  export type ClientesCountOutputTypeCountHistorialGastoPuntosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: historialGastoPuntosWhereInput
  }


  /**
   * ClientesCountOutputType without action
   */
  export type ClientesCountOutputTypeCountPuntosClientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: puntosClientesWhereInput
  }


  /**
   * ClientesCountOutputType without action
   */
  export type ClientesCountOutputTypeCountReporteCitasPendientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reporteCitasPendientesWhereInput
  }


  /**
   * ClientesCountOutputType without action
   */
  export type ClientesCountOutputTypeCountReporteClientesCitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reporteClientesCitasWhereInput
  }



  /**
   * Count Type EstilistasCountOutputType
   */

  export type EstilistasCountOutputType = {
    bloqueoHorarios: number
    citas: number
    disponibilidadTiempoReal: number
    historialCitas: number
    reporteCitasPendientes: number
    reporteHorarioEstilistas: number
  }

  export type EstilistasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    bloqueoHorarios?: boolean | EstilistasCountOutputTypeCountBloqueoHorariosArgs
    citas?: boolean | EstilistasCountOutputTypeCountCitasArgs
    disponibilidadTiempoReal?: boolean | EstilistasCountOutputTypeCountDisponibilidadTiempoRealArgs
    historialCitas?: boolean | EstilistasCountOutputTypeCountHistorialCitasArgs
    reporteCitasPendientes?: boolean | EstilistasCountOutputTypeCountReporteCitasPendientesArgs
    reporteHorarioEstilistas?: boolean | EstilistasCountOutputTypeCountReporteHorarioEstilistasArgs
  }

  // Custom InputTypes

  /**
   * EstilistasCountOutputType without action
   */
  export type EstilistasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstilistasCountOutputType
     */
    select?: EstilistasCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * EstilistasCountOutputType without action
   */
  export type EstilistasCountOutputTypeCountBloqueoHorariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: bloqueoHorariosWhereInput
  }


  /**
   * EstilistasCountOutputType without action
   */
  export type EstilistasCountOutputTypeCountCitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: citasWhereInput
  }


  /**
   * EstilistasCountOutputType without action
   */
  export type EstilistasCountOutputTypeCountDisponibilidadTiempoRealArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: disponibilidadTiempoRealWhereInput
  }


  /**
   * EstilistasCountOutputType without action
   */
  export type EstilistasCountOutputTypeCountHistorialCitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: historialCitasWhereInput
  }


  /**
   * EstilistasCountOutputType without action
   */
  export type EstilistasCountOutputTypeCountReporteCitasPendientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reporteCitasPendientesWhereInput
  }


  /**
   * EstilistasCountOutputType without action
   */
  export type EstilistasCountOutputTypeCountReporteHorarioEstilistasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reporteHorarioEstilistasWhereInput
  }



  /**
   * Count Type GaleriaEstilosCountOutputType
   */

  export type GaleriaEstilosCountOutputType = {
    citas: number
  }

  export type GaleriaEstilosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    citas?: boolean | GaleriaEstilosCountOutputTypeCountCitasArgs
  }

  // Custom InputTypes

  /**
   * GaleriaEstilosCountOutputType without action
   */
  export type GaleriaEstilosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GaleriaEstilosCountOutputType
     */
    select?: GaleriaEstilosCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * GaleriaEstilosCountOutputType without action
   */
  export type GaleriaEstilosCountOutputTypeCountCitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: citasWhereInput
  }



  /**
   * Count Type RolesCountOutputType
   */

  export type RolesCountOutputType = {
    administradores: number
    clientes: number
    estilistas: number
  }

  export type RolesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    administradores?: boolean | RolesCountOutputTypeCountAdministradoresArgs
    clientes?: boolean | RolesCountOutputTypeCountClientesArgs
    estilistas?: boolean | RolesCountOutputTypeCountEstilistasArgs
  }

  // Custom InputTypes

  /**
   * RolesCountOutputType without action
   */
  export type RolesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolesCountOutputType
     */
    select?: RolesCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * RolesCountOutputType without action
   */
  export type RolesCountOutputTypeCountAdministradoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: administradoresWhereInput
  }


  /**
   * RolesCountOutputType without action
   */
  export type RolesCountOutputTypeCountClientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: clientesWhereInput
  }


  /**
   * RolesCountOutputType without action
   */
  export type RolesCountOutputTypeCountEstilistasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: estilistasWhereInput
  }



  /**
   * Models
   */

  /**
   * Model administradores
   */

  export type AggregateAdministradores = {
    _count: AdministradoresCountAggregateOutputType | null
    _avg: AdministradoresAvgAggregateOutputType | null
    _sum: AdministradoresSumAggregateOutputType | null
    _min: AdministradoresMinAggregateOutputType | null
    _max: AdministradoresMaxAggregateOutputType | null
  }

  export type AdministradoresAvgAggregateOutputType = {
    adminID: number | null
    rolID: number | null
  }

  export type AdministradoresSumAggregateOutputType = {
    adminID: number | null
    rolID: number | null
  }

  export type AdministradoresMinAggregateOutputType = {
    adminID: number | null
    nombre: string | null
    apellidos: string | null
    correo: string | null
    contrase_a: string | null
    rolID: number | null
  }

  export type AdministradoresMaxAggregateOutputType = {
    adminID: number | null
    nombre: string | null
    apellidos: string | null
    correo: string | null
    contrase_a: string | null
    rolID: number | null
  }

  export type AdministradoresCountAggregateOutputType = {
    adminID: number
    nombre: number
    apellidos: number
    correo: number
    contrase_a: number
    rolID: number
    _all: number
  }


  export type AdministradoresAvgAggregateInputType = {
    adminID?: true
    rolID?: true
  }

  export type AdministradoresSumAggregateInputType = {
    adminID?: true
    rolID?: true
  }

  export type AdministradoresMinAggregateInputType = {
    adminID?: true
    nombre?: true
    apellidos?: true
    correo?: true
    contrase_a?: true
    rolID?: true
  }

  export type AdministradoresMaxAggregateInputType = {
    adminID?: true
    nombre?: true
    apellidos?: true
    correo?: true
    contrase_a?: true
    rolID?: true
  }

  export type AdministradoresCountAggregateInputType = {
    adminID?: true
    nombre?: true
    apellidos?: true
    correo?: true
    contrase_a?: true
    rolID?: true
    _all?: true
  }

  export type AdministradoresAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which administradores to aggregate.
     */
    where?: administradoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of administradores to fetch.
     */
    orderBy?: administradoresOrderByWithRelationInput | administradoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: administradoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` administradores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` administradores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned administradores
    **/
    _count?: true | AdministradoresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AdministradoresAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AdministradoresSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AdministradoresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AdministradoresMaxAggregateInputType
  }

  export type GetAdministradoresAggregateType<T extends AdministradoresAggregateArgs> = {
        [P in keyof T & keyof AggregateAdministradores]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdministradores[P]>
      : GetScalarType<T[P], AggregateAdministradores[P]>
  }




  export type administradoresGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: administradoresWhereInput
    orderBy?: administradoresOrderByWithAggregationInput | administradoresOrderByWithAggregationInput[]
    by: AdministradoresScalarFieldEnum[] | AdministradoresScalarFieldEnum
    having?: administradoresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AdministradoresCountAggregateInputType | true
    _avg?: AdministradoresAvgAggregateInputType
    _sum?: AdministradoresSumAggregateInputType
    _min?: AdministradoresMinAggregateInputType
    _max?: AdministradoresMaxAggregateInputType
  }

  export type AdministradoresGroupByOutputType = {
    adminID: number
    nombre: string | null
    apellidos: string | null
    correo: string | null
    contrase_a: string | null
    rolID: number | null
    _count: AdministradoresCountAggregateOutputType | null
    _avg: AdministradoresAvgAggregateOutputType | null
    _sum: AdministradoresSumAggregateOutputType | null
    _min: AdministradoresMinAggregateOutputType | null
    _max: AdministradoresMaxAggregateOutputType | null
  }

  type GetAdministradoresGroupByPayload<T extends administradoresGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AdministradoresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AdministradoresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AdministradoresGroupByOutputType[P]>
            : GetScalarType<T[P], AdministradoresGroupByOutputType[P]>
        }
      >
    >


  export type administradoresSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    adminID?: boolean
    nombre?: boolean
    apellidos?: boolean
    correo?: boolean
    contrase_a?: boolean
    rolID?: boolean
    roles?: boolean | administradores$rolesArgs<ExtArgs>
  }, ExtArgs["result"]["administradores"]>

  export type administradoresSelectScalar = {
    adminID?: boolean
    nombre?: boolean
    apellidos?: boolean
    correo?: boolean
    contrase_a?: boolean
    rolID?: boolean
  }

  export type administradoresInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    roles?: boolean | administradores$rolesArgs<ExtArgs>
  }


  export type $administradoresPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "administradores"
    objects: {
      roles: Prisma.$rolesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      adminID: number
      nombre: string | null
      apellidos: string | null
      correo: string | null
      contrase_a: string | null
      rolID: number | null
    }, ExtArgs["result"]["administradores"]>
    composites: {}
  }


  type administradoresGetPayload<S extends boolean | null | undefined | administradoresDefaultArgs> = $Result.GetResult<Prisma.$administradoresPayload, S>

  type administradoresCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<administradoresFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AdministradoresCountAggregateInputType | true
    }

  export interface administradoresDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['administradores'], meta: { name: 'administradores' } }
    /**
     * Find zero or one Administradores that matches the filter.
     * @param {administradoresFindUniqueArgs} args - Arguments to find a Administradores
     * @example
     * // Get one Administradores
     * const administradores = await prisma.administradores.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends administradoresFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, administradoresFindUniqueArgs<ExtArgs>>
    ): Prisma__administradoresClient<$Result.GetResult<Prisma.$administradoresPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Administradores that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {administradoresFindUniqueOrThrowArgs} args - Arguments to find a Administradores
     * @example
     * // Get one Administradores
     * const administradores = await prisma.administradores.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends administradoresFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, administradoresFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__administradoresClient<$Result.GetResult<Prisma.$administradoresPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Administradores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {administradoresFindFirstArgs} args - Arguments to find a Administradores
     * @example
     * // Get one Administradores
     * const administradores = await prisma.administradores.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends administradoresFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, administradoresFindFirstArgs<ExtArgs>>
    ): Prisma__administradoresClient<$Result.GetResult<Prisma.$administradoresPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Administradores that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {administradoresFindFirstOrThrowArgs} args - Arguments to find a Administradores
     * @example
     * // Get one Administradores
     * const administradores = await prisma.administradores.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends administradoresFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, administradoresFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__administradoresClient<$Result.GetResult<Prisma.$administradoresPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Administradores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {administradoresFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Administradores
     * const administradores = await prisma.administradores.findMany()
     * 
     * // Get first 10 Administradores
     * const administradores = await prisma.administradores.findMany({ take: 10 })
     * 
     * // Only select the `adminID`
     * const administradoresWithAdminIDOnly = await prisma.administradores.findMany({ select: { adminID: true } })
     * 
    **/
    findMany<T extends administradoresFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, administradoresFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$administradoresPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Administradores.
     * @param {administradoresCreateArgs} args - Arguments to create a Administradores.
     * @example
     * // Create one Administradores
     * const Administradores = await prisma.administradores.create({
     *   data: {
     *     // ... data to create a Administradores
     *   }
     * })
     * 
    **/
    create<T extends administradoresCreateArgs<ExtArgs>>(
      args: SelectSubset<T, administradoresCreateArgs<ExtArgs>>
    ): Prisma__administradoresClient<$Result.GetResult<Prisma.$administradoresPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Administradores.
     *     @param {administradoresCreateManyArgs} args - Arguments to create many Administradores.
     *     @example
     *     // Create many Administradores
     *     const administradores = await prisma.administradores.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends administradoresCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, administradoresCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Administradores.
     * @param {administradoresDeleteArgs} args - Arguments to delete one Administradores.
     * @example
     * // Delete one Administradores
     * const Administradores = await prisma.administradores.delete({
     *   where: {
     *     // ... filter to delete one Administradores
     *   }
     * })
     * 
    **/
    delete<T extends administradoresDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, administradoresDeleteArgs<ExtArgs>>
    ): Prisma__administradoresClient<$Result.GetResult<Prisma.$administradoresPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Administradores.
     * @param {administradoresUpdateArgs} args - Arguments to update one Administradores.
     * @example
     * // Update one Administradores
     * const administradores = await prisma.administradores.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends administradoresUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, administradoresUpdateArgs<ExtArgs>>
    ): Prisma__administradoresClient<$Result.GetResult<Prisma.$administradoresPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Administradores.
     * @param {administradoresDeleteManyArgs} args - Arguments to filter Administradores to delete.
     * @example
     * // Delete a few Administradores
     * const { count } = await prisma.administradores.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends administradoresDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, administradoresDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Administradores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {administradoresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Administradores
     * const administradores = await prisma.administradores.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends administradoresUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, administradoresUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Administradores.
     * @param {administradoresUpsertArgs} args - Arguments to update or create a Administradores.
     * @example
     * // Update or create a Administradores
     * const administradores = await prisma.administradores.upsert({
     *   create: {
     *     // ... data to create a Administradores
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Administradores we want to update
     *   }
     * })
    **/
    upsert<T extends administradoresUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, administradoresUpsertArgs<ExtArgs>>
    ): Prisma__administradoresClient<$Result.GetResult<Prisma.$administradoresPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Administradores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {administradoresCountArgs} args - Arguments to filter Administradores to count.
     * @example
     * // Count the number of Administradores
     * const count = await prisma.administradores.count({
     *   where: {
     *     // ... the filter for the Administradores we want to count
     *   }
     * })
    **/
    count<T extends administradoresCountArgs>(
      args?: Subset<T, administradoresCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AdministradoresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Administradores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdministradoresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AdministradoresAggregateArgs>(args: Subset<T, AdministradoresAggregateArgs>): Prisma.PrismaPromise<GetAdministradoresAggregateType<T>>

    /**
     * Group by Administradores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {administradoresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends administradoresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: administradoresGroupByArgs['orderBy'] }
        : { orderBy?: administradoresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, administradoresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdministradoresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the administradores model
   */
  readonly fields: administradoresFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for administradores.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__administradoresClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    roles<T extends administradores$rolesArgs<ExtArgs> = {}>(args?: Subset<T, administradores$rolesArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the administradores model
   */ 
  interface administradoresFieldRefs {
    readonly adminID: FieldRef<"administradores", 'Int'>
    readonly nombre: FieldRef<"administradores", 'String'>
    readonly apellidos: FieldRef<"administradores", 'String'>
    readonly correo: FieldRef<"administradores", 'String'>
    readonly contrase_a: FieldRef<"administradores", 'String'>
    readonly rolID: FieldRef<"administradores", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * administradores findUnique
   */
  export type administradoresFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administradores
     */
    select?: administradoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: administradoresInclude<ExtArgs> | null
    /**
     * Filter, which administradores to fetch.
     */
    where: administradoresWhereUniqueInput
  }


  /**
   * administradores findUniqueOrThrow
   */
  export type administradoresFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administradores
     */
    select?: administradoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: administradoresInclude<ExtArgs> | null
    /**
     * Filter, which administradores to fetch.
     */
    where: administradoresWhereUniqueInput
  }


  /**
   * administradores findFirst
   */
  export type administradoresFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administradores
     */
    select?: administradoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: administradoresInclude<ExtArgs> | null
    /**
     * Filter, which administradores to fetch.
     */
    where?: administradoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of administradores to fetch.
     */
    orderBy?: administradoresOrderByWithRelationInput | administradoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for administradores.
     */
    cursor?: administradoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` administradores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` administradores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of administradores.
     */
    distinct?: AdministradoresScalarFieldEnum | AdministradoresScalarFieldEnum[]
  }


  /**
   * administradores findFirstOrThrow
   */
  export type administradoresFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administradores
     */
    select?: administradoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: administradoresInclude<ExtArgs> | null
    /**
     * Filter, which administradores to fetch.
     */
    where?: administradoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of administradores to fetch.
     */
    orderBy?: administradoresOrderByWithRelationInput | administradoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for administradores.
     */
    cursor?: administradoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` administradores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` administradores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of administradores.
     */
    distinct?: AdministradoresScalarFieldEnum | AdministradoresScalarFieldEnum[]
  }


  /**
   * administradores findMany
   */
  export type administradoresFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administradores
     */
    select?: administradoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: administradoresInclude<ExtArgs> | null
    /**
     * Filter, which administradores to fetch.
     */
    where?: administradoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of administradores to fetch.
     */
    orderBy?: administradoresOrderByWithRelationInput | administradoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing administradores.
     */
    cursor?: administradoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` administradores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` administradores.
     */
    skip?: number
    distinct?: AdministradoresScalarFieldEnum | AdministradoresScalarFieldEnum[]
  }


  /**
   * administradores create
   */
  export type administradoresCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administradores
     */
    select?: administradoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: administradoresInclude<ExtArgs> | null
    /**
     * The data needed to create a administradores.
     */
    data?: XOR<administradoresCreateInput, administradoresUncheckedCreateInput>
  }


  /**
   * administradores createMany
   */
  export type administradoresCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many administradores.
     */
    data: administradoresCreateManyInput | administradoresCreateManyInput[]
  }


  /**
   * administradores update
   */
  export type administradoresUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administradores
     */
    select?: administradoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: administradoresInclude<ExtArgs> | null
    /**
     * The data needed to update a administradores.
     */
    data: XOR<administradoresUpdateInput, administradoresUncheckedUpdateInput>
    /**
     * Choose, which administradores to update.
     */
    where: administradoresWhereUniqueInput
  }


  /**
   * administradores updateMany
   */
  export type administradoresUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update administradores.
     */
    data: XOR<administradoresUpdateManyMutationInput, administradoresUncheckedUpdateManyInput>
    /**
     * Filter which administradores to update
     */
    where?: administradoresWhereInput
  }


  /**
   * administradores upsert
   */
  export type administradoresUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administradores
     */
    select?: administradoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: administradoresInclude<ExtArgs> | null
    /**
     * The filter to search for the administradores to update in case it exists.
     */
    where: administradoresWhereUniqueInput
    /**
     * In case the administradores found by the `where` argument doesn't exist, create a new administradores with this data.
     */
    create: XOR<administradoresCreateInput, administradoresUncheckedCreateInput>
    /**
     * In case the administradores was found with the provided `where` argument, update it with this data.
     */
    update: XOR<administradoresUpdateInput, administradoresUncheckedUpdateInput>
  }


  /**
   * administradores delete
   */
  export type administradoresDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administradores
     */
    select?: administradoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: administradoresInclude<ExtArgs> | null
    /**
     * Filter which administradores to delete.
     */
    where: administradoresWhereUniqueInput
  }


  /**
   * administradores deleteMany
   */
  export type administradoresDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which administradores to delete
     */
    where?: administradoresWhereInput
  }


  /**
   * administradores.roles
   */
  export type administradores$rolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: rolesInclude<ExtArgs> | null
    where?: rolesWhereInput
  }


  /**
   * administradores without action
   */
  export type administradoresDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administradores
     */
    select?: administradoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: administradoresInclude<ExtArgs> | null
  }



  /**
   * Model bloqueoHorarios
   */

  export type AggregateBloqueoHorarios = {
    _count: BloqueoHorariosCountAggregateOutputType | null
    _avg: BloqueoHorariosAvgAggregateOutputType | null
    _sum: BloqueoHorariosSumAggregateOutputType | null
    _min: BloqueoHorariosMinAggregateOutputType | null
    _max: BloqueoHorariosMaxAggregateOutputType | null
  }

  export type BloqueoHorariosAvgAggregateOutputType = {
    bloqueoID: number | null
    estilistaID: number | null
  }

  export type BloqueoHorariosSumAggregateOutputType = {
    bloqueoID: number | null
    estilistaID: number | null
  }

  export type BloqueoHorariosMinAggregateOutputType = {
    bloqueoID: number | null
    estilistaID: number | null
    dia: string | null
    horaInicio: Date | null
    horaFinal: Date | null
    motivo: string | null
  }

  export type BloqueoHorariosMaxAggregateOutputType = {
    bloqueoID: number | null
    estilistaID: number | null
    dia: string | null
    horaInicio: Date | null
    horaFinal: Date | null
    motivo: string | null
  }

  export type BloqueoHorariosCountAggregateOutputType = {
    bloqueoID: number
    estilistaID: number
    dia: number
    horaInicio: number
    horaFinal: number
    motivo: number
    _all: number
  }


  export type BloqueoHorariosAvgAggregateInputType = {
    bloqueoID?: true
    estilistaID?: true
  }

  export type BloqueoHorariosSumAggregateInputType = {
    bloqueoID?: true
    estilistaID?: true
  }

  export type BloqueoHorariosMinAggregateInputType = {
    bloqueoID?: true
    estilistaID?: true
    dia?: true
    horaInicio?: true
    horaFinal?: true
    motivo?: true
  }

  export type BloqueoHorariosMaxAggregateInputType = {
    bloqueoID?: true
    estilistaID?: true
    dia?: true
    horaInicio?: true
    horaFinal?: true
    motivo?: true
  }

  export type BloqueoHorariosCountAggregateInputType = {
    bloqueoID?: true
    estilistaID?: true
    dia?: true
    horaInicio?: true
    horaFinal?: true
    motivo?: true
    _all?: true
  }

  export type BloqueoHorariosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which bloqueoHorarios to aggregate.
     */
    where?: bloqueoHorariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bloqueoHorarios to fetch.
     */
    orderBy?: bloqueoHorariosOrderByWithRelationInput | bloqueoHorariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: bloqueoHorariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bloqueoHorarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bloqueoHorarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned bloqueoHorarios
    **/
    _count?: true | BloqueoHorariosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BloqueoHorariosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BloqueoHorariosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BloqueoHorariosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BloqueoHorariosMaxAggregateInputType
  }

  export type GetBloqueoHorariosAggregateType<T extends BloqueoHorariosAggregateArgs> = {
        [P in keyof T & keyof AggregateBloqueoHorarios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBloqueoHorarios[P]>
      : GetScalarType<T[P], AggregateBloqueoHorarios[P]>
  }




  export type bloqueoHorariosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: bloqueoHorariosWhereInput
    orderBy?: bloqueoHorariosOrderByWithAggregationInput | bloqueoHorariosOrderByWithAggregationInput[]
    by: BloqueoHorariosScalarFieldEnum[] | BloqueoHorariosScalarFieldEnum
    having?: bloqueoHorariosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BloqueoHorariosCountAggregateInputType | true
    _avg?: BloqueoHorariosAvgAggregateInputType
    _sum?: BloqueoHorariosSumAggregateInputType
    _min?: BloqueoHorariosMinAggregateInputType
    _max?: BloqueoHorariosMaxAggregateInputType
  }

  export type BloqueoHorariosGroupByOutputType = {
    bloqueoID: number
    estilistaID: number | null
    dia: string | null
    horaInicio: Date | null
    horaFinal: Date | null
    motivo: string | null
    _count: BloqueoHorariosCountAggregateOutputType | null
    _avg: BloqueoHorariosAvgAggregateOutputType | null
    _sum: BloqueoHorariosSumAggregateOutputType | null
    _min: BloqueoHorariosMinAggregateOutputType | null
    _max: BloqueoHorariosMaxAggregateOutputType | null
  }

  type GetBloqueoHorariosGroupByPayload<T extends bloqueoHorariosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BloqueoHorariosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BloqueoHorariosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BloqueoHorariosGroupByOutputType[P]>
            : GetScalarType<T[P], BloqueoHorariosGroupByOutputType[P]>
        }
      >
    >


  export type bloqueoHorariosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    bloqueoID?: boolean
    estilistaID?: boolean
    dia?: boolean
    horaInicio?: boolean
    horaFinal?: boolean
    motivo?: boolean
    estilistas?: boolean | bloqueoHorarios$estilistasArgs<ExtArgs>
  }, ExtArgs["result"]["bloqueoHorarios"]>

  export type bloqueoHorariosSelectScalar = {
    bloqueoID?: boolean
    estilistaID?: boolean
    dia?: boolean
    horaInicio?: boolean
    horaFinal?: boolean
    motivo?: boolean
  }

  export type bloqueoHorariosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estilistas?: boolean | bloqueoHorarios$estilistasArgs<ExtArgs>
  }


  export type $bloqueoHorariosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "bloqueoHorarios"
    objects: {
      estilistas: Prisma.$estilistasPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      bloqueoID: number
      estilistaID: number | null
      dia: string | null
      horaInicio: Date | null
      horaFinal: Date | null
      motivo: string | null
    }, ExtArgs["result"]["bloqueoHorarios"]>
    composites: {}
  }


  type bloqueoHorariosGetPayload<S extends boolean | null | undefined | bloqueoHorariosDefaultArgs> = $Result.GetResult<Prisma.$bloqueoHorariosPayload, S>

  type bloqueoHorariosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<bloqueoHorariosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BloqueoHorariosCountAggregateInputType | true
    }

  export interface bloqueoHorariosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['bloqueoHorarios'], meta: { name: 'bloqueoHorarios' } }
    /**
     * Find zero or one BloqueoHorarios that matches the filter.
     * @param {bloqueoHorariosFindUniqueArgs} args - Arguments to find a BloqueoHorarios
     * @example
     * // Get one BloqueoHorarios
     * const bloqueoHorarios = await prisma.bloqueoHorarios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends bloqueoHorariosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, bloqueoHorariosFindUniqueArgs<ExtArgs>>
    ): Prisma__bloqueoHorariosClient<$Result.GetResult<Prisma.$bloqueoHorariosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one BloqueoHorarios that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {bloqueoHorariosFindUniqueOrThrowArgs} args - Arguments to find a BloqueoHorarios
     * @example
     * // Get one BloqueoHorarios
     * const bloqueoHorarios = await prisma.bloqueoHorarios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends bloqueoHorariosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, bloqueoHorariosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__bloqueoHorariosClient<$Result.GetResult<Prisma.$bloqueoHorariosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first BloqueoHorarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bloqueoHorariosFindFirstArgs} args - Arguments to find a BloqueoHorarios
     * @example
     * // Get one BloqueoHorarios
     * const bloqueoHorarios = await prisma.bloqueoHorarios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends bloqueoHorariosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, bloqueoHorariosFindFirstArgs<ExtArgs>>
    ): Prisma__bloqueoHorariosClient<$Result.GetResult<Prisma.$bloqueoHorariosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first BloqueoHorarios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bloqueoHorariosFindFirstOrThrowArgs} args - Arguments to find a BloqueoHorarios
     * @example
     * // Get one BloqueoHorarios
     * const bloqueoHorarios = await prisma.bloqueoHorarios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends bloqueoHorariosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, bloqueoHorariosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__bloqueoHorariosClient<$Result.GetResult<Prisma.$bloqueoHorariosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more BloqueoHorarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bloqueoHorariosFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BloqueoHorarios
     * const bloqueoHorarios = await prisma.bloqueoHorarios.findMany()
     * 
     * // Get first 10 BloqueoHorarios
     * const bloqueoHorarios = await prisma.bloqueoHorarios.findMany({ take: 10 })
     * 
     * // Only select the `bloqueoID`
     * const bloqueoHorariosWithBloqueoIDOnly = await prisma.bloqueoHorarios.findMany({ select: { bloqueoID: true } })
     * 
    **/
    findMany<T extends bloqueoHorariosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, bloqueoHorariosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bloqueoHorariosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a BloqueoHorarios.
     * @param {bloqueoHorariosCreateArgs} args - Arguments to create a BloqueoHorarios.
     * @example
     * // Create one BloqueoHorarios
     * const BloqueoHorarios = await prisma.bloqueoHorarios.create({
     *   data: {
     *     // ... data to create a BloqueoHorarios
     *   }
     * })
     * 
    **/
    create<T extends bloqueoHorariosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, bloqueoHorariosCreateArgs<ExtArgs>>
    ): Prisma__bloqueoHorariosClient<$Result.GetResult<Prisma.$bloqueoHorariosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many BloqueoHorarios.
     *     @param {bloqueoHorariosCreateManyArgs} args - Arguments to create many BloqueoHorarios.
     *     @example
     *     // Create many BloqueoHorarios
     *     const bloqueoHorarios = await prisma.bloqueoHorarios.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends bloqueoHorariosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, bloqueoHorariosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a BloqueoHorarios.
     * @param {bloqueoHorariosDeleteArgs} args - Arguments to delete one BloqueoHorarios.
     * @example
     * // Delete one BloqueoHorarios
     * const BloqueoHorarios = await prisma.bloqueoHorarios.delete({
     *   where: {
     *     // ... filter to delete one BloqueoHorarios
     *   }
     * })
     * 
    **/
    delete<T extends bloqueoHorariosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, bloqueoHorariosDeleteArgs<ExtArgs>>
    ): Prisma__bloqueoHorariosClient<$Result.GetResult<Prisma.$bloqueoHorariosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one BloqueoHorarios.
     * @param {bloqueoHorariosUpdateArgs} args - Arguments to update one BloqueoHorarios.
     * @example
     * // Update one BloqueoHorarios
     * const bloqueoHorarios = await prisma.bloqueoHorarios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends bloqueoHorariosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, bloqueoHorariosUpdateArgs<ExtArgs>>
    ): Prisma__bloqueoHorariosClient<$Result.GetResult<Prisma.$bloqueoHorariosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more BloqueoHorarios.
     * @param {bloqueoHorariosDeleteManyArgs} args - Arguments to filter BloqueoHorarios to delete.
     * @example
     * // Delete a few BloqueoHorarios
     * const { count } = await prisma.bloqueoHorarios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends bloqueoHorariosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, bloqueoHorariosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BloqueoHorarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bloqueoHorariosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BloqueoHorarios
     * const bloqueoHorarios = await prisma.bloqueoHorarios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends bloqueoHorariosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, bloqueoHorariosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one BloqueoHorarios.
     * @param {bloqueoHorariosUpsertArgs} args - Arguments to update or create a BloqueoHorarios.
     * @example
     * // Update or create a BloqueoHorarios
     * const bloqueoHorarios = await prisma.bloqueoHorarios.upsert({
     *   create: {
     *     // ... data to create a BloqueoHorarios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BloqueoHorarios we want to update
     *   }
     * })
    **/
    upsert<T extends bloqueoHorariosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, bloqueoHorariosUpsertArgs<ExtArgs>>
    ): Prisma__bloqueoHorariosClient<$Result.GetResult<Prisma.$bloqueoHorariosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of BloqueoHorarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bloqueoHorariosCountArgs} args - Arguments to filter BloqueoHorarios to count.
     * @example
     * // Count the number of BloqueoHorarios
     * const count = await prisma.bloqueoHorarios.count({
     *   where: {
     *     // ... the filter for the BloqueoHorarios we want to count
     *   }
     * })
    **/
    count<T extends bloqueoHorariosCountArgs>(
      args?: Subset<T, bloqueoHorariosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BloqueoHorariosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BloqueoHorarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BloqueoHorariosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BloqueoHorariosAggregateArgs>(args: Subset<T, BloqueoHorariosAggregateArgs>): Prisma.PrismaPromise<GetBloqueoHorariosAggregateType<T>>

    /**
     * Group by BloqueoHorarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bloqueoHorariosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends bloqueoHorariosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: bloqueoHorariosGroupByArgs['orderBy'] }
        : { orderBy?: bloqueoHorariosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, bloqueoHorariosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBloqueoHorariosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the bloqueoHorarios model
   */
  readonly fields: bloqueoHorariosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for bloqueoHorarios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__bloqueoHorariosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    estilistas<T extends bloqueoHorarios$estilistasArgs<ExtArgs> = {}>(args?: Subset<T, bloqueoHorarios$estilistasArgs<ExtArgs>>): Prisma__estilistasClient<$Result.GetResult<Prisma.$estilistasPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the bloqueoHorarios model
   */ 
  interface bloqueoHorariosFieldRefs {
    readonly bloqueoID: FieldRef<"bloqueoHorarios", 'Int'>
    readonly estilistaID: FieldRef<"bloqueoHorarios", 'Int'>
    readonly dia: FieldRef<"bloqueoHorarios", 'String'>
    readonly horaInicio: FieldRef<"bloqueoHorarios", 'DateTime'>
    readonly horaFinal: FieldRef<"bloqueoHorarios", 'DateTime'>
    readonly motivo: FieldRef<"bloqueoHorarios", 'String'>
  }
    

  // Custom InputTypes

  /**
   * bloqueoHorarios findUnique
   */
  export type bloqueoHorariosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bloqueoHorarios
     */
    select?: bloqueoHorariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: bloqueoHorariosInclude<ExtArgs> | null
    /**
     * Filter, which bloqueoHorarios to fetch.
     */
    where: bloqueoHorariosWhereUniqueInput
  }


  /**
   * bloqueoHorarios findUniqueOrThrow
   */
  export type bloqueoHorariosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bloqueoHorarios
     */
    select?: bloqueoHorariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: bloqueoHorariosInclude<ExtArgs> | null
    /**
     * Filter, which bloqueoHorarios to fetch.
     */
    where: bloqueoHorariosWhereUniqueInput
  }


  /**
   * bloqueoHorarios findFirst
   */
  export type bloqueoHorariosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bloqueoHorarios
     */
    select?: bloqueoHorariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: bloqueoHorariosInclude<ExtArgs> | null
    /**
     * Filter, which bloqueoHorarios to fetch.
     */
    where?: bloqueoHorariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bloqueoHorarios to fetch.
     */
    orderBy?: bloqueoHorariosOrderByWithRelationInput | bloqueoHorariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for bloqueoHorarios.
     */
    cursor?: bloqueoHorariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bloqueoHorarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bloqueoHorarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of bloqueoHorarios.
     */
    distinct?: BloqueoHorariosScalarFieldEnum | BloqueoHorariosScalarFieldEnum[]
  }


  /**
   * bloqueoHorarios findFirstOrThrow
   */
  export type bloqueoHorariosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bloqueoHorarios
     */
    select?: bloqueoHorariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: bloqueoHorariosInclude<ExtArgs> | null
    /**
     * Filter, which bloqueoHorarios to fetch.
     */
    where?: bloqueoHorariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bloqueoHorarios to fetch.
     */
    orderBy?: bloqueoHorariosOrderByWithRelationInput | bloqueoHorariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for bloqueoHorarios.
     */
    cursor?: bloqueoHorariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bloqueoHorarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bloqueoHorarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of bloqueoHorarios.
     */
    distinct?: BloqueoHorariosScalarFieldEnum | BloqueoHorariosScalarFieldEnum[]
  }


  /**
   * bloqueoHorarios findMany
   */
  export type bloqueoHorariosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bloqueoHorarios
     */
    select?: bloqueoHorariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: bloqueoHorariosInclude<ExtArgs> | null
    /**
     * Filter, which bloqueoHorarios to fetch.
     */
    where?: bloqueoHorariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bloqueoHorarios to fetch.
     */
    orderBy?: bloqueoHorariosOrderByWithRelationInput | bloqueoHorariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing bloqueoHorarios.
     */
    cursor?: bloqueoHorariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bloqueoHorarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bloqueoHorarios.
     */
    skip?: number
    distinct?: BloqueoHorariosScalarFieldEnum | BloqueoHorariosScalarFieldEnum[]
  }


  /**
   * bloqueoHorarios create
   */
  export type bloqueoHorariosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bloqueoHorarios
     */
    select?: bloqueoHorariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: bloqueoHorariosInclude<ExtArgs> | null
    /**
     * The data needed to create a bloqueoHorarios.
     */
    data?: XOR<bloqueoHorariosCreateInput, bloqueoHorariosUncheckedCreateInput>
  }


  /**
   * bloqueoHorarios createMany
   */
  export type bloqueoHorariosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many bloqueoHorarios.
     */
    data: bloqueoHorariosCreateManyInput | bloqueoHorariosCreateManyInput[]
  }


  /**
   * bloqueoHorarios update
   */
  export type bloqueoHorariosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bloqueoHorarios
     */
    select?: bloqueoHorariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: bloqueoHorariosInclude<ExtArgs> | null
    /**
     * The data needed to update a bloqueoHorarios.
     */
    data: XOR<bloqueoHorariosUpdateInput, bloqueoHorariosUncheckedUpdateInput>
    /**
     * Choose, which bloqueoHorarios to update.
     */
    where: bloqueoHorariosWhereUniqueInput
  }


  /**
   * bloqueoHorarios updateMany
   */
  export type bloqueoHorariosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update bloqueoHorarios.
     */
    data: XOR<bloqueoHorariosUpdateManyMutationInput, bloqueoHorariosUncheckedUpdateManyInput>
    /**
     * Filter which bloqueoHorarios to update
     */
    where?: bloqueoHorariosWhereInput
  }


  /**
   * bloqueoHorarios upsert
   */
  export type bloqueoHorariosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bloqueoHorarios
     */
    select?: bloqueoHorariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: bloqueoHorariosInclude<ExtArgs> | null
    /**
     * The filter to search for the bloqueoHorarios to update in case it exists.
     */
    where: bloqueoHorariosWhereUniqueInput
    /**
     * In case the bloqueoHorarios found by the `where` argument doesn't exist, create a new bloqueoHorarios with this data.
     */
    create: XOR<bloqueoHorariosCreateInput, bloqueoHorariosUncheckedCreateInput>
    /**
     * In case the bloqueoHorarios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<bloqueoHorariosUpdateInput, bloqueoHorariosUncheckedUpdateInput>
  }


  /**
   * bloqueoHorarios delete
   */
  export type bloqueoHorariosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bloqueoHorarios
     */
    select?: bloqueoHorariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: bloqueoHorariosInclude<ExtArgs> | null
    /**
     * Filter which bloqueoHorarios to delete.
     */
    where: bloqueoHorariosWhereUniqueInput
  }


  /**
   * bloqueoHorarios deleteMany
   */
  export type bloqueoHorariosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which bloqueoHorarios to delete
     */
    where?: bloqueoHorariosWhereInput
  }


  /**
   * bloqueoHorarios.estilistas
   */
  export type bloqueoHorarios$estilistasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estilistas
     */
    select?: estilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: estilistasInclude<ExtArgs> | null
    where?: estilistasWhereInput
  }


  /**
   * bloqueoHorarios without action
   */
  export type bloqueoHorariosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bloqueoHorarios
     */
    select?: bloqueoHorariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: bloqueoHorariosInclude<ExtArgs> | null
  }



  /**
   * Model catalogo
   */

  export type AggregateCatalogo = {
    _count: CatalogoCountAggregateOutputType | null
    _avg: CatalogoAvgAggregateOutputType | null
    _sum: CatalogoSumAggregateOutputType | null
    _min: CatalogoMinAggregateOutputType | null
    _max: CatalogoMaxAggregateOutputType | null
  }

  export type CatalogoAvgAggregateOutputType = {
    servicioID: number | null
    precio: number | null
  }

  export type CatalogoSumAggregateOutputType = {
    servicioID: number | null
    precio: number | null
  }

  export type CatalogoMinAggregateOutputType = {
    servicioID: number | null
    nombreServicio: string | null
    descripcion: string | null
    precio: number | null
  }

  export type CatalogoMaxAggregateOutputType = {
    servicioID: number | null
    nombreServicio: string | null
    descripcion: string | null
    precio: number | null
  }

  export type CatalogoCountAggregateOutputType = {
    servicioID: number
    nombreServicio: number
    descripcion: number
    precio: number
    _all: number
  }


  export type CatalogoAvgAggregateInputType = {
    servicioID?: true
    precio?: true
  }

  export type CatalogoSumAggregateInputType = {
    servicioID?: true
    precio?: true
  }

  export type CatalogoMinAggregateInputType = {
    servicioID?: true
    nombreServicio?: true
    descripcion?: true
    precio?: true
  }

  export type CatalogoMaxAggregateInputType = {
    servicioID?: true
    nombreServicio?: true
    descripcion?: true
    precio?: true
  }

  export type CatalogoCountAggregateInputType = {
    servicioID?: true
    nombreServicio?: true
    descripcion?: true
    precio?: true
    _all?: true
  }

  export type CatalogoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which catalogo to aggregate.
     */
    where?: catalogoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of catalogos to fetch.
     */
    orderBy?: catalogoOrderByWithRelationInput | catalogoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: catalogoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` catalogos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` catalogos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned catalogos
    **/
    _count?: true | CatalogoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CatalogoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CatalogoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CatalogoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CatalogoMaxAggregateInputType
  }

  export type GetCatalogoAggregateType<T extends CatalogoAggregateArgs> = {
        [P in keyof T & keyof AggregateCatalogo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCatalogo[P]>
      : GetScalarType<T[P], AggregateCatalogo[P]>
  }




  export type catalogoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: catalogoWhereInput
    orderBy?: catalogoOrderByWithAggregationInput | catalogoOrderByWithAggregationInput[]
    by: CatalogoScalarFieldEnum[] | CatalogoScalarFieldEnum
    having?: catalogoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CatalogoCountAggregateInputType | true
    _avg?: CatalogoAvgAggregateInputType
    _sum?: CatalogoSumAggregateInputType
    _min?: CatalogoMinAggregateInputType
    _max?: CatalogoMaxAggregateInputType
  }

  export type CatalogoGroupByOutputType = {
    servicioID: number
    nombreServicio: string | null
    descripcion: string | null
    precio: number | null
    _count: CatalogoCountAggregateOutputType | null
    _avg: CatalogoAvgAggregateOutputType | null
    _sum: CatalogoSumAggregateOutputType | null
    _min: CatalogoMinAggregateOutputType | null
    _max: CatalogoMaxAggregateOutputType | null
  }

  type GetCatalogoGroupByPayload<T extends catalogoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CatalogoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CatalogoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CatalogoGroupByOutputType[P]>
            : GetScalarType<T[P], CatalogoGroupByOutputType[P]>
        }
      >
    >


  export type catalogoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    servicioID?: boolean
    nombreServicio?: boolean
    descripcion?: boolean
    precio?: boolean
    citas?: boolean | catalogo$citasArgs<ExtArgs>
    detalleServicio?: boolean | catalogo$detalleServicioArgs<ExtArgs>
    historialClientes?: boolean | catalogo$historialClientesArgs<ExtArgs>
    recompensas?: boolean | catalogo$recompensasArgs<ExtArgs>
    reporteClientesCitas?: boolean | catalogo$reporteClientesCitasArgs<ExtArgs>
    _count?: boolean | CatalogoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["catalogo"]>

  export type catalogoSelectScalar = {
    servicioID?: boolean
    nombreServicio?: boolean
    descripcion?: boolean
    precio?: boolean
  }

  export type catalogoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    citas?: boolean | catalogo$citasArgs<ExtArgs>
    detalleServicio?: boolean | catalogo$detalleServicioArgs<ExtArgs>
    historialClientes?: boolean | catalogo$historialClientesArgs<ExtArgs>
    recompensas?: boolean | catalogo$recompensasArgs<ExtArgs>
    reporteClientesCitas?: boolean | catalogo$reporteClientesCitasArgs<ExtArgs>
    _count?: boolean | CatalogoCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $catalogoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "catalogo"
    objects: {
      citas: Prisma.$citasPayload<ExtArgs>[]
      detalleServicio: Prisma.$detalleServicioPayload<ExtArgs>[]
      historialClientes: Prisma.$historialClientesPayload<ExtArgs>[]
      recompensas: Prisma.$recompensasPayload<ExtArgs>[]
      reporteClientesCitas: Prisma.$reporteClientesCitasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      servicioID: number
      nombreServicio: string | null
      descripcion: string | null
      precio: number | null
    }, ExtArgs["result"]["catalogo"]>
    composites: {}
  }


  type catalogoGetPayload<S extends boolean | null | undefined | catalogoDefaultArgs> = $Result.GetResult<Prisma.$catalogoPayload, S>

  type catalogoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<catalogoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CatalogoCountAggregateInputType | true
    }

  export interface catalogoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['catalogo'], meta: { name: 'catalogo' } }
    /**
     * Find zero or one Catalogo that matches the filter.
     * @param {catalogoFindUniqueArgs} args - Arguments to find a Catalogo
     * @example
     * // Get one Catalogo
     * const catalogo = await prisma.catalogo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends catalogoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, catalogoFindUniqueArgs<ExtArgs>>
    ): Prisma__catalogoClient<$Result.GetResult<Prisma.$catalogoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Catalogo that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {catalogoFindUniqueOrThrowArgs} args - Arguments to find a Catalogo
     * @example
     * // Get one Catalogo
     * const catalogo = await prisma.catalogo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends catalogoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, catalogoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__catalogoClient<$Result.GetResult<Prisma.$catalogoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Catalogo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {catalogoFindFirstArgs} args - Arguments to find a Catalogo
     * @example
     * // Get one Catalogo
     * const catalogo = await prisma.catalogo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends catalogoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, catalogoFindFirstArgs<ExtArgs>>
    ): Prisma__catalogoClient<$Result.GetResult<Prisma.$catalogoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Catalogo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {catalogoFindFirstOrThrowArgs} args - Arguments to find a Catalogo
     * @example
     * // Get one Catalogo
     * const catalogo = await prisma.catalogo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends catalogoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, catalogoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__catalogoClient<$Result.GetResult<Prisma.$catalogoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Catalogos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {catalogoFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Catalogos
     * const catalogos = await prisma.catalogo.findMany()
     * 
     * // Get first 10 Catalogos
     * const catalogos = await prisma.catalogo.findMany({ take: 10 })
     * 
     * // Only select the `servicioID`
     * const catalogoWithServicioIDOnly = await prisma.catalogo.findMany({ select: { servicioID: true } })
     * 
    **/
    findMany<T extends catalogoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, catalogoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$catalogoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Catalogo.
     * @param {catalogoCreateArgs} args - Arguments to create a Catalogo.
     * @example
     * // Create one Catalogo
     * const Catalogo = await prisma.catalogo.create({
     *   data: {
     *     // ... data to create a Catalogo
     *   }
     * })
     * 
    **/
    create<T extends catalogoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, catalogoCreateArgs<ExtArgs>>
    ): Prisma__catalogoClient<$Result.GetResult<Prisma.$catalogoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Catalogos.
     *     @param {catalogoCreateManyArgs} args - Arguments to create many Catalogos.
     *     @example
     *     // Create many Catalogos
     *     const catalogo = await prisma.catalogo.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends catalogoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, catalogoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Catalogo.
     * @param {catalogoDeleteArgs} args - Arguments to delete one Catalogo.
     * @example
     * // Delete one Catalogo
     * const Catalogo = await prisma.catalogo.delete({
     *   where: {
     *     // ... filter to delete one Catalogo
     *   }
     * })
     * 
    **/
    delete<T extends catalogoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, catalogoDeleteArgs<ExtArgs>>
    ): Prisma__catalogoClient<$Result.GetResult<Prisma.$catalogoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Catalogo.
     * @param {catalogoUpdateArgs} args - Arguments to update one Catalogo.
     * @example
     * // Update one Catalogo
     * const catalogo = await prisma.catalogo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends catalogoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, catalogoUpdateArgs<ExtArgs>>
    ): Prisma__catalogoClient<$Result.GetResult<Prisma.$catalogoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Catalogos.
     * @param {catalogoDeleteManyArgs} args - Arguments to filter Catalogos to delete.
     * @example
     * // Delete a few Catalogos
     * const { count } = await prisma.catalogo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends catalogoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, catalogoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Catalogos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {catalogoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Catalogos
     * const catalogo = await prisma.catalogo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends catalogoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, catalogoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Catalogo.
     * @param {catalogoUpsertArgs} args - Arguments to update or create a Catalogo.
     * @example
     * // Update or create a Catalogo
     * const catalogo = await prisma.catalogo.upsert({
     *   create: {
     *     // ... data to create a Catalogo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Catalogo we want to update
     *   }
     * })
    **/
    upsert<T extends catalogoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, catalogoUpsertArgs<ExtArgs>>
    ): Prisma__catalogoClient<$Result.GetResult<Prisma.$catalogoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Catalogos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {catalogoCountArgs} args - Arguments to filter Catalogos to count.
     * @example
     * // Count the number of Catalogos
     * const count = await prisma.catalogo.count({
     *   where: {
     *     // ... the filter for the Catalogos we want to count
     *   }
     * })
    **/
    count<T extends catalogoCountArgs>(
      args?: Subset<T, catalogoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CatalogoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Catalogo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CatalogoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CatalogoAggregateArgs>(args: Subset<T, CatalogoAggregateArgs>): Prisma.PrismaPromise<GetCatalogoAggregateType<T>>

    /**
     * Group by Catalogo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {catalogoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends catalogoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: catalogoGroupByArgs['orderBy'] }
        : { orderBy?: catalogoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, catalogoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCatalogoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the catalogo model
   */
  readonly fields: catalogoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for catalogo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__catalogoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    citas<T extends catalogo$citasArgs<ExtArgs> = {}>(args?: Subset<T, catalogo$citasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, 'findMany'> | Null>;

    detalleServicio<T extends catalogo$detalleServicioArgs<ExtArgs> = {}>(args?: Subset<T, catalogo$detalleServicioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalleServicioPayload<ExtArgs>, T, 'findMany'> | Null>;

    historialClientes<T extends catalogo$historialClientesArgs<ExtArgs> = {}>(args?: Subset<T, catalogo$historialClientesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historialClientesPayload<ExtArgs>, T, 'findMany'> | Null>;

    recompensas<T extends catalogo$recompensasArgs<ExtArgs> = {}>(args?: Subset<T, catalogo$recompensasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$recompensasPayload<ExtArgs>, T, 'findMany'> | Null>;

    reporteClientesCitas<T extends catalogo$reporteClientesCitasArgs<ExtArgs> = {}>(args?: Subset<T, catalogo$reporteClientesCitasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reporteClientesCitasPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the catalogo model
   */ 
  interface catalogoFieldRefs {
    readonly servicioID: FieldRef<"catalogo", 'Int'>
    readonly nombreServicio: FieldRef<"catalogo", 'String'>
    readonly descripcion: FieldRef<"catalogo", 'String'>
    readonly precio: FieldRef<"catalogo", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * catalogo findUnique
   */
  export type catalogoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the catalogo
     */
    select?: catalogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catalogoInclude<ExtArgs> | null
    /**
     * Filter, which catalogo to fetch.
     */
    where: catalogoWhereUniqueInput
  }


  /**
   * catalogo findUniqueOrThrow
   */
  export type catalogoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the catalogo
     */
    select?: catalogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catalogoInclude<ExtArgs> | null
    /**
     * Filter, which catalogo to fetch.
     */
    where: catalogoWhereUniqueInput
  }


  /**
   * catalogo findFirst
   */
  export type catalogoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the catalogo
     */
    select?: catalogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catalogoInclude<ExtArgs> | null
    /**
     * Filter, which catalogo to fetch.
     */
    where?: catalogoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of catalogos to fetch.
     */
    orderBy?: catalogoOrderByWithRelationInput | catalogoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for catalogos.
     */
    cursor?: catalogoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` catalogos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` catalogos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of catalogos.
     */
    distinct?: CatalogoScalarFieldEnum | CatalogoScalarFieldEnum[]
  }


  /**
   * catalogo findFirstOrThrow
   */
  export type catalogoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the catalogo
     */
    select?: catalogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catalogoInclude<ExtArgs> | null
    /**
     * Filter, which catalogo to fetch.
     */
    where?: catalogoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of catalogos to fetch.
     */
    orderBy?: catalogoOrderByWithRelationInput | catalogoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for catalogos.
     */
    cursor?: catalogoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` catalogos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` catalogos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of catalogos.
     */
    distinct?: CatalogoScalarFieldEnum | CatalogoScalarFieldEnum[]
  }


  /**
   * catalogo findMany
   */
  export type catalogoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the catalogo
     */
    select?: catalogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catalogoInclude<ExtArgs> | null
    /**
     * Filter, which catalogos to fetch.
     */
    where?: catalogoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of catalogos to fetch.
     */
    orderBy?: catalogoOrderByWithRelationInput | catalogoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing catalogos.
     */
    cursor?: catalogoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` catalogos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` catalogos.
     */
    skip?: number
    distinct?: CatalogoScalarFieldEnum | CatalogoScalarFieldEnum[]
  }


  /**
   * catalogo create
   */
  export type catalogoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the catalogo
     */
    select?: catalogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catalogoInclude<ExtArgs> | null
    /**
     * The data needed to create a catalogo.
     */
    data?: XOR<catalogoCreateInput, catalogoUncheckedCreateInput>
  }


  /**
   * catalogo createMany
   */
  export type catalogoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many catalogos.
     */
    data: catalogoCreateManyInput | catalogoCreateManyInput[]
  }


  /**
   * catalogo update
   */
  export type catalogoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the catalogo
     */
    select?: catalogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catalogoInclude<ExtArgs> | null
    /**
     * The data needed to update a catalogo.
     */
    data: XOR<catalogoUpdateInput, catalogoUncheckedUpdateInput>
    /**
     * Choose, which catalogo to update.
     */
    where: catalogoWhereUniqueInput
  }


  /**
   * catalogo updateMany
   */
  export type catalogoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update catalogos.
     */
    data: XOR<catalogoUpdateManyMutationInput, catalogoUncheckedUpdateManyInput>
    /**
     * Filter which catalogos to update
     */
    where?: catalogoWhereInput
  }


  /**
   * catalogo upsert
   */
  export type catalogoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the catalogo
     */
    select?: catalogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catalogoInclude<ExtArgs> | null
    /**
     * The filter to search for the catalogo to update in case it exists.
     */
    where: catalogoWhereUniqueInput
    /**
     * In case the catalogo found by the `where` argument doesn't exist, create a new catalogo with this data.
     */
    create: XOR<catalogoCreateInput, catalogoUncheckedCreateInput>
    /**
     * In case the catalogo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<catalogoUpdateInput, catalogoUncheckedUpdateInput>
  }


  /**
   * catalogo delete
   */
  export type catalogoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the catalogo
     */
    select?: catalogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catalogoInclude<ExtArgs> | null
    /**
     * Filter which catalogo to delete.
     */
    where: catalogoWhereUniqueInput
  }


  /**
   * catalogo deleteMany
   */
  export type catalogoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which catalogos to delete
     */
    where?: catalogoWhereInput
  }


  /**
   * catalogo.citas
   */
  export type catalogo$citasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasInclude<ExtArgs> | null
    where?: citasWhereInput
    orderBy?: citasOrderByWithRelationInput | citasOrderByWithRelationInput[]
    cursor?: citasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CitasScalarFieldEnum | CitasScalarFieldEnum[]
  }


  /**
   * catalogo.detalleServicio
   */
  export type catalogo$detalleServicioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleServicio
     */
    select?: detalleServicioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: detalleServicioInclude<ExtArgs> | null
    where?: detalleServicioWhereInput
    orderBy?: detalleServicioOrderByWithRelationInput | detalleServicioOrderByWithRelationInput[]
    cursor?: detalleServicioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetalleServicioScalarFieldEnum | DetalleServicioScalarFieldEnum[]
  }


  /**
   * catalogo.historialClientes
   */
  export type catalogo$historialClientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialClientes
     */
    select?: historialClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialClientesInclude<ExtArgs> | null
    where?: historialClientesWhereInput
    orderBy?: historialClientesOrderByWithRelationInput | historialClientesOrderByWithRelationInput[]
    cursor?: historialClientesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HistorialClientesScalarFieldEnum | HistorialClientesScalarFieldEnum[]
  }


  /**
   * catalogo.recompensas
   */
  export type catalogo$recompensasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the recompensas
     */
    select?: recompensasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: recompensasInclude<ExtArgs> | null
    where?: recompensasWhereInput
    orderBy?: recompensasOrderByWithRelationInput | recompensasOrderByWithRelationInput[]
    cursor?: recompensasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RecompensasScalarFieldEnum | RecompensasScalarFieldEnum[]
  }


  /**
   * catalogo.reporteClientesCitas
   */
  export type catalogo$reporteClientesCitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteClientesCitas
     */
    select?: reporteClientesCitasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteClientesCitasInclude<ExtArgs> | null
    where?: reporteClientesCitasWhereInput
    orderBy?: reporteClientesCitasOrderByWithRelationInput | reporteClientesCitasOrderByWithRelationInput[]
    cursor?: reporteClientesCitasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReporteClientesCitasScalarFieldEnum | ReporteClientesCitasScalarFieldEnum[]
  }


  /**
   * catalogo without action
   */
  export type catalogoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the catalogo
     */
    select?: catalogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catalogoInclude<ExtArgs> | null
  }



  /**
   * Model citas
   */

  export type AggregateCitas = {
    _count: CitasCountAggregateOutputType | null
    _avg: CitasAvgAggregateOutputType | null
    _sum: CitasSumAggregateOutputType | null
    _min: CitasMinAggregateOutputType | null
    _max: CitasMaxAggregateOutputType | null
  }

  export type CitasAvgAggregateOutputType = {
    citaID: number | null
    clienteID: number | null
    estilistaID: number | null
    servicioID: number | null
    estiloID: number | null
  }

  export type CitasSumAggregateOutputType = {
    citaID: number | null
    clienteID: number | null
    estilistaID: number | null
    servicioID: number | null
    estiloID: number | null
  }

  export type CitasMinAggregateOutputType = {
    citaID: number | null
    clienteID: number | null
    estilistaID: number | null
    servicioID: number | null
    fechaCita: Date | null
    estiloID: number | null
    comentarios: string | null
  }

  export type CitasMaxAggregateOutputType = {
    citaID: number | null
    clienteID: number | null
    estilistaID: number | null
    servicioID: number | null
    fechaCita: Date | null
    estiloID: number | null
    comentarios: string | null
  }

  export type CitasCountAggregateOutputType = {
    citaID: number
    clienteID: number
    estilistaID: number
    servicioID: number
    fechaCita: number
    estiloID: number
    comentarios: number
    _all: number
  }


  export type CitasAvgAggregateInputType = {
    citaID?: true
    clienteID?: true
    estilistaID?: true
    servicioID?: true
    estiloID?: true
  }

  export type CitasSumAggregateInputType = {
    citaID?: true
    clienteID?: true
    estilistaID?: true
    servicioID?: true
    estiloID?: true
  }

  export type CitasMinAggregateInputType = {
    citaID?: true
    clienteID?: true
    estilistaID?: true
    servicioID?: true
    fechaCita?: true
    estiloID?: true
    comentarios?: true
  }

  export type CitasMaxAggregateInputType = {
    citaID?: true
    clienteID?: true
    estilistaID?: true
    servicioID?: true
    fechaCita?: true
    estiloID?: true
    comentarios?: true
  }

  export type CitasCountAggregateInputType = {
    citaID?: true
    clienteID?: true
    estilistaID?: true
    servicioID?: true
    fechaCita?: true
    estiloID?: true
    comentarios?: true
    _all?: true
  }

  export type CitasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which citas to aggregate.
     */
    where?: citasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of citas to fetch.
     */
    orderBy?: citasOrderByWithRelationInput | citasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: citasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` citas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` citas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned citas
    **/
    _count?: true | CitasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CitasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CitasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CitasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CitasMaxAggregateInputType
  }

  export type GetCitasAggregateType<T extends CitasAggregateArgs> = {
        [P in keyof T & keyof AggregateCitas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCitas[P]>
      : GetScalarType<T[P], AggregateCitas[P]>
  }




  export type citasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: citasWhereInput
    orderBy?: citasOrderByWithAggregationInput | citasOrderByWithAggregationInput[]
    by: CitasScalarFieldEnum[] | CitasScalarFieldEnum
    having?: citasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CitasCountAggregateInputType | true
    _avg?: CitasAvgAggregateInputType
    _sum?: CitasSumAggregateInputType
    _min?: CitasMinAggregateInputType
    _max?: CitasMaxAggregateInputType
  }

  export type CitasGroupByOutputType = {
    citaID: number
    clienteID: number | null
    estilistaID: number | null
    servicioID: number | null
    fechaCita: Date | null
    estiloID: number | null
    comentarios: string | null
    _count: CitasCountAggregateOutputType | null
    _avg: CitasAvgAggregateOutputType | null
    _sum: CitasSumAggregateOutputType | null
    _min: CitasMinAggregateOutputType | null
    _max: CitasMaxAggregateOutputType | null
  }

  type GetCitasGroupByPayload<T extends citasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CitasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CitasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CitasGroupByOutputType[P]>
            : GetScalarType<T[P], CitasGroupByOutputType[P]>
        }
      >
    >


  export type citasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    citaID?: boolean
    clienteID?: boolean
    estilistaID?: boolean
    servicioID?: boolean
    fechaCita?: boolean
    estiloID?: boolean
    comentarios?: boolean
    clientes?: boolean | citas$clientesArgs<ExtArgs>
    estilistas?: boolean | citas$estilistasArgs<ExtArgs>
    galeriaEstilos?: boolean | citas$galeriaEstilosArgs<ExtArgs>
    catalogo?: boolean | citas$catalogoArgs<ExtArgs>
    citasReagendadas?: boolean | citas$citasReagendadasArgs<ExtArgs>
    historialCitas?: boolean | citas$historialCitasArgs<ExtArgs>
    reporteCitasPendientes?: boolean | citas$reporteCitasPendientesArgs<ExtArgs>
    reporteClientesCitas?: boolean | citas$reporteClientesCitasArgs<ExtArgs>
    _count?: boolean | CitasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["citas"]>

  export type citasSelectScalar = {
    citaID?: boolean
    clienteID?: boolean
    estilistaID?: boolean
    servicioID?: boolean
    fechaCita?: boolean
    estiloID?: boolean
    comentarios?: boolean
  }

  export type citasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clientes?: boolean | citas$clientesArgs<ExtArgs>
    estilistas?: boolean | citas$estilistasArgs<ExtArgs>
    galeriaEstilos?: boolean | citas$galeriaEstilosArgs<ExtArgs>
    catalogo?: boolean | citas$catalogoArgs<ExtArgs>
    citasReagendadas?: boolean | citas$citasReagendadasArgs<ExtArgs>
    historialCitas?: boolean | citas$historialCitasArgs<ExtArgs>
    reporteCitasPendientes?: boolean | citas$reporteCitasPendientesArgs<ExtArgs>
    reporteClientesCitas?: boolean | citas$reporteClientesCitasArgs<ExtArgs>
    _count?: boolean | CitasCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $citasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "citas"
    objects: {
      clientes: Prisma.$clientesPayload<ExtArgs> | null
      estilistas: Prisma.$estilistasPayload<ExtArgs> | null
      galeriaEstilos: Prisma.$galeriaEstilosPayload<ExtArgs> | null
      catalogo: Prisma.$catalogoPayload<ExtArgs> | null
      citasReagendadas: Prisma.$citasReagendadasPayload<ExtArgs>[]
      historialCitas: Prisma.$historialCitasPayload<ExtArgs>[]
      reporteCitasPendientes: Prisma.$reporteCitasPendientesPayload<ExtArgs>[]
      reporteClientesCitas: Prisma.$reporteClientesCitasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      citaID: number
      clienteID: number | null
      estilistaID: number | null
      servicioID: number | null
      fechaCita: Date | null
      estiloID: number | null
      comentarios: string | null
    }, ExtArgs["result"]["citas"]>
    composites: {}
  }


  type citasGetPayload<S extends boolean | null | undefined | citasDefaultArgs> = $Result.GetResult<Prisma.$citasPayload, S>

  type citasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<citasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CitasCountAggregateInputType | true
    }

  export interface citasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['citas'], meta: { name: 'citas' } }
    /**
     * Find zero or one Citas that matches the filter.
     * @param {citasFindUniqueArgs} args - Arguments to find a Citas
     * @example
     * // Get one Citas
     * const citas = await prisma.citas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends citasFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, citasFindUniqueArgs<ExtArgs>>
    ): Prisma__citasClient<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Citas that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {citasFindUniqueOrThrowArgs} args - Arguments to find a Citas
     * @example
     * // Get one Citas
     * const citas = await prisma.citas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends citasFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, citasFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__citasClient<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Citas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {citasFindFirstArgs} args - Arguments to find a Citas
     * @example
     * // Get one Citas
     * const citas = await prisma.citas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends citasFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, citasFindFirstArgs<ExtArgs>>
    ): Prisma__citasClient<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Citas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {citasFindFirstOrThrowArgs} args - Arguments to find a Citas
     * @example
     * // Get one Citas
     * const citas = await prisma.citas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends citasFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, citasFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__citasClient<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Citas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {citasFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Citas
     * const citas = await prisma.citas.findMany()
     * 
     * // Get first 10 Citas
     * const citas = await prisma.citas.findMany({ take: 10 })
     * 
     * // Only select the `citaID`
     * const citasWithCitaIDOnly = await prisma.citas.findMany({ select: { citaID: true } })
     * 
    **/
    findMany<T extends citasFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, citasFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Citas.
     * @param {citasCreateArgs} args - Arguments to create a Citas.
     * @example
     * // Create one Citas
     * const Citas = await prisma.citas.create({
     *   data: {
     *     // ... data to create a Citas
     *   }
     * })
     * 
    **/
    create<T extends citasCreateArgs<ExtArgs>>(
      args: SelectSubset<T, citasCreateArgs<ExtArgs>>
    ): Prisma__citasClient<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Citas.
     *     @param {citasCreateManyArgs} args - Arguments to create many Citas.
     *     @example
     *     // Create many Citas
     *     const citas = await prisma.citas.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends citasCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, citasCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Citas.
     * @param {citasDeleteArgs} args - Arguments to delete one Citas.
     * @example
     * // Delete one Citas
     * const Citas = await prisma.citas.delete({
     *   where: {
     *     // ... filter to delete one Citas
     *   }
     * })
     * 
    **/
    delete<T extends citasDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, citasDeleteArgs<ExtArgs>>
    ): Prisma__citasClient<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Citas.
     * @param {citasUpdateArgs} args - Arguments to update one Citas.
     * @example
     * // Update one Citas
     * const citas = await prisma.citas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends citasUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, citasUpdateArgs<ExtArgs>>
    ): Prisma__citasClient<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Citas.
     * @param {citasDeleteManyArgs} args - Arguments to filter Citas to delete.
     * @example
     * // Delete a few Citas
     * const { count } = await prisma.citas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends citasDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, citasDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Citas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {citasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Citas
     * const citas = await prisma.citas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends citasUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, citasUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Citas.
     * @param {citasUpsertArgs} args - Arguments to update or create a Citas.
     * @example
     * // Update or create a Citas
     * const citas = await prisma.citas.upsert({
     *   create: {
     *     // ... data to create a Citas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Citas we want to update
     *   }
     * })
    **/
    upsert<T extends citasUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, citasUpsertArgs<ExtArgs>>
    ): Prisma__citasClient<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Citas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {citasCountArgs} args - Arguments to filter Citas to count.
     * @example
     * // Count the number of Citas
     * const count = await prisma.citas.count({
     *   where: {
     *     // ... the filter for the Citas we want to count
     *   }
     * })
    **/
    count<T extends citasCountArgs>(
      args?: Subset<T, citasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CitasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Citas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CitasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CitasAggregateArgs>(args: Subset<T, CitasAggregateArgs>): Prisma.PrismaPromise<GetCitasAggregateType<T>>

    /**
     * Group by Citas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {citasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends citasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: citasGroupByArgs['orderBy'] }
        : { orderBy?: citasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, citasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCitasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the citas model
   */
  readonly fields: citasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for citas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__citasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    clientes<T extends citas$clientesArgs<ExtArgs> = {}>(args?: Subset<T, citas$clientesArgs<ExtArgs>>): Prisma__clientesClient<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    estilistas<T extends citas$estilistasArgs<ExtArgs> = {}>(args?: Subset<T, citas$estilistasArgs<ExtArgs>>): Prisma__estilistasClient<$Result.GetResult<Prisma.$estilistasPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    galeriaEstilos<T extends citas$galeriaEstilosArgs<ExtArgs> = {}>(args?: Subset<T, citas$galeriaEstilosArgs<ExtArgs>>): Prisma__galeriaEstilosClient<$Result.GetResult<Prisma.$galeriaEstilosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    catalogo<T extends citas$catalogoArgs<ExtArgs> = {}>(args?: Subset<T, citas$catalogoArgs<ExtArgs>>): Prisma__catalogoClient<$Result.GetResult<Prisma.$catalogoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    citasReagendadas<T extends citas$citasReagendadasArgs<ExtArgs> = {}>(args?: Subset<T, citas$citasReagendadasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$citasReagendadasPayload<ExtArgs>, T, 'findMany'> | Null>;

    historialCitas<T extends citas$historialCitasArgs<ExtArgs> = {}>(args?: Subset<T, citas$historialCitasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historialCitasPayload<ExtArgs>, T, 'findMany'> | Null>;

    reporteCitasPendientes<T extends citas$reporteCitasPendientesArgs<ExtArgs> = {}>(args?: Subset<T, citas$reporteCitasPendientesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reporteCitasPendientesPayload<ExtArgs>, T, 'findMany'> | Null>;

    reporteClientesCitas<T extends citas$reporteClientesCitasArgs<ExtArgs> = {}>(args?: Subset<T, citas$reporteClientesCitasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reporteClientesCitasPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the citas model
   */ 
  interface citasFieldRefs {
    readonly citaID: FieldRef<"citas", 'Int'>
    readonly clienteID: FieldRef<"citas", 'Int'>
    readonly estilistaID: FieldRef<"citas", 'Int'>
    readonly servicioID: FieldRef<"citas", 'Int'>
    readonly fechaCita: FieldRef<"citas", 'DateTime'>
    readonly estiloID: FieldRef<"citas", 'Int'>
    readonly comentarios: FieldRef<"citas", 'String'>
  }
    

  // Custom InputTypes

  /**
   * citas findUnique
   */
  export type citasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasInclude<ExtArgs> | null
    /**
     * Filter, which citas to fetch.
     */
    where: citasWhereUniqueInput
  }


  /**
   * citas findUniqueOrThrow
   */
  export type citasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasInclude<ExtArgs> | null
    /**
     * Filter, which citas to fetch.
     */
    where: citasWhereUniqueInput
  }


  /**
   * citas findFirst
   */
  export type citasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasInclude<ExtArgs> | null
    /**
     * Filter, which citas to fetch.
     */
    where?: citasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of citas to fetch.
     */
    orderBy?: citasOrderByWithRelationInput | citasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for citas.
     */
    cursor?: citasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` citas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` citas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of citas.
     */
    distinct?: CitasScalarFieldEnum | CitasScalarFieldEnum[]
  }


  /**
   * citas findFirstOrThrow
   */
  export type citasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasInclude<ExtArgs> | null
    /**
     * Filter, which citas to fetch.
     */
    where?: citasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of citas to fetch.
     */
    orderBy?: citasOrderByWithRelationInput | citasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for citas.
     */
    cursor?: citasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` citas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` citas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of citas.
     */
    distinct?: CitasScalarFieldEnum | CitasScalarFieldEnum[]
  }


  /**
   * citas findMany
   */
  export type citasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasInclude<ExtArgs> | null
    /**
     * Filter, which citas to fetch.
     */
    where?: citasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of citas to fetch.
     */
    orderBy?: citasOrderByWithRelationInput | citasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing citas.
     */
    cursor?: citasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` citas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` citas.
     */
    skip?: number
    distinct?: CitasScalarFieldEnum | CitasScalarFieldEnum[]
  }


  /**
   * citas create
   */
  export type citasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasInclude<ExtArgs> | null
    /**
     * The data needed to create a citas.
     */
    data?: XOR<citasCreateInput, citasUncheckedCreateInput>
  }


  /**
   * citas createMany
   */
  export type citasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many citas.
     */
    data: citasCreateManyInput | citasCreateManyInput[]
  }


  /**
   * citas update
   */
  export type citasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasInclude<ExtArgs> | null
    /**
     * The data needed to update a citas.
     */
    data: XOR<citasUpdateInput, citasUncheckedUpdateInput>
    /**
     * Choose, which citas to update.
     */
    where: citasWhereUniqueInput
  }


  /**
   * citas updateMany
   */
  export type citasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update citas.
     */
    data: XOR<citasUpdateManyMutationInput, citasUncheckedUpdateManyInput>
    /**
     * Filter which citas to update
     */
    where?: citasWhereInput
  }


  /**
   * citas upsert
   */
  export type citasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasInclude<ExtArgs> | null
    /**
     * The filter to search for the citas to update in case it exists.
     */
    where: citasWhereUniqueInput
    /**
     * In case the citas found by the `where` argument doesn't exist, create a new citas with this data.
     */
    create: XOR<citasCreateInput, citasUncheckedCreateInput>
    /**
     * In case the citas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<citasUpdateInput, citasUncheckedUpdateInput>
  }


  /**
   * citas delete
   */
  export type citasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasInclude<ExtArgs> | null
    /**
     * Filter which citas to delete.
     */
    where: citasWhereUniqueInput
  }


  /**
   * citas deleteMany
   */
  export type citasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which citas to delete
     */
    where?: citasWhereInput
  }


  /**
   * citas.clientes
   */
  export type citas$clientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: clientesInclude<ExtArgs> | null
    where?: clientesWhereInput
  }


  /**
   * citas.estilistas
   */
  export type citas$estilistasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estilistas
     */
    select?: estilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: estilistasInclude<ExtArgs> | null
    where?: estilistasWhereInput
  }


  /**
   * citas.galeriaEstilos
   */
  export type citas$galeriaEstilosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the galeriaEstilos
     */
    select?: galeriaEstilosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: galeriaEstilosInclude<ExtArgs> | null
    where?: galeriaEstilosWhereInput
  }


  /**
   * citas.catalogo
   */
  export type citas$catalogoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the catalogo
     */
    select?: catalogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catalogoInclude<ExtArgs> | null
    where?: catalogoWhereInput
  }


  /**
   * citas.citasReagendadas
   */
  export type citas$citasReagendadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citasReagendadas
     */
    select?: citasReagendadasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasReagendadasInclude<ExtArgs> | null
    where?: citasReagendadasWhereInput
    orderBy?: citasReagendadasOrderByWithRelationInput | citasReagendadasOrderByWithRelationInput[]
    cursor?: citasReagendadasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CitasReagendadasScalarFieldEnum | CitasReagendadasScalarFieldEnum[]
  }


  /**
   * citas.historialCitas
   */
  export type citas$historialCitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialCitas
     */
    select?: historialCitasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialCitasInclude<ExtArgs> | null
    where?: historialCitasWhereInput
    orderBy?: historialCitasOrderByWithRelationInput | historialCitasOrderByWithRelationInput[]
    cursor?: historialCitasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HistorialCitasScalarFieldEnum | HistorialCitasScalarFieldEnum[]
  }


  /**
   * citas.reporteCitasPendientes
   */
  export type citas$reporteCitasPendientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteCitasPendientes
     */
    select?: reporteCitasPendientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteCitasPendientesInclude<ExtArgs> | null
    where?: reporteCitasPendientesWhereInput
    orderBy?: reporteCitasPendientesOrderByWithRelationInput | reporteCitasPendientesOrderByWithRelationInput[]
    cursor?: reporteCitasPendientesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReporteCitasPendientesScalarFieldEnum | ReporteCitasPendientesScalarFieldEnum[]
  }


  /**
   * citas.reporteClientesCitas
   */
  export type citas$reporteClientesCitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteClientesCitas
     */
    select?: reporteClientesCitasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteClientesCitasInclude<ExtArgs> | null
    where?: reporteClientesCitasWhereInput
    orderBy?: reporteClientesCitasOrderByWithRelationInput | reporteClientesCitasOrderByWithRelationInput[]
    cursor?: reporteClientesCitasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReporteClientesCitasScalarFieldEnum | ReporteClientesCitasScalarFieldEnum[]
  }


  /**
   * citas without action
   */
  export type citasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasInclude<ExtArgs> | null
  }



  /**
   * Model citasReagendadas
   */

  export type AggregateCitasReagendadas = {
    _count: CitasReagendadasCountAggregateOutputType | null
    _avg: CitasReagendadasAvgAggregateOutputType | null
    _sum: CitasReagendadasSumAggregateOutputType | null
    _min: CitasReagendadasMinAggregateOutputType | null
    _max: CitasReagendadasMaxAggregateOutputType | null
  }

  export type CitasReagendadasAvgAggregateOutputType = {
    reagendadaID: number | null
    citaID: number | null
    idCitaNueva: number | null
  }

  export type CitasReagendadasSumAggregateOutputType = {
    reagendadaID: number | null
    citaID: number | null
    idCitaNueva: number | null
  }

  export type CitasReagendadasMinAggregateOutputType = {
    reagendadaID: number | null
    citaID: number | null
    idCitaNueva: number | null
    fechaNuevaCita: Date | null
    motivo: string | null
  }

  export type CitasReagendadasMaxAggregateOutputType = {
    reagendadaID: number | null
    citaID: number | null
    idCitaNueva: number | null
    fechaNuevaCita: Date | null
    motivo: string | null
  }

  export type CitasReagendadasCountAggregateOutputType = {
    reagendadaID: number
    citaID: number
    idCitaNueva: number
    fechaNuevaCita: number
    motivo: number
    _all: number
  }


  export type CitasReagendadasAvgAggregateInputType = {
    reagendadaID?: true
    citaID?: true
    idCitaNueva?: true
  }

  export type CitasReagendadasSumAggregateInputType = {
    reagendadaID?: true
    citaID?: true
    idCitaNueva?: true
  }

  export type CitasReagendadasMinAggregateInputType = {
    reagendadaID?: true
    citaID?: true
    idCitaNueva?: true
    fechaNuevaCita?: true
    motivo?: true
  }

  export type CitasReagendadasMaxAggregateInputType = {
    reagendadaID?: true
    citaID?: true
    idCitaNueva?: true
    fechaNuevaCita?: true
    motivo?: true
  }

  export type CitasReagendadasCountAggregateInputType = {
    reagendadaID?: true
    citaID?: true
    idCitaNueva?: true
    fechaNuevaCita?: true
    motivo?: true
    _all?: true
  }

  export type CitasReagendadasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which citasReagendadas to aggregate.
     */
    where?: citasReagendadasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of citasReagendadas to fetch.
     */
    orderBy?: citasReagendadasOrderByWithRelationInput | citasReagendadasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: citasReagendadasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` citasReagendadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` citasReagendadas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned citasReagendadas
    **/
    _count?: true | CitasReagendadasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CitasReagendadasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CitasReagendadasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CitasReagendadasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CitasReagendadasMaxAggregateInputType
  }

  export type GetCitasReagendadasAggregateType<T extends CitasReagendadasAggregateArgs> = {
        [P in keyof T & keyof AggregateCitasReagendadas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCitasReagendadas[P]>
      : GetScalarType<T[P], AggregateCitasReagendadas[P]>
  }




  export type citasReagendadasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: citasReagendadasWhereInput
    orderBy?: citasReagendadasOrderByWithAggregationInput | citasReagendadasOrderByWithAggregationInput[]
    by: CitasReagendadasScalarFieldEnum[] | CitasReagendadasScalarFieldEnum
    having?: citasReagendadasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CitasReagendadasCountAggregateInputType | true
    _avg?: CitasReagendadasAvgAggregateInputType
    _sum?: CitasReagendadasSumAggregateInputType
    _min?: CitasReagendadasMinAggregateInputType
    _max?: CitasReagendadasMaxAggregateInputType
  }

  export type CitasReagendadasGroupByOutputType = {
    reagendadaID: number
    citaID: number | null
    idCitaNueva: number | null
    fechaNuevaCita: Date | null
    motivo: string | null
    _count: CitasReagendadasCountAggregateOutputType | null
    _avg: CitasReagendadasAvgAggregateOutputType | null
    _sum: CitasReagendadasSumAggregateOutputType | null
    _min: CitasReagendadasMinAggregateOutputType | null
    _max: CitasReagendadasMaxAggregateOutputType | null
  }

  type GetCitasReagendadasGroupByPayload<T extends citasReagendadasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CitasReagendadasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CitasReagendadasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CitasReagendadasGroupByOutputType[P]>
            : GetScalarType<T[P], CitasReagendadasGroupByOutputType[P]>
        }
      >
    >


  export type citasReagendadasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    reagendadaID?: boolean
    citaID?: boolean
    idCitaNueva?: boolean
    fechaNuevaCita?: boolean
    motivo?: boolean
    citas?: boolean | citasReagendadas$citasArgs<ExtArgs>
  }, ExtArgs["result"]["citasReagendadas"]>

  export type citasReagendadasSelectScalar = {
    reagendadaID?: boolean
    citaID?: boolean
    idCitaNueva?: boolean
    fechaNuevaCita?: boolean
    motivo?: boolean
  }

  export type citasReagendadasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    citas?: boolean | citasReagendadas$citasArgs<ExtArgs>
  }


  export type $citasReagendadasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "citasReagendadas"
    objects: {
      citas: Prisma.$citasPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      reagendadaID: number
      citaID: number | null
      idCitaNueva: number | null
      fechaNuevaCita: Date | null
      motivo: string | null
    }, ExtArgs["result"]["citasReagendadas"]>
    composites: {}
  }


  type citasReagendadasGetPayload<S extends boolean | null | undefined | citasReagendadasDefaultArgs> = $Result.GetResult<Prisma.$citasReagendadasPayload, S>

  type citasReagendadasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<citasReagendadasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CitasReagendadasCountAggregateInputType | true
    }

  export interface citasReagendadasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['citasReagendadas'], meta: { name: 'citasReagendadas' } }
    /**
     * Find zero or one CitasReagendadas that matches the filter.
     * @param {citasReagendadasFindUniqueArgs} args - Arguments to find a CitasReagendadas
     * @example
     * // Get one CitasReagendadas
     * const citasReagendadas = await prisma.citasReagendadas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends citasReagendadasFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, citasReagendadasFindUniqueArgs<ExtArgs>>
    ): Prisma__citasReagendadasClient<$Result.GetResult<Prisma.$citasReagendadasPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one CitasReagendadas that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {citasReagendadasFindUniqueOrThrowArgs} args - Arguments to find a CitasReagendadas
     * @example
     * // Get one CitasReagendadas
     * const citasReagendadas = await prisma.citasReagendadas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends citasReagendadasFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, citasReagendadasFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__citasReagendadasClient<$Result.GetResult<Prisma.$citasReagendadasPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first CitasReagendadas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {citasReagendadasFindFirstArgs} args - Arguments to find a CitasReagendadas
     * @example
     * // Get one CitasReagendadas
     * const citasReagendadas = await prisma.citasReagendadas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends citasReagendadasFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, citasReagendadasFindFirstArgs<ExtArgs>>
    ): Prisma__citasReagendadasClient<$Result.GetResult<Prisma.$citasReagendadasPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first CitasReagendadas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {citasReagendadasFindFirstOrThrowArgs} args - Arguments to find a CitasReagendadas
     * @example
     * // Get one CitasReagendadas
     * const citasReagendadas = await prisma.citasReagendadas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends citasReagendadasFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, citasReagendadasFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__citasReagendadasClient<$Result.GetResult<Prisma.$citasReagendadasPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more CitasReagendadas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {citasReagendadasFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CitasReagendadas
     * const citasReagendadas = await prisma.citasReagendadas.findMany()
     * 
     * // Get first 10 CitasReagendadas
     * const citasReagendadas = await prisma.citasReagendadas.findMany({ take: 10 })
     * 
     * // Only select the `reagendadaID`
     * const citasReagendadasWithReagendadaIDOnly = await prisma.citasReagendadas.findMany({ select: { reagendadaID: true } })
     * 
    **/
    findMany<T extends citasReagendadasFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, citasReagendadasFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$citasReagendadasPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a CitasReagendadas.
     * @param {citasReagendadasCreateArgs} args - Arguments to create a CitasReagendadas.
     * @example
     * // Create one CitasReagendadas
     * const CitasReagendadas = await prisma.citasReagendadas.create({
     *   data: {
     *     // ... data to create a CitasReagendadas
     *   }
     * })
     * 
    **/
    create<T extends citasReagendadasCreateArgs<ExtArgs>>(
      args: SelectSubset<T, citasReagendadasCreateArgs<ExtArgs>>
    ): Prisma__citasReagendadasClient<$Result.GetResult<Prisma.$citasReagendadasPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many CitasReagendadas.
     *     @param {citasReagendadasCreateManyArgs} args - Arguments to create many CitasReagendadas.
     *     @example
     *     // Create many CitasReagendadas
     *     const citasReagendadas = await prisma.citasReagendadas.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends citasReagendadasCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, citasReagendadasCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a CitasReagendadas.
     * @param {citasReagendadasDeleteArgs} args - Arguments to delete one CitasReagendadas.
     * @example
     * // Delete one CitasReagendadas
     * const CitasReagendadas = await prisma.citasReagendadas.delete({
     *   where: {
     *     // ... filter to delete one CitasReagendadas
     *   }
     * })
     * 
    **/
    delete<T extends citasReagendadasDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, citasReagendadasDeleteArgs<ExtArgs>>
    ): Prisma__citasReagendadasClient<$Result.GetResult<Prisma.$citasReagendadasPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one CitasReagendadas.
     * @param {citasReagendadasUpdateArgs} args - Arguments to update one CitasReagendadas.
     * @example
     * // Update one CitasReagendadas
     * const citasReagendadas = await prisma.citasReagendadas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends citasReagendadasUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, citasReagendadasUpdateArgs<ExtArgs>>
    ): Prisma__citasReagendadasClient<$Result.GetResult<Prisma.$citasReagendadasPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more CitasReagendadas.
     * @param {citasReagendadasDeleteManyArgs} args - Arguments to filter CitasReagendadas to delete.
     * @example
     * // Delete a few CitasReagendadas
     * const { count } = await prisma.citasReagendadas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends citasReagendadasDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, citasReagendadasDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CitasReagendadas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {citasReagendadasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CitasReagendadas
     * const citasReagendadas = await prisma.citasReagendadas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends citasReagendadasUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, citasReagendadasUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CitasReagendadas.
     * @param {citasReagendadasUpsertArgs} args - Arguments to update or create a CitasReagendadas.
     * @example
     * // Update or create a CitasReagendadas
     * const citasReagendadas = await prisma.citasReagendadas.upsert({
     *   create: {
     *     // ... data to create a CitasReagendadas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CitasReagendadas we want to update
     *   }
     * })
    **/
    upsert<T extends citasReagendadasUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, citasReagendadasUpsertArgs<ExtArgs>>
    ): Prisma__citasReagendadasClient<$Result.GetResult<Prisma.$citasReagendadasPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of CitasReagendadas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {citasReagendadasCountArgs} args - Arguments to filter CitasReagendadas to count.
     * @example
     * // Count the number of CitasReagendadas
     * const count = await prisma.citasReagendadas.count({
     *   where: {
     *     // ... the filter for the CitasReagendadas we want to count
     *   }
     * })
    **/
    count<T extends citasReagendadasCountArgs>(
      args?: Subset<T, citasReagendadasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CitasReagendadasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CitasReagendadas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CitasReagendadasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CitasReagendadasAggregateArgs>(args: Subset<T, CitasReagendadasAggregateArgs>): Prisma.PrismaPromise<GetCitasReagendadasAggregateType<T>>

    /**
     * Group by CitasReagendadas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {citasReagendadasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends citasReagendadasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: citasReagendadasGroupByArgs['orderBy'] }
        : { orderBy?: citasReagendadasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, citasReagendadasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCitasReagendadasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the citasReagendadas model
   */
  readonly fields: citasReagendadasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for citasReagendadas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__citasReagendadasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    citas<T extends citasReagendadas$citasArgs<ExtArgs> = {}>(args?: Subset<T, citasReagendadas$citasArgs<ExtArgs>>): Prisma__citasClient<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the citasReagendadas model
   */ 
  interface citasReagendadasFieldRefs {
    readonly reagendadaID: FieldRef<"citasReagendadas", 'Int'>
    readonly citaID: FieldRef<"citasReagendadas", 'Int'>
    readonly idCitaNueva: FieldRef<"citasReagendadas", 'Int'>
    readonly fechaNuevaCita: FieldRef<"citasReagendadas", 'DateTime'>
    readonly motivo: FieldRef<"citasReagendadas", 'String'>
  }
    

  // Custom InputTypes

  /**
   * citasReagendadas findUnique
   */
  export type citasReagendadasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citasReagendadas
     */
    select?: citasReagendadasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasReagendadasInclude<ExtArgs> | null
    /**
     * Filter, which citasReagendadas to fetch.
     */
    where: citasReagendadasWhereUniqueInput
  }


  /**
   * citasReagendadas findUniqueOrThrow
   */
  export type citasReagendadasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citasReagendadas
     */
    select?: citasReagendadasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasReagendadasInclude<ExtArgs> | null
    /**
     * Filter, which citasReagendadas to fetch.
     */
    where: citasReagendadasWhereUniqueInput
  }


  /**
   * citasReagendadas findFirst
   */
  export type citasReagendadasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citasReagendadas
     */
    select?: citasReagendadasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasReagendadasInclude<ExtArgs> | null
    /**
     * Filter, which citasReagendadas to fetch.
     */
    where?: citasReagendadasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of citasReagendadas to fetch.
     */
    orderBy?: citasReagendadasOrderByWithRelationInput | citasReagendadasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for citasReagendadas.
     */
    cursor?: citasReagendadasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` citasReagendadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` citasReagendadas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of citasReagendadas.
     */
    distinct?: CitasReagendadasScalarFieldEnum | CitasReagendadasScalarFieldEnum[]
  }


  /**
   * citasReagendadas findFirstOrThrow
   */
  export type citasReagendadasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citasReagendadas
     */
    select?: citasReagendadasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasReagendadasInclude<ExtArgs> | null
    /**
     * Filter, which citasReagendadas to fetch.
     */
    where?: citasReagendadasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of citasReagendadas to fetch.
     */
    orderBy?: citasReagendadasOrderByWithRelationInput | citasReagendadasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for citasReagendadas.
     */
    cursor?: citasReagendadasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` citasReagendadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` citasReagendadas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of citasReagendadas.
     */
    distinct?: CitasReagendadasScalarFieldEnum | CitasReagendadasScalarFieldEnum[]
  }


  /**
   * citasReagendadas findMany
   */
  export type citasReagendadasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citasReagendadas
     */
    select?: citasReagendadasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasReagendadasInclude<ExtArgs> | null
    /**
     * Filter, which citasReagendadas to fetch.
     */
    where?: citasReagendadasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of citasReagendadas to fetch.
     */
    orderBy?: citasReagendadasOrderByWithRelationInput | citasReagendadasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing citasReagendadas.
     */
    cursor?: citasReagendadasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` citasReagendadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` citasReagendadas.
     */
    skip?: number
    distinct?: CitasReagendadasScalarFieldEnum | CitasReagendadasScalarFieldEnum[]
  }


  /**
   * citasReagendadas create
   */
  export type citasReagendadasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citasReagendadas
     */
    select?: citasReagendadasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasReagendadasInclude<ExtArgs> | null
    /**
     * The data needed to create a citasReagendadas.
     */
    data?: XOR<citasReagendadasCreateInput, citasReagendadasUncheckedCreateInput>
  }


  /**
   * citasReagendadas createMany
   */
  export type citasReagendadasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many citasReagendadas.
     */
    data: citasReagendadasCreateManyInput | citasReagendadasCreateManyInput[]
  }


  /**
   * citasReagendadas update
   */
  export type citasReagendadasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citasReagendadas
     */
    select?: citasReagendadasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasReagendadasInclude<ExtArgs> | null
    /**
     * The data needed to update a citasReagendadas.
     */
    data: XOR<citasReagendadasUpdateInput, citasReagendadasUncheckedUpdateInput>
    /**
     * Choose, which citasReagendadas to update.
     */
    where: citasReagendadasWhereUniqueInput
  }


  /**
   * citasReagendadas updateMany
   */
  export type citasReagendadasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update citasReagendadas.
     */
    data: XOR<citasReagendadasUpdateManyMutationInput, citasReagendadasUncheckedUpdateManyInput>
    /**
     * Filter which citasReagendadas to update
     */
    where?: citasReagendadasWhereInput
  }


  /**
   * citasReagendadas upsert
   */
  export type citasReagendadasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citasReagendadas
     */
    select?: citasReagendadasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasReagendadasInclude<ExtArgs> | null
    /**
     * The filter to search for the citasReagendadas to update in case it exists.
     */
    where: citasReagendadasWhereUniqueInput
    /**
     * In case the citasReagendadas found by the `where` argument doesn't exist, create a new citasReagendadas with this data.
     */
    create: XOR<citasReagendadasCreateInput, citasReagendadasUncheckedCreateInput>
    /**
     * In case the citasReagendadas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<citasReagendadasUpdateInput, citasReagendadasUncheckedUpdateInput>
  }


  /**
   * citasReagendadas delete
   */
  export type citasReagendadasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citasReagendadas
     */
    select?: citasReagendadasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasReagendadasInclude<ExtArgs> | null
    /**
     * Filter which citasReagendadas to delete.
     */
    where: citasReagendadasWhereUniqueInput
  }


  /**
   * citasReagendadas deleteMany
   */
  export type citasReagendadasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which citasReagendadas to delete
     */
    where?: citasReagendadasWhereInput
  }


  /**
   * citasReagendadas.citas
   */
  export type citasReagendadas$citasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasInclude<ExtArgs> | null
    where?: citasWhereInput
  }


  /**
   * citasReagendadas without action
   */
  export type citasReagendadasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citasReagendadas
     */
    select?: citasReagendadasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasReagendadasInclude<ExtArgs> | null
  }



  /**
   * Model clientes
   */

  export type AggregateClientes = {
    _count: ClientesCountAggregateOutputType | null
    _avg: ClientesAvgAggregateOutputType | null
    _sum: ClientesSumAggregateOutputType | null
    _min: ClientesMinAggregateOutputType | null
    _max: ClientesMaxAggregateOutputType | null
  }

  export type ClientesAvgAggregateOutputType = {
    clienteID: number | null
    puntosGanados: number | null
    puntosCanjeados: number | null
    rolID: number | null
  }

  export type ClientesSumAggregateOutputType = {
    clienteID: number | null
    puntosGanados: number | null
    puntosCanjeados: number | null
    rolID: number | null
  }

  export type ClientesMinAggregateOutputType = {
    clienteID: number | null
    nombre: string | null
    apellidos: string | null
    correo: string | null
    telefono: string | null
    direccion: string | null
    puntosGanados: number | null
    puntosCanjeados: number | null
    contrase_a: string | null
    rolID: number | null
    estado: string | null
  }

  export type ClientesMaxAggregateOutputType = {
    clienteID: number | null
    nombre: string | null
    apellidos: string | null
    correo: string | null
    telefono: string | null
    direccion: string | null
    puntosGanados: number | null
    puntosCanjeados: number | null
    contrase_a: string | null
    rolID: number | null
    estado: string | null
  }

  export type ClientesCountAggregateOutputType = {
    clienteID: number
    nombre: number
    apellidos: number
    correo: number
    telefono: number
    direccion: number
    puntosGanados: number
    puntosCanjeados: number
    contrase_a: number
    rolID: number
    estado: number
    _all: number
  }


  export type ClientesAvgAggregateInputType = {
    clienteID?: true
    puntosGanados?: true
    puntosCanjeados?: true
    rolID?: true
  }

  export type ClientesSumAggregateInputType = {
    clienteID?: true
    puntosGanados?: true
    puntosCanjeados?: true
    rolID?: true
  }

  export type ClientesMinAggregateInputType = {
    clienteID?: true
    nombre?: true
    apellidos?: true
    correo?: true
    telefono?: true
    direccion?: true
    puntosGanados?: true
    puntosCanjeados?: true
    contrase_a?: true
    rolID?: true
    estado?: true
  }

  export type ClientesMaxAggregateInputType = {
    clienteID?: true
    nombre?: true
    apellidos?: true
    correo?: true
    telefono?: true
    direccion?: true
    puntosGanados?: true
    puntosCanjeados?: true
    contrase_a?: true
    rolID?: true
    estado?: true
  }

  export type ClientesCountAggregateInputType = {
    clienteID?: true
    nombre?: true
    apellidos?: true
    correo?: true
    telefono?: true
    direccion?: true
    puntosGanados?: true
    puntosCanjeados?: true
    contrase_a?: true
    rolID?: true
    estado?: true
    _all?: true
  }

  export type ClientesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which clientes to aggregate.
     */
    where?: clientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clientes to fetch.
     */
    orderBy?: clientesOrderByWithRelationInput | clientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: clientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned clientes
    **/
    _count?: true | ClientesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClientesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClientesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClientesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClientesMaxAggregateInputType
  }

  export type GetClientesAggregateType<T extends ClientesAggregateArgs> = {
        [P in keyof T & keyof AggregateClientes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClientes[P]>
      : GetScalarType<T[P], AggregateClientes[P]>
  }




  export type clientesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: clientesWhereInput
    orderBy?: clientesOrderByWithAggregationInput | clientesOrderByWithAggregationInput[]
    by: ClientesScalarFieldEnum[] | ClientesScalarFieldEnum
    having?: clientesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClientesCountAggregateInputType | true
    _avg?: ClientesAvgAggregateInputType
    _sum?: ClientesSumAggregateInputType
    _min?: ClientesMinAggregateInputType
    _max?: ClientesMaxAggregateInputType
  }

  export type ClientesGroupByOutputType = {
    clienteID: number
    nombre: string | null
    apellidos: string | null
    correo: string | null
    telefono: string | null
    direccion: string | null
    puntosGanados: number | null
    puntosCanjeados: number | null
    contrase_a: string | null
    rolID: number | null
    estado: string | null
    _count: ClientesCountAggregateOutputType | null
    _avg: ClientesAvgAggregateOutputType | null
    _sum: ClientesSumAggregateOutputType | null
    _min: ClientesMinAggregateOutputType | null
    _max: ClientesMaxAggregateOutputType | null
  }

  type GetClientesGroupByPayload<T extends clientesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClientesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClientesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClientesGroupByOutputType[P]>
            : GetScalarType<T[P], ClientesGroupByOutputType[P]>
        }
      >
    >


  export type clientesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    clienteID?: boolean
    nombre?: boolean
    apellidos?: boolean
    correo?: boolean
    telefono?: boolean
    direccion?: boolean
    puntosGanados?: boolean
    puntosCanjeados?: boolean
    contrase_a?: boolean
    rolID?: boolean
    estado?: boolean
    citas?: boolean | clientes$citasArgs<ExtArgs>
    roles?: boolean | clientes$rolesArgs<ExtArgs>
    historialCitas?: boolean | clientes$historialCitasArgs<ExtArgs>
    historialClientes?: boolean | clientes$historialClientesArgs<ExtArgs>
    historialCuenta?: boolean | clientes$historialCuentaArgs<ExtArgs>
    historialGastoPuntos?: boolean | clientes$historialGastoPuntosArgs<ExtArgs>
    puntosClientes?: boolean | clientes$puntosClientesArgs<ExtArgs>
    reporteCitasPendientes?: boolean | clientes$reporteCitasPendientesArgs<ExtArgs>
    reporteClientesCitas?: boolean | clientes$reporteClientesCitasArgs<ExtArgs>
    _count?: boolean | ClientesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clientes"]>

  export type clientesSelectScalar = {
    clienteID?: boolean
    nombre?: boolean
    apellidos?: boolean
    correo?: boolean
    telefono?: boolean
    direccion?: boolean
    puntosGanados?: boolean
    puntosCanjeados?: boolean
    contrase_a?: boolean
    rolID?: boolean
    estado?: boolean
  }

  export type clientesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    citas?: boolean | clientes$citasArgs<ExtArgs>
    roles?: boolean | clientes$rolesArgs<ExtArgs>
    historialCitas?: boolean | clientes$historialCitasArgs<ExtArgs>
    historialClientes?: boolean | clientes$historialClientesArgs<ExtArgs>
    historialCuenta?: boolean | clientes$historialCuentaArgs<ExtArgs>
    historialGastoPuntos?: boolean | clientes$historialGastoPuntosArgs<ExtArgs>
    puntosClientes?: boolean | clientes$puntosClientesArgs<ExtArgs>
    reporteCitasPendientes?: boolean | clientes$reporteCitasPendientesArgs<ExtArgs>
    reporteClientesCitas?: boolean | clientes$reporteClientesCitasArgs<ExtArgs>
    _count?: boolean | ClientesCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $clientesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "clientes"
    objects: {
      citas: Prisma.$citasPayload<ExtArgs>[]
      roles: Prisma.$rolesPayload<ExtArgs> | null
      historialCitas: Prisma.$historialCitasPayload<ExtArgs>[]
      historialClientes: Prisma.$historialClientesPayload<ExtArgs>[]
      historialCuenta: Prisma.$historialCuentaPayload<ExtArgs>[]
      historialGastoPuntos: Prisma.$historialGastoPuntosPayload<ExtArgs>[]
      puntosClientes: Prisma.$puntosClientesPayload<ExtArgs>[]
      reporteCitasPendientes: Prisma.$reporteCitasPendientesPayload<ExtArgs>[]
      reporteClientesCitas: Prisma.$reporteClientesCitasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      clienteID: number
      nombre: string | null
      apellidos: string | null
      correo: string | null
      telefono: string | null
      direccion: string | null
      puntosGanados: number | null
      puntosCanjeados: number | null
      contrase_a: string | null
      rolID: number | null
      estado: string | null
    }, ExtArgs["result"]["clientes"]>
    composites: {}
  }


  type clientesGetPayload<S extends boolean | null | undefined | clientesDefaultArgs> = $Result.GetResult<Prisma.$clientesPayload, S>

  type clientesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<clientesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ClientesCountAggregateInputType | true
    }

  export interface clientesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['clientes'], meta: { name: 'clientes' } }
    /**
     * Find zero or one Clientes that matches the filter.
     * @param {clientesFindUniqueArgs} args - Arguments to find a Clientes
     * @example
     * // Get one Clientes
     * const clientes = await prisma.clientes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends clientesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, clientesFindUniqueArgs<ExtArgs>>
    ): Prisma__clientesClient<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Clientes that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {clientesFindUniqueOrThrowArgs} args - Arguments to find a Clientes
     * @example
     * // Get one Clientes
     * const clientes = await prisma.clientes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends clientesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, clientesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__clientesClient<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Clientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientesFindFirstArgs} args - Arguments to find a Clientes
     * @example
     * // Get one Clientes
     * const clientes = await prisma.clientes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends clientesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, clientesFindFirstArgs<ExtArgs>>
    ): Prisma__clientesClient<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Clientes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientesFindFirstOrThrowArgs} args - Arguments to find a Clientes
     * @example
     * // Get one Clientes
     * const clientes = await prisma.clientes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends clientesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, clientesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__clientesClient<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Clientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clientes
     * const clientes = await prisma.clientes.findMany()
     * 
     * // Get first 10 Clientes
     * const clientes = await prisma.clientes.findMany({ take: 10 })
     * 
     * // Only select the `clienteID`
     * const clientesWithClienteIDOnly = await prisma.clientes.findMany({ select: { clienteID: true } })
     * 
    **/
    findMany<T extends clientesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, clientesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Clientes.
     * @param {clientesCreateArgs} args - Arguments to create a Clientes.
     * @example
     * // Create one Clientes
     * const Clientes = await prisma.clientes.create({
     *   data: {
     *     // ... data to create a Clientes
     *   }
     * })
     * 
    **/
    create<T extends clientesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, clientesCreateArgs<ExtArgs>>
    ): Prisma__clientesClient<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Clientes.
     *     @param {clientesCreateManyArgs} args - Arguments to create many Clientes.
     *     @example
     *     // Create many Clientes
     *     const clientes = await prisma.clientes.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends clientesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, clientesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Clientes.
     * @param {clientesDeleteArgs} args - Arguments to delete one Clientes.
     * @example
     * // Delete one Clientes
     * const Clientes = await prisma.clientes.delete({
     *   where: {
     *     // ... filter to delete one Clientes
     *   }
     * })
     * 
    **/
    delete<T extends clientesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, clientesDeleteArgs<ExtArgs>>
    ): Prisma__clientesClient<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Clientes.
     * @param {clientesUpdateArgs} args - Arguments to update one Clientes.
     * @example
     * // Update one Clientes
     * const clientes = await prisma.clientes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends clientesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, clientesUpdateArgs<ExtArgs>>
    ): Prisma__clientesClient<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Clientes.
     * @param {clientesDeleteManyArgs} args - Arguments to filter Clientes to delete.
     * @example
     * // Delete a few Clientes
     * const { count } = await prisma.clientes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends clientesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, clientesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clientes
     * const clientes = await prisma.clientes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends clientesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, clientesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Clientes.
     * @param {clientesUpsertArgs} args - Arguments to update or create a Clientes.
     * @example
     * // Update or create a Clientes
     * const clientes = await prisma.clientes.upsert({
     *   create: {
     *     // ... data to create a Clientes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Clientes we want to update
     *   }
     * })
    **/
    upsert<T extends clientesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, clientesUpsertArgs<ExtArgs>>
    ): Prisma__clientesClient<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientesCountArgs} args - Arguments to filter Clientes to count.
     * @example
     * // Count the number of Clientes
     * const count = await prisma.clientes.count({
     *   where: {
     *     // ... the filter for the Clientes we want to count
     *   }
     * })
    **/
    count<T extends clientesCountArgs>(
      args?: Subset<T, clientesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClientesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClientesAggregateArgs>(args: Subset<T, ClientesAggregateArgs>): Prisma.PrismaPromise<GetClientesAggregateType<T>>

    /**
     * Group by Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends clientesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: clientesGroupByArgs['orderBy'] }
        : { orderBy?: clientesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, clientesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClientesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the clientes model
   */
  readonly fields: clientesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for clientes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__clientesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    citas<T extends clientes$citasArgs<ExtArgs> = {}>(args?: Subset<T, clientes$citasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, 'findMany'> | Null>;

    roles<T extends clientes$rolesArgs<ExtArgs> = {}>(args?: Subset<T, clientes$rolesArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    historialCitas<T extends clientes$historialCitasArgs<ExtArgs> = {}>(args?: Subset<T, clientes$historialCitasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historialCitasPayload<ExtArgs>, T, 'findMany'> | Null>;

    historialClientes<T extends clientes$historialClientesArgs<ExtArgs> = {}>(args?: Subset<T, clientes$historialClientesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historialClientesPayload<ExtArgs>, T, 'findMany'> | Null>;

    historialCuenta<T extends clientes$historialCuentaArgs<ExtArgs> = {}>(args?: Subset<T, clientes$historialCuentaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historialCuentaPayload<ExtArgs>, T, 'findMany'> | Null>;

    historialGastoPuntos<T extends clientes$historialGastoPuntosArgs<ExtArgs> = {}>(args?: Subset<T, clientes$historialGastoPuntosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historialGastoPuntosPayload<ExtArgs>, T, 'findMany'> | Null>;

    puntosClientes<T extends clientes$puntosClientesArgs<ExtArgs> = {}>(args?: Subset<T, clientes$puntosClientesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$puntosClientesPayload<ExtArgs>, T, 'findMany'> | Null>;

    reporteCitasPendientes<T extends clientes$reporteCitasPendientesArgs<ExtArgs> = {}>(args?: Subset<T, clientes$reporteCitasPendientesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reporteCitasPendientesPayload<ExtArgs>, T, 'findMany'> | Null>;

    reporteClientesCitas<T extends clientes$reporteClientesCitasArgs<ExtArgs> = {}>(args?: Subset<T, clientes$reporteClientesCitasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reporteClientesCitasPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the clientes model
   */ 
  interface clientesFieldRefs {
    readonly clienteID: FieldRef<"clientes", 'Int'>
    readonly nombre: FieldRef<"clientes", 'String'>
    readonly apellidos: FieldRef<"clientes", 'String'>
    readonly correo: FieldRef<"clientes", 'String'>
    readonly telefono: FieldRef<"clientes", 'String'>
    readonly direccion: FieldRef<"clientes", 'String'>
    readonly puntosGanados: FieldRef<"clientes", 'Int'>
    readonly puntosCanjeados: FieldRef<"clientes", 'Int'>
    readonly contrase_a: FieldRef<"clientes", 'String'>
    readonly rolID: FieldRef<"clientes", 'Int'>
    readonly estado: FieldRef<"clientes", 'String'>
  }
    

  // Custom InputTypes

  /**
   * clientes findUnique
   */
  export type clientesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: clientesInclude<ExtArgs> | null
    /**
     * Filter, which clientes to fetch.
     */
    where: clientesWhereUniqueInput
  }


  /**
   * clientes findUniqueOrThrow
   */
  export type clientesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: clientesInclude<ExtArgs> | null
    /**
     * Filter, which clientes to fetch.
     */
    where: clientesWhereUniqueInput
  }


  /**
   * clientes findFirst
   */
  export type clientesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: clientesInclude<ExtArgs> | null
    /**
     * Filter, which clientes to fetch.
     */
    where?: clientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clientes to fetch.
     */
    orderBy?: clientesOrderByWithRelationInput | clientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for clientes.
     */
    cursor?: clientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of clientes.
     */
    distinct?: ClientesScalarFieldEnum | ClientesScalarFieldEnum[]
  }


  /**
   * clientes findFirstOrThrow
   */
  export type clientesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: clientesInclude<ExtArgs> | null
    /**
     * Filter, which clientes to fetch.
     */
    where?: clientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clientes to fetch.
     */
    orderBy?: clientesOrderByWithRelationInput | clientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for clientes.
     */
    cursor?: clientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of clientes.
     */
    distinct?: ClientesScalarFieldEnum | ClientesScalarFieldEnum[]
  }


  /**
   * clientes findMany
   */
  export type clientesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: clientesInclude<ExtArgs> | null
    /**
     * Filter, which clientes to fetch.
     */
    where?: clientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clientes to fetch.
     */
    orderBy?: clientesOrderByWithRelationInput | clientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing clientes.
     */
    cursor?: clientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clientes.
     */
    skip?: number
    distinct?: ClientesScalarFieldEnum | ClientesScalarFieldEnum[]
  }


  /**
   * clientes create
   */
  export type clientesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: clientesInclude<ExtArgs> | null
    /**
     * The data needed to create a clientes.
     */
    data?: XOR<clientesCreateInput, clientesUncheckedCreateInput>
  }


  /**
   * clientes createMany
   */
  export type clientesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many clientes.
     */
    data: clientesCreateManyInput | clientesCreateManyInput[]
  }


  /**
   * clientes update
   */
  export type clientesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: clientesInclude<ExtArgs> | null
    /**
     * The data needed to update a clientes.
     */
    data: XOR<clientesUpdateInput, clientesUncheckedUpdateInput>
    /**
     * Choose, which clientes to update.
     */
    where: clientesWhereUniqueInput
  }


  /**
   * clientes updateMany
   */
  export type clientesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update clientes.
     */
    data: XOR<clientesUpdateManyMutationInput, clientesUncheckedUpdateManyInput>
    /**
     * Filter which clientes to update
     */
    where?: clientesWhereInput
  }


  /**
   * clientes upsert
   */
  export type clientesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: clientesInclude<ExtArgs> | null
    /**
     * The filter to search for the clientes to update in case it exists.
     */
    where: clientesWhereUniqueInput
    /**
     * In case the clientes found by the `where` argument doesn't exist, create a new clientes with this data.
     */
    create: XOR<clientesCreateInput, clientesUncheckedCreateInput>
    /**
     * In case the clientes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<clientesUpdateInput, clientesUncheckedUpdateInput>
  }


  /**
   * clientes delete
   */
  export type clientesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: clientesInclude<ExtArgs> | null
    /**
     * Filter which clientes to delete.
     */
    where: clientesWhereUniqueInput
  }


  /**
   * clientes deleteMany
   */
  export type clientesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which clientes to delete
     */
    where?: clientesWhereInput
  }


  /**
   * clientes.citas
   */
  export type clientes$citasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasInclude<ExtArgs> | null
    where?: citasWhereInput
    orderBy?: citasOrderByWithRelationInput | citasOrderByWithRelationInput[]
    cursor?: citasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CitasScalarFieldEnum | CitasScalarFieldEnum[]
  }


  /**
   * clientes.roles
   */
  export type clientes$rolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: rolesInclude<ExtArgs> | null
    where?: rolesWhereInput
  }


  /**
   * clientes.historialCitas
   */
  export type clientes$historialCitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialCitas
     */
    select?: historialCitasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialCitasInclude<ExtArgs> | null
    where?: historialCitasWhereInput
    orderBy?: historialCitasOrderByWithRelationInput | historialCitasOrderByWithRelationInput[]
    cursor?: historialCitasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HistorialCitasScalarFieldEnum | HistorialCitasScalarFieldEnum[]
  }


  /**
   * clientes.historialClientes
   */
  export type clientes$historialClientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialClientes
     */
    select?: historialClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialClientesInclude<ExtArgs> | null
    where?: historialClientesWhereInput
    orderBy?: historialClientesOrderByWithRelationInput | historialClientesOrderByWithRelationInput[]
    cursor?: historialClientesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HistorialClientesScalarFieldEnum | HistorialClientesScalarFieldEnum[]
  }


  /**
   * clientes.historialCuenta
   */
  export type clientes$historialCuentaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialCuenta
     */
    select?: historialCuentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialCuentaInclude<ExtArgs> | null
    where?: historialCuentaWhereInput
    orderBy?: historialCuentaOrderByWithRelationInput | historialCuentaOrderByWithRelationInput[]
    cursor?: historialCuentaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HistorialCuentaScalarFieldEnum | HistorialCuentaScalarFieldEnum[]
  }


  /**
   * clientes.historialGastoPuntos
   */
  export type clientes$historialGastoPuntosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialGastoPuntos
     */
    select?: historialGastoPuntosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialGastoPuntosInclude<ExtArgs> | null
    where?: historialGastoPuntosWhereInput
    orderBy?: historialGastoPuntosOrderByWithRelationInput | historialGastoPuntosOrderByWithRelationInput[]
    cursor?: historialGastoPuntosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HistorialGastoPuntosScalarFieldEnum | HistorialGastoPuntosScalarFieldEnum[]
  }


  /**
   * clientes.puntosClientes
   */
  export type clientes$puntosClientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the puntosClientes
     */
    select?: puntosClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: puntosClientesInclude<ExtArgs> | null
    where?: puntosClientesWhereInput
    orderBy?: puntosClientesOrderByWithRelationInput | puntosClientesOrderByWithRelationInput[]
    cursor?: puntosClientesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PuntosClientesScalarFieldEnum | PuntosClientesScalarFieldEnum[]
  }


  /**
   * clientes.reporteCitasPendientes
   */
  export type clientes$reporteCitasPendientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteCitasPendientes
     */
    select?: reporteCitasPendientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteCitasPendientesInclude<ExtArgs> | null
    where?: reporteCitasPendientesWhereInput
    orderBy?: reporteCitasPendientesOrderByWithRelationInput | reporteCitasPendientesOrderByWithRelationInput[]
    cursor?: reporteCitasPendientesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReporteCitasPendientesScalarFieldEnum | ReporteCitasPendientesScalarFieldEnum[]
  }


  /**
   * clientes.reporteClientesCitas
   */
  export type clientes$reporteClientesCitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteClientesCitas
     */
    select?: reporteClientesCitasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteClientesCitasInclude<ExtArgs> | null
    where?: reporteClientesCitasWhereInput
    orderBy?: reporteClientesCitasOrderByWithRelationInput | reporteClientesCitasOrderByWithRelationInput[]
    cursor?: reporteClientesCitasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReporteClientesCitasScalarFieldEnum | ReporteClientesCitasScalarFieldEnum[]
  }


  /**
   * clientes without action
   */
  export type clientesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: clientesInclude<ExtArgs> | null
  }



  /**
   * Model detalleServicio
   */

  export type AggregateDetalleServicio = {
    _count: DetalleServicioCountAggregateOutputType | null
    _avg: DetalleServicioAvgAggregateOutputType | null
    _sum: DetalleServicioSumAggregateOutputType | null
    _min: DetalleServicioMinAggregateOutputType | null
    _max: DetalleServicioMaxAggregateOutputType | null
  }

  export type DetalleServicioAvgAggregateOutputType = {
    detalleID: number | null
    servicioID: number | null
  }

  export type DetalleServicioSumAggregateOutputType = {
    detalleID: number | null
    servicioID: number | null
  }

  export type DetalleServicioMinAggregateOutputType = {
    detalleID: number | null
    servicioID: number | null
    tiempoEstimado: Date | null
  }

  export type DetalleServicioMaxAggregateOutputType = {
    detalleID: number | null
    servicioID: number | null
    tiempoEstimado: Date | null
  }

  export type DetalleServicioCountAggregateOutputType = {
    detalleID: number
    servicioID: number
    tiempoEstimado: number
    _all: number
  }


  export type DetalleServicioAvgAggregateInputType = {
    detalleID?: true
    servicioID?: true
  }

  export type DetalleServicioSumAggregateInputType = {
    detalleID?: true
    servicioID?: true
  }

  export type DetalleServicioMinAggregateInputType = {
    detalleID?: true
    servicioID?: true
    tiempoEstimado?: true
  }

  export type DetalleServicioMaxAggregateInputType = {
    detalleID?: true
    servicioID?: true
    tiempoEstimado?: true
  }

  export type DetalleServicioCountAggregateInputType = {
    detalleID?: true
    servicioID?: true
    tiempoEstimado?: true
    _all?: true
  }

  export type DetalleServicioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which detalleServicio to aggregate.
     */
    where?: detalleServicioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalleServicios to fetch.
     */
    orderBy?: detalleServicioOrderByWithRelationInput | detalleServicioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: detalleServicioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalleServicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalleServicios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned detalleServicios
    **/
    _count?: true | DetalleServicioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DetalleServicioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DetalleServicioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DetalleServicioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DetalleServicioMaxAggregateInputType
  }

  export type GetDetalleServicioAggregateType<T extends DetalleServicioAggregateArgs> = {
        [P in keyof T & keyof AggregateDetalleServicio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDetalleServicio[P]>
      : GetScalarType<T[P], AggregateDetalleServicio[P]>
  }




  export type detalleServicioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalleServicioWhereInput
    orderBy?: detalleServicioOrderByWithAggregationInput | detalleServicioOrderByWithAggregationInput[]
    by: DetalleServicioScalarFieldEnum[] | DetalleServicioScalarFieldEnum
    having?: detalleServicioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DetalleServicioCountAggregateInputType | true
    _avg?: DetalleServicioAvgAggregateInputType
    _sum?: DetalleServicioSumAggregateInputType
    _min?: DetalleServicioMinAggregateInputType
    _max?: DetalleServicioMaxAggregateInputType
  }

  export type DetalleServicioGroupByOutputType = {
    detalleID: number
    servicioID: number | null
    tiempoEstimado: Date | null
    _count: DetalleServicioCountAggregateOutputType | null
    _avg: DetalleServicioAvgAggregateOutputType | null
    _sum: DetalleServicioSumAggregateOutputType | null
    _min: DetalleServicioMinAggregateOutputType | null
    _max: DetalleServicioMaxAggregateOutputType | null
  }

  type GetDetalleServicioGroupByPayload<T extends detalleServicioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DetalleServicioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DetalleServicioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DetalleServicioGroupByOutputType[P]>
            : GetScalarType<T[P], DetalleServicioGroupByOutputType[P]>
        }
      >
    >


  export type detalleServicioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    detalleID?: boolean
    servicioID?: boolean
    tiempoEstimado?: boolean
    catalogo?: boolean | detalleServicio$catalogoArgs<ExtArgs>
  }, ExtArgs["result"]["detalleServicio"]>

  export type detalleServicioSelectScalar = {
    detalleID?: boolean
    servicioID?: boolean
    tiempoEstimado?: boolean
  }

  export type detalleServicioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    catalogo?: boolean | detalleServicio$catalogoArgs<ExtArgs>
  }


  export type $detalleServicioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "detalleServicio"
    objects: {
      catalogo: Prisma.$catalogoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      detalleID: number
      servicioID: number | null
      tiempoEstimado: Date | null
    }, ExtArgs["result"]["detalleServicio"]>
    composites: {}
  }


  type detalleServicioGetPayload<S extends boolean | null | undefined | detalleServicioDefaultArgs> = $Result.GetResult<Prisma.$detalleServicioPayload, S>

  type detalleServicioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<detalleServicioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DetalleServicioCountAggregateInputType | true
    }

  export interface detalleServicioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['detalleServicio'], meta: { name: 'detalleServicio' } }
    /**
     * Find zero or one DetalleServicio that matches the filter.
     * @param {detalleServicioFindUniqueArgs} args - Arguments to find a DetalleServicio
     * @example
     * // Get one DetalleServicio
     * const detalleServicio = await prisma.detalleServicio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends detalleServicioFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, detalleServicioFindUniqueArgs<ExtArgs>>
    ): Prisma__detalleServicioClient<$Result.GetResult<Prisma.$detalleServicioPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one DetalleServicio that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {detalleServicioFindUniqueOrThrowArgs} args - Arguments to find a DetalleServicio
     * @example
     * // Get one DetalleServicio
     * const detalleServicio = await prisma.detalleServicio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends detalleServicioFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, detalleServicioFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__detalleServicioClient<$Result.GetResult<Prisma.$detalleServicioPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first DetalleServicio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalleServicioFindFirstArgs} args - Arguments to find a DetalleServicio
     * @example
     * // Get one DetalleServicio
     * const detalleServicio = await prisma.detalleServicio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends detalleServicioFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, detalleServicioFindFirstArgs<ExtArgs>>
    ): Prisma__detalleServicioClient<$Result.GetResult<Prisma.$detalleServicioPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first DetalleServicio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalleServicioFindFirstOrThrowArgs} args - Arguments to find a DetalleServicio
     * @example
     * // Get one DetalleServicio
     * const detalleServicio = await prisma.detalleServicio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends detalleServicioFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, detalleServicioFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__detalleServicioClient<$Result.GetResult<Prisma.$detalleServicioPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more DetalleServicios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalleServicioFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DetalleServicios
     * const detalleServicios = await prisma.detalleServicio.findMany()
     * 
     * // Get first 10 DetalleServicios
     * const detalleServicios = await prisma.detalleServicio.findMany({ take: 10 })
     * 
     * // Only select the `detalleID`
     * const detalleServicioWithDetalleIDOnly = await prisma.detalleServicio.findMany({ select: { detalleID: true } })
     * 
    **/
    findMany<T extends detalleServicioFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, detalleServicioFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalleServicioPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a DetalleServicio.
     * @param {detalleServicioCreateArgs} args - Arguments to create a DetalleServicio.
     * @example
     * // Create one DetalleServicio
     * const DetalleServicio = await prisma.detalleServicio.create({
     *   data: {
     *     // ... data to create a DetalleServicio
     *   }
     * })
     * 
    **/
    create<T extends detalleServicioCreateArgs<ExtArgs>>(
      args: SelectSubset<T, detalleServicioCreateArgs<ExtArgs>>
    ): Prisma__detalleServicioClient<$Result.GetResult<Prisma.$detalleServicioPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many DetalleServicios.
     *     @param {detalleServicioCreateManyArgs} args - Arguments to create many DetalleServicios.
     *     @example
     *     // Create many DetalleServicios
     *     const detalleServicio = await prisma.detalleServicio.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends detalleServicioCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, detalleServicioCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a DetalleServicio.
     * @param {detalleServicioDeleteArgs} args - Arguments to delete one DetalleServicio.
     * @example
     * // Delete one DetalleServicio
     * const DetalleServicio = await prisma.detalleServicio.delete({
     *   where: {
     *     // ... filter to delete one DetalleServicio
     *   }
     * })
     * 
    **/
    delete<T extends detalleServicioDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, detalleServicioDeleteArgs<ExtArgs>>
    ): Prisma__detalleServicioClient<$Result.GetResult<Prisma.$detalleServicioPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one DetalleServicio.
     * @param {detalleServicioUpdateArgs} args - Arguments to update one DetalleServicio.
     * @example
     * // Update one DetalleServicio
     * const detalleServicio = await prisma.detalleServicio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends detalleServicioUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, detalleServicioUpdateArgs<ExtArgs>>
    ): Prisma__detalleServicioClient<$Result.GetResult<Prisma.$detalleServicioPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more DetalleServicios.
     * @param {detalleServicioDeleteManyArgs} args - Arguments to filter DetalleServicios to delete.
     * @example
     * // Delete a few DetalleServicios
     * const { count } = await prisma.detalleServicio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends detalleServicioDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, detalleServicioDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DetalleServicios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalleServicioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DetalleServicios
     * const detalleServicio = await prisma.detalleServicio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends detalleServicioUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, detalleServicioUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DetalleServicio.
     * @param {detalleServicioUpsertArgs} args - Arguments to update or create a DetalleServicio.
     * @example
     * // Update or create a DetalleServicio
     * const detalleServicio = await prisma.detalleServicio.upsert({
     *   create: {
     *     // ... data to create a DetalleServicio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DetalleServicio we want to update
     *   }
     * })
    **/
    upsert<T extends detalleServicioUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, detalleServicioUpsertArgs<ExtArgs>>
    ): Prisma__detalleServicioClient<$Result.GetResult<Prisma.$detalleServicioPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of DetalleServicios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalleServicioCountArgs} args - Arguments to filter DetalleServicios to count.
     * @example
     * // Count the number of DetalleServicios
     * const count = await prisma.detalleServicio.count({
     *   where: {
     *     // ... the filter for the DetalleServicios we want to count
     *   }
     * })
    **/
    count<T extends detalleServicioCountArgs>(
      args?: Subset<T, detalleServicioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DetalleServicioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DetalleServicio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleServicioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DetalleServicioAggregateArgs>(args: Subset<T, DetalleServicioAggregateArgs>): Prisma.PrismaPromise<GetDetalleServicioAggregateType<T>>

    /**
     * Group by DetalleServicio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalleServicioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends detalleServicioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: detalleServicioGroupByArgs['orderBy'] }
        : { orderBy?: detalleServicioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, detalleServicioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDetalleServicioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the detalleServicio model
   */
  readonly fields: detalleServicioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for detalleServicio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__detalleServicioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    catalogo<T extends detalleServicio$catalogoArgs<ExtArgs> = {}>(args?: Subset<T, detalleServicio$catalogoArgs<ExtArgs>>): Prisma__catalogoClient<$Result.GetResult<Prisma.$catalogoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the detalleServicio model
   */ 
  interface detalleServicioFieldRefs {
    readonly detalleID: FieldRef<"detalleServicio", 'Int'>
    readonly servicioID: FieldRef<"detalleServicio", 'Int'>
    readonly tiempoEstimado: FieldRef<"detalleServicio", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * detalleServicio findUnique
   */
  export type detalleServicioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleServicio
     */
    select?: detalleServicioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: detalleServicioInclude<ExtArgs> | null
    /**
     * Filter, which detalleServicio to fetch.
     */
    where: detalleServicioWhereUniqueInput
  }


  /**
   * detalleServicio findUniqueOrThrow
   */
  export type detalleServicioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleServicio
     */
    select?: detalleServicioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: detalleServicioInclude<ExtArgs> | null
    /**
     * Filter, which detalleServicio to fetch.
     */
    where: detalleServicioWhereUniqueInput
  }


  /**
   * detalleServicio findFirst
   */
  export type detalleServicioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleServicio
     */
    select?: detalleServicioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: detalleServicioInclude<ExtArgs> | null
    /**
     * Filter, which detalleServicio to fetch.
     */
    where?: detalleServicioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalleServicios to fetch.
     */
    orderBy?: detalleServicioOrderByWithRelationInput | detalleServicioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for detalleServicios.
     */
    cursor?: detalleServicioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalleServicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalleServicios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of detalleServicios.
     */
    distinct?: DetalleServicioScalarFieldEnum | DetalleServicioScalarFieldEnum[]
  }


  /**
   * detalleServicio findFirstOrThrow
   */
  export type detalleServicioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleServicio
     */
    select?: detalleServicioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: detalleServicioInclude<ExtArgs> | null
    /**
     * Filter, which detalleServicio to fetch.
     */
    where?: detalleServicioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalleServicios to fetch.
     */
    orderBy?: detalleServicioOrderByWithRelationInput | detalleServicioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for detalleServicios.
     */
    cursor?: detalleServicioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalleServicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalleServicios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of detalleServicios.
     */
    distinct?: DetalleServicioScalarFieldEnum | DetalleServicioScalarFieldEnum[]
  }


  /**
   * detalleServicio findMany
   */
  export type detalleServicioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleServicio
     */
    select?: detalleServicioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: detalleServicioInclude<ExtArgs> | null
    /**
     * Filter, which detalleServicios to fetch.
     */
    where?: detalleServicioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalleServicios to fetch.
     */
    orderBy?: detalleServicioOrderByWithRelationInput | detalleServicioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing detalleServicios.
     */
    cursor?: detalleServicioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalleServicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalleServicios.
     */
    skip?: number
    distinct?: DetalleServicioScalarFieldEnum | DetalleServicioScalarFieldEnum[]
  }


  /**
   * detalleServicio create
   */
  export type detalleServicioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleServicio
     */
    select?: detalleServicioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: detalleServicioInclude<ExtArgs> | null
    /**
     * The data needed to create a detalleServicio.
     */
    data?: XOR<detalleServicioCreateInput, detalleServicioUncheckedCreateInput>
  }


  /**
   * detalleServicio createMany
   */
  export type detalleServicioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many detalleServicios.
     */
    data: detalleServicioCreateManyInput | detalleServicioCreateManyInput[]
  }


  /**
   * detalleServicio update
   */
  export type detalleServicioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleServicio
     */
    select?: detalleServicioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: detalleServicioInclude<ExtArgs> | null
    /**
     * The data needed to update a detalleServicio.
     */
    data: XOR<detalleServicioUpdateInput, detalleServicioUncheckedUpdateInput>
    /**
     * Choose, which detalleServicio to update.
     */
    where: detalleServicioWhereUniqueInput
  }


  /**
   * detalleServicio updateMany
   */
  export type detalleServicioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update detalleServicios.
     */
    data: XOR<detalleServicioUpdateManyMutationInput, detalleServicioUncheckedUpdateManyInput>
    /**
     * Filter which detalleServicios to update
     */
    where?: detalleServicioWhereInput
  }


  /**
   * detalleServicio upsert
   */
  export type detalleServicioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleServicio
     */
    select?: detalleServicioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: detalleServicioInclude<ExtArgs> | null
    /**
     * The filter to search for the detalleServicio to update in case it exists.
     */
    where: detalleServicioWhereUniqueInput
    /**
     * In case the detalleServicio found by the `where` argument doesn't exist, create a new detalleServicio with this data.
     */
    create: XOR<detalleServicioCreateInput, detalleServicioUncheckedCreateInput>
    /**
     * In case the detalleServicio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<detalleServicioUpdateInput, detalleServicioUncheckedUpdateInput>
  }


  /**
   * detalleServicio delete
   */
  export type detalleServicioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleServicio
     */
    select?: detalleServicioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: detalleServicioInclude<ExtArgs> | null
    /**
     * Filter which detalleServicio to delete.
     */
    where: detalleServicioWhereUniqueInput
  }


  /**
   * detalleServicio deleteMany
   */
  export type detalleServicioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which detalleServicios to delete
     */
    where?: detalleServicioWhereInput
  }


  /**
   * detalleServicio.catalogo
   */
  export type detalleServicio$catalogoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the catalogo
     */
    select?: catalogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catalogoInclude<ExtArgs> | null
    where?: catalogoWhereInput
  }


  /**
   * detalleServicio without action
   */
  export type detalleServicioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleServicio
     */
    select?: detalleServicioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: detalleServicioInclude<ExtArgs> | null
  }



  /**
   * Model disponibilidadTiempoReal
   */

  export type AggregateDisponibilidadTiempoReal = {
    _count: DisponibilidadTiempoRealCountAggregateOutputType | null
    _avg: DisponibilidadTiempoRealAvgAggregateOutputType | null
    _sum: DisponibilidadTiempoRealSumAggregateOutputType | null
    _min: DisponibilidadTiempoRealMinAggregateOutputType | null
    _max: DisponibilidadTiempoRealMaxAggregateOutputType | null
  }

  export type DisponibilidadTiempoRealAvgAggregateOutputType = {
    disponibilidadID: number | null
    estilistaID: number | null
  }

  export type DisponibilidadTiempoRealSumAggregateOutputType = {
    disponibilidadID: number | null
    estilistaID: number | null
  }

  export type DisponibilidadTiempoRealMinAggregateOutputType = {
    disponibilidadID: number | null
    estilistaID: number | null
    diaSemana: string | null
    horaInicio: Date | null
    horaFinal: Date | null
  }

  export type DisponibilidadTiempoRealMaxAggregateOutputType = {
    disponibilidadID: number | null
    estilistaID: number | null
    diaSemana: string | null
    horaInicio: Date | null
    horaFinal: Date | null
  }

  export type DisponibilidadTiempoRealCountAggregateOutputType = {
    disponibilidadID: number
    estilistaID: number
    diaSemana: number
    horaInicio: number
    horaFinal: number
    _all: number
  }


  export type DisponibilidadTiempoRealAvgAggregateInputType = {
    disponibilidadID?: true
    estilistaID?: true
  }

  export type DisponibilidadTiempoRealSumAggregateInputType = {
    disponibilidadID?: true
    estilistaID?: true
  }

  export type DisponibilidadTiempoRealMinAggregateInputType = {
    disponibilidadID?: true
    estilistaID?: true
    diaSemana?: true
    horaInicio?: true
    horaFinal?: true
  }

  export type DisponibilidadTiempoRealMaxAggregateInputType = {
    disponibilidadID?: true
    estilistaID?: true
    diaSemana?: true
    horaInicio?: true
    horaFinal?: true
  }

  export type DisponibilidadTiempoRealCountAggregateInputType = {
    disponibilidadID?: true
    estilistaID?: true
    diaSemana?: true
    horaInicio?: true
    horaFinal?: true
    _all?: true
  }

  export type DisponibilidadTiempoRealAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which disponibilidadTiempoReal to aggregate.
     */
    where?: disponibilidadTiempoRealWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disponibilidadTiempoReals to fetch.
     */
    orderBy?: disponibilidadTiempoRealOrderByWithRelationInput | disponibilidadTiempoRealOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: disponibilidadTiempoRealWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disponibilidadTiempoReals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disponibilidadTiempoReals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned disponibilidadTiempoReals
    **/
    _count?: true | DisponibilidadTiempoRealCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DisponibilidadTiempoRealAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DisponibilidadTiempoRealSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DisponibilidadTiempoRealMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DisponibilidadTiempoRealMaxAggregateInputType
  }

  export type GetDisponibilidadTiempoRealAggregateType<T extends DisponibilidadTiempoRealAggregateArgs> = {
        [P in keyof T & keyof AggregateDisponibilidadTiempoReal]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDisponibilidadTiempoReal[P]>
      : GetScalarType<T[P], AggregateDisponibilidadTiempoReal[P]>
  }




  export type disponibilidadTiempoRealGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: disponibilidadTiempoRealWhereInput
    orderBy?: disponibilidadTiempoRealOrderByWithAggregationInput | disponibilidadTiempoRealOrderByWithAggregationInput[]
    by: DisponibilidadTiempoRealScalarFieldEnum[] | DisponibilidadTiempoRealScalarFieldEnum
    having?: disponibilidadTiempoRealScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DisponibilidadTiempoRealCountAggregateInputType | true
    _avg?: DisponibilidadTiempoRealAvgAggregateInputType
    _sum?: DisponibilidadTiempoRealSumAggregateInputType
    _min?: DisponibilidadTiempoRealMinAggregateInputType
    _max?: DisponibilidadTiempoRealMaxAggregateInputType
  }

  export type DisponibilidadTiempoRealGroupByOutputType = {
    disponibilidadID: number
    estilistaID: number | null
    diaSemana: string | null
    horaInicio: Date | null
    horaFinal: Date | null
    _count: DisponibilidadTiempoRealCountAggregateOutputType | null
    _avg: DisponibilidadTiempoRealAvgAggregateOutputType | null
    _sum: DisponibilidadTiempoRealSumAggregateOutputType | null
    _min: DisponibilidadTiempoRealMinAggregateOutputType | null
    _max: DisponibilidadTiempoRealMaxAggregateOutputType | null
  }

  type GetDisponibilidadTiempoRealGroupByPayload<T extends disponibilidadTiempoRealGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DisponibilidadTiempoRealGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DisponibilidadTiempoRealGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DisponibilidadTiempoRealGroupByOutputType[P]>
            : GetScalarType<T[P], DisponibilidadTiempoRealGroupByOutputType[P]>
        }
      >
    >


  export type disponibilidadTiempoRealSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    disponibilidadID?: boolean
    estilistaID?: boolean
    diaSemana?: boolean
    horaInicio?: boolean
    horaFinal?: boolean
    estilistas?: boolean | disponibilidadTiempoReal$estilistasArgs<ExtArgs>
  }, ExtArgs["result"]["disponibilidadTiempoReal"]>

  export type disponibilidadTiempoRealSelectScalar = {
    disponibilidadID?: boolean
    estilistaID?: boolean
    diaSemana?: boolean
    horaInicio?: boolean
    horaFinal?: boolean
  }

  export type disponibilidadTiempoRealInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estilistas?: boolean | disponibilidadTiempoReal$estilistasArgs<ExtArgs>
  }


  export type $disponibilidadTiempoRealPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "disponibilidadTiempoReal"
    objects: {
      estilistas: Prisma.$estilistasPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      disponibilidadID: number
      estilistaID: number | null
      diaSemana: string | null
      horaInicio: Date | null
      horaFinal: Date | null
    }, ExtArgs["result"]["disponibilidadTiempoReal"]>
    composites: {}
  }


  type disponibilidadTiempoRealGetPayload<S extends boolean | null | undefined | disponibilidadTiempoRealDefaultArgs> = $Result.GetResult<Prisma.$disponibilidadTiempoRealPayload, S>

  type disponibilidadTiempoRealCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<disponibilidadTiempoRealFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DisponibilidadTiempoRealCountAggregateInputType | true
    }

  export interface disponibilidadTiempoRealDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['disponibilidadTiempoReal'], meta: { name: 'disponibilidadTiempoReal' } }
    /**
     * Find zero or one DisponibilidadTiempoReal that matches the filter.
     * @param {disponibilidadTiempoRealFindUniqueArgs} args - Arguments to find a DisponibilidadTiempoReal
     * @example
     * // Get one DisponibilidadTiempoReal
     * const disponibilidadTiempoReal = await prisma.disponibilidadTiempoReal.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends disponibilidadTiempoRealFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, disponibilidadTiempoRealFindUniqueArgs<ExtArgs>>
    ): Prisma__disponibilidadTiempoRealClient<$Result.GetResult<Prisma.$disponibilidadTiempoRealPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one DisponibilidadTiempoReal that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {disponibilidadTiempoRealFindUniqueOrThrowArgs} args - Arguments to find a DisponibilidadTiempoReal
     * @example
     * // Get one DisponibilidadTiempoReal
     * const disponibilidadTiempoReal = await prisma.disponibilidadTiempoReal.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends disponibilidadTiempoRealFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, disponibilidadTiempoRealFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__disponibilidadTiempoRealClient<$Result.GetResult<Prisma.$disponibilidadTiempoRealPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first DisponibilidadTiempoReal that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disponibilidadTiempoRealFindFirstArgs} args - Arguments to find a DisponibilidadTiempoReal
     * @example
     * // Get one DisponibilidadTiempoReal
     * const disponibilidadTiempoReal = await prisma.disponibilidadTiempoReal.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends disponibilidadTiempoRealFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, disponibilidadTiempoRealFindFirstArgs<ExtArgs>>
    ): Prisma__disponibilidadTiempoRealClient<$Result.GetResult<Prisma.$disponibilidadTiempoRealPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first DisponibilidadTiempoReal that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disponibilidadTiempoRealFindFirstOrThrowArgs} args - Arguments to find a DisponibilidadTiempoReal
     * @example
     * // Get one DisponibilidadTiempoReal
     * const disponibilidadTiempoReal = await prisma.disponibilidadTiempoReal.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends disponibilidadTiempoRealFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, disponibilidadTiempoRealFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__disponibilidadTiempoRealClient<$Result.GetResult<Prisma.$disponibilidadTiempoRealPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more DisponibilidadTiempoReals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disponibilidadTiempoRealFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DisponibilidadTiempoReals
     * const disponibilidadTiempoReals = await prisma.disponibilidadTiempoReal.findMany()
     * 
     * // Get first 10 DisponibilidadTiempoReals
     * const disponibilidadTiempoReals = await prisma.disponibilidadTiempoReal.findMany({ take: 10 })
     * 
     * // Only select the `disponibilidadID`
     * const disponibilidadTiempoRealWithDisponibilidadIDOnly = await prisma.disponibilidadTiempoReal.findMany({ select: { disponibilidadID: true } })
     * 
    **/
    findMany<T extends disponibilidadTiempoRealFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, disponibilidadTiempoRealFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$disponibilidadTiempoRealPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a DisponibilidadTiempoReal.
     * @param {disponibilidadTiempoRealCreateArgs} args - Arguments to create a DisponibilidadTiempoReal.
     * @example
     * // Create one DisponibilidadTiempoReal
     * const DisponibilidadTiempoReal = await prisma.disponibilidadTiempoReal.create({
     *   data: {
     *     // ... data to create a DisponibilidadTiempoReal
     *   }
     * })
     * 
    **/
    create<T extends disponibilidadTiempoRealCreateArgs<ExtArgs>>(
      args: SelectSubset<T, disponibilidadTiempoRealCreateArgs<ExtArgs>>
    ): Prisma__disponibilidadTiempoRealClient<$Result.GetResult<Prisma.$disponibilidadTiempoRealPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many DisponibilidadTiempoReals.
     *     @param {disponibilidadTiempoRealCreateManyArgs} args - Arguments to create many DisponibilidadTiempoReals.
     *     @example
     *     // Create many DisponibilidadTiempoReals
     *     const disponibilidadTiempoReal = await prisma.disponibilidadTiempoReal.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends disponibilidadTiempoRealCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, disponibilidadTiempoRealCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a DisponibilidadTiempoReal.
     * @param {disponibilidadTiempoRealDeleteArgs} args - Arguments to delete one DisponibilidadTiempoReal.
     * @example
     * // Delete one DisponibilidadTiempoReal
     * const DisponibilidadTiempoReal = await prisma.disponibilidadTiempoReal.delete({
     *   where: {
     *     // ... filter to delete one DisponibilidadTiempoReal
     *   }
     * })
     * 
    **/
    delete<T extends disponibilidadTiempoRealDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, disponibilidadTiempoRealDeleteArgs<ExtArgs>>
    ): Prisma__disponibilidadTiempoRealClient<$Result.GetResult<Prisma.$disponibilidadTiempoRealPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one DisponibilidadTiempoReal.
     * @param {disponibilidadTiempoRealUpdateArgs} args - Arguments to update one DisponibilidadTiempoReal.
     * @example
     * // Update one DisponibilidadTiempoReal
     * const disponibilidadTiempoReal = await prisma.disponibilidadTiempoReal.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends disponibilidadTiempoRealUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, disponibilidadTiempoRealUpdateArgs<ExtArgs>>
    ): Prisma__disponibilidadTiempoRealClient<$Result.GetResult<Prisma.$disponibilidadTiempoRealPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more DisponibilidadTiempoReals.
     * @param {disponibilidadTiempoRealDeleteManyArgs} args - Arguments to filter DisponibilidadTiempoReals to delete.
     * @example
     * // Delete a few DisponibilidadTiempoReals
     * const { count } = await prisma.disponibilidadTiempoReal.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends disponibilidadTiempoRealDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, disponibilidadTiempoRealDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DisponibilidadTiempoReals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disponibilidadTiempoRealUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DisponibilidadTiempoReals
     * const disponibilidadTiempoReal = await prisma.disponibilidadTiempoReal.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends disponibilidadTiempoRealUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, disponibilidadTiempoRealUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DisponibilidadTiempoReal.
     * @param {disponibilidadTiempoRealUpsertArgs} args - Arguments to update or create a DisponibilidadTiempoReal.
     * @example
     * // Update or create a DisponibilidadTiempoReal
     * const disponibilidadTiempoReal = await prisma.disponibilidadTiempoReal.upsert({
     *   create: {
     *     // ... data to create a DisponibilidadTiempoReal
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DisponibilidadTiempoReal we want to update
     *   }
     * })
    **/
    upsert<T extends disponibilidadTiempoRealUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, disponibilidadTiempoRealUpsertArgs<ExtArgs>>
    ): Prisma__disponibilidadTiempoRealClient<$Result.GetResult<Prisma.$disponibilidadTiempoRealPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of DisponibilidadTiempoReals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disponibilidadTiempoRealCountArgs} args - Arguments to filter DisponibilidadTiempoReals to count.
     * @example
     * // Count the number of DisponibilidadTiempoReals
     * const count = await prisma.disponibilidadTiempoReal.count({
     *   where: {
     *     // ... the filter for the DisponibilidadTiempoReals we want to count
     *   }
     * })
    **/
    count<T extends disponibilidadTiempoRealCountArgs>(
      args?: Subset<T, disponibilidadTiempoRealCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DisponibilidadTiempoRealCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DisponibilidadTiempoReal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DisponibilidadTiempoRealAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DisponibilidadTiempoRealAggregateArgs>(args: Subset<T, DisponibilidadTiempoRealAggregateArgs>): Prisma.PrismaPromise<GetDisponibilidadTiempoRealAggregateType<T>>

    /**
     * Group by DisponibilidadTiempoReal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disponibilidadTiempoRealGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends disponibilidadTiempoRealGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: disponibilidadTiempoRealGroupByArgs['orderBy'] }
        : { orderBy?: disponibilidadTiempoRealGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, disponibilidadTiempoRealGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDisponibilidadTiempoRealGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the disponibilidadTiempoReal model
   */
  readonly fields: disponibilidadTiempoRealFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for disponibilidadTiempoReal.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__disponibilidadTiempoRealClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    estilistas<T extends disponibilidadTiempoReal$estilistasArgs<ExtArgs> = {}>(args?: Subset<T, disponibilidadTiempoReal$estilistasArgs<ExtArgs>>): Prisma__estilistasClient<$Result.GetResult<Prisma.$estilistasPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the disponibilidadTiempoReal model
   */ 
  interface disponibilidadTiempoRealFieldRefs {
    readonly disponibilidadID: FieldRef<"disponibilidadTiempoReal", 'Int'>
    readonly estilistaID: FieldRef<"disponibilidadTiempoReal", 'Int'>
    readonly diaSemana: FieldRef<"disponibilidadTiempoReal", 'String'>
    readonly horaInicio: FieldRef<"disponibilidadTiempoReal", 'DateTime'>
    readonly horaFinal: FieldRef<"disponibilidadTiempoReal", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * disponibilidadTiempoReal findUnique
   */
  export type disponibilidadTiempoRealFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disponibilidadTiempoReal
     */
    select?: disponibilidadTiempoRealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: disponibilidadTiempoRealInclude<ExtArgs> | null
    /**
     * Filter, which disponibilidadTiempoReal to fetch.
     */
    where: disponibilidadTiempoRealWhereUniqueInput
  }


  /**
   * disponibilidadTiempoReal findUniqueOrThrow
   */
  export type disponibilidadTiempoRealFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disponibilidadTiempoReal
     */
    select?: disponibilidadTiempoRealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: disponibilidadTiempoRealInclude<ExtArgs> | null
    /**
     * Filter, which disponibilidadTiempoReal to fetch.
     */
    where: disponibilidadTiempoRealWhereUniqueInput
  }


  /**
   * disponibilidadTiempoReal findFirst
   */
  export type disponibilidadTiempoRealFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disponibilidadTiempoReal
     */
    select?: disponibilidadTiempoRealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: disponibilidadTiempoRealInclude<ExtArgs> | null
    /**
     * Filter, which disponibilidadTiempoReal to fetch.
     */
    where?: disponibilidadTiempoRealWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disponibilidadTiempoReals to fetch.
     */
    orderBy?: disponibilidadTiempoRealOrderByWithRelationInput | disponibilidadTiempoRealOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for disponibilidadTiempoReals.
     */
    cursor?: disponibilidadTiempoRealWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disponibilidadTiempoReals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disponibilidadTiempoReals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of disponibilidadTiempoReals.
     */
    distinct?: DisponibilidadTiempoRealScalarFieldEnum | DisponibilidadTiempoRealScalarFieldEnum[]
  }


  /**
   * disponibilidadTiempoReal findFirstOrThrow
   */
  export type disponibilidadTiempoRealFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disponibilidadTiempoReal
     */
    select?: disponibilidadTiempoRealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: disponibilidadTiempoRealInclude<ExtArgs> | null
    /**
     * Filter, which disponibilidadTiempoReal to fetch.
     */
    where?: disponibilidadTiempoRealWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disponibilidadTiempoReals to fetch.
     */
    orderBy?: disponibilidadTiempoRealOrderByWithRelationInput | disponibilidadTiempoRealOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for disponibilidadTiempoReals.
     */
    cursor?: disponibilidadTiempoRealWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disponibilidadTiempoReals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disponibilidadTiempoReals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of disponibilidadTiempoReals.
     */
    distinct?: DisponibilidadTiempoRealScalarFieldEnum | DisponibilidadTiempoRealScalarFieldEnum[]
  }


  /**
   * disponibilidadTiempoReal findMany
   */
  export type disponibilidadTiempoRealFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disponibilidadTiempoReal
     */
    select?: disponibilidadTiempoRealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: disponibilidadTiempoRealInclude<ExtArgs> | null
    /**
     * Filter, which disponibilidadTiempoReals to fetch.
     */
    where?: disponibilidadTiempoRealWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disponibilidadTiempoReals to fetch.
     */
    orderBy?: disponibilidadTiempoRealOrderByWithRelationInput | disponibilidadTiempoRealOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing disponibilidadTiempoReals.
     */
    cursor?: disponibilidadTiempoRealWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disponibilidadTiempoReals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disponibilidadTiempoReals.
     */
    skip?: number
    distinct?: DisponibilidadTiempoRealScalarFieldEnum | DisponibilidadTiempoRealScalarFieldEnum[]
  }


  /**
   * disponibilidadTiempoReal create
   */
  export type disponibilidadTiempoRealCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disponibilidadTiempoReal
     */
    select?: disponibilidadTiempoRealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: disponibilidadTiempoRealInclude<ExtArgs> | null
    /**
     * The data needed to create a disponibilidadTiempoReal.
     */
    data?: XOR<disponibilidadTiempoRealCreateInput, disponibilidadTiempoRealUncheckedCreateInput>
  }


  /**
   * disponibilidadTiempoReal createMany
   */
  export type disponibilidadTiempoRealCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many disponibilidadTiempoReals.
     */
    data: disponibilidadTiempoRealCreateManyInput | disponibilidadTiempoRealCreateManyInput[]
  }


  /**
   * disponibilidadTiempoReal update
   */
  export type disponibilidadTiempoRealUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disponibilidadTiempoReal
     */
    select?: disponibilidadTiempoRealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: disponibilidadTiempoRealInclude<ExtArgs> | null
    /**
     * The data needed to update a disponibilidadTiempoReal.
     */
    data: XOR<disponibilidadTiempoRealUpdateInput, disponibilidadTiempoRealUncheckedUpdateInput>
    /**
     * Choose, which disponibilidadTiempoReal to update.
     */
    where: disponibilidadTiempoRealWhereUniqueInput
  }


  /**
   * disponibilidadTiempoReal updateMany
   */
  export type disponibilidadTiempoRealUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update disponibilidadTiempoReals.
     */
    data: XOR<disponibilidadTiempoRealUpdateManyMutationInput, disponibilidadTiempoRealUncheckedUpdateManyInput>
    /**
     * Filter which disponibilidadTiempoReals to update
     */
    where?: disponibilidadTiempoRealWhereInput
  }


  /**
   * disponibilidadTiempoReal upsert
   */
  export type disponibilidadTiempoRealUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disponibilidadTiempoReal
     */
    select?: disponibilidadTiempoRealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: disponibilidadTiempoRealInclude<ExtArgs> | null
    /**
     * The filter to search for the disponibilidadTiempoReal to update in case it exists.
     */
    where: disponibilidadTiempoRealWhereUniqueInput
    /**
     * In case the disponibilidadTiempoReal found by the `where` argument doesn't exist, create a new disponibilidadTiempoReal with this data.
     */
    create: XOR<disponibilidadTiempoRealCreateInput, disponibilidadTiempoRealUncheckedCreateInput>
    /**
     * In case the disponibilidadTiempoReal was found with the provided `where` argument, update it with this data.
     */
    update: XOR<disponibilidadTiempoRealUpdateInput, disponibilidadTiempoRealUncheckedUpdateInput>
  }


  /**
   * disponibilidadTiempoReal delete
   */
  export type disponibilidadTiempoRealDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disponibilidadTiempoReal
     */
    select?: disponibilidadTiempoRealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: disponibilidadTiempoRealInclude<ExtArgs> | null
    /**
     * Filter which disponibilidadTiempoReal to delete.
     */
    where: disponibilidadTiempoRealWhereUniqueInput
  }


  /**
   * disponibilidadTiempoReal deleteMany
   */
  export type disponibilidadTiempoRealDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which disponibilidadTiempoReals to delete
     */
    where?: disponibilidadTiempoRealWhereInput
  }


  /**
   * disponibilidadTiempoReal.estilistas
   */
  export type disponibilidadTiempoReal$estilistasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estilistas
     */
    select?: estilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: estilistasInclude<ExtArgs> | null
    where?: estilistasWhereInput
  }


  /**
   * disponibilidadTiempoReal without action
   */
  export type disponibilidadTiempoRealDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disponibilidadTiempoReal
     */
    select?: disponibilidadTiempoRealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: disponibilidadTiempoRealInclude<ExtArgs> | null
  }



  /**
   * Model estilistas
   */

  export type AggregateEstilistas = {
    _count: EstilistasCountAggregateOutputType | null
    _avg: EstilistasAvgAggregateOutputType | null
    _sum: EstilistasSumAggregateOutputType | null
    _min: EstilistasMinAggregateOutputType | null
    _max: EstilistasMaxAggregateOutputType | null
  }

  export type EstilistasAvgAggregateOutputType = {
    estilistaID: number | null
    rolID: number | null
  }

  export type EstilistasSumAggregateOutputType = {
    estilistaID: number | null
    rolID: number | null
  }

  export type EstilistasMinAggregateOutputType = {
    estilistaID: number | null
    nombre: string | null
    apellidos: string | null
    telefono: string | null
    direccion: string | null
    fechaIngreso: Date | null
    fechaSalida: Date | null
    correo: string | null
    contrase_a: string | null
    rolID: number | null
    estado: string | null
  }

  export type EstilistasMaxAggregateOutputType = {
    estilistaID: number | null
    nombre: string | null
    apellidos: string | null
    telefono: string | null
    direccion: string | null
    fechaIngreso: Date | null
    fechaSalida: Date | null
    correo: string | null
    contrase_a: string | null
    rolID: number | null
    estado: string | null
  }

  export type EstilistasCountAggregateOutputType = {
    estilistaID: number
    nombre: number
    apellidos: number
    telefono: number
    direccion: number
    fechaIngreso: number
    fechaSalida: number
    correo: number
    contrase_a: number
    rolID: number
    estado: number
    _all: number
  }


  export type EstilistasAvgAggregateInputType = {
    estilistaID?: true
    rolID?: true
  }

  export type EstilistasSumAggregateInputType = {
    estilistaID?: true
    rolID?: true
  }

  export type EstilistasMinAggregateInputType = {
    estilistaID?: true
    nombre?: true
    apellidos?: true
    telefono?: true
    direccion?: true
    fechaIngreso?: true
    fechaSalida?: true
    correo?: true
    contrase_a?: true
    rolID?: true
    estado?: true
  }

  export type EstilistasMaxAggregateInputType = {
    estilistaID?: true
    nombre?: true
    apellidos?: true
    telefono?: true
    direccion?: true
    fechaIngreso?: true
    fechaSalida?: true
    correo?: true
    contrase_a?: true
    rolID?: true
    estado?: true
  }

  export type EstilistasCountAggregateInputType = {
    estilistaID?: true
    nombre?: true
    apellidos?: true
    telefono?: true
    direccion?: true
    fechaIngreso?: true
    fechaSalida?: true
    correo?: true
    contrase_a?: true
    rolID?: true
    estado?: true
    _all?: true
  }

  export type EstilistasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which estilistas to aggregate.
     */
    where?: estilistasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estilistas to fetch.
     */
    orderBy?: estilistasOrderByWithRelationInput | estilistasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: estilistasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estilistas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estilistas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned estilistas
    **/
    _count?: true | EstilistasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EstilistasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EstilistasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EstilistasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EstilistasMaxAggregateInputType
  }

  export type GetEstilistasAggregateType<T extends EstilistasAggregateArgs> = {
        [P in keyof T & keyof AggregateEstilistas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstilistas[P]>
      : GetScalarType<T[P], AggregateEstilistas[P]>
  }




  export type estilistasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: estilistasWhereInput
    orderBy?: estilistasOrderByWithAggregationInput | estilistasOrderByWithAggregationInput[]
    by: EstilistasScalarFieldEnum[] | EstilistasScalarFieldEnum
    having?: estilistasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EstilistasCountAggregateInputType | true
    _avg?: EstilistasAvgAggregateInputType
    _sum?: EstilistasSumAggregateInputType
    _min?: EstilistasMinAggregateInputType
    _max?: EstilistasMaxAggregateInputType
  }

  export type EstilistasGroupByOutputType = {
    estilistaID: number
    nombre: string | null
    apellidos: string | null
    telefono: string | null
    direccion: string | null
    fechaIngreso: Date | null
    fechaSalida: Date | null
    correo: string | null
    contrase_a: string | null
    rolID: number | null
    estado: string | null
    _count: EstilistasCountAggregateOutputType | null
    _avg: EstilistasAvgAggregateOutputType | null
    _sum: EstilistasSumAggregateOutputType | null
    _min: EstilistasMinAggregateOutputType | null
    _max: EstilistasMaxAggregateOutputType | null
  }

  type GetEstilistasGroupByPayload<T extends estilistasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EstilistasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EstilistasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EstilistasGroupByOutputType[P]>
            : GetScalarType<T[P], EstilistasGroupByOutputType[P]>
        }
      >
    >


  export type estilistasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    estilistaID?: boolean
    nombre?: boolean
    apellidos?: boolean
    telefono?: boolean
    direccion?: boolean
    fechaIngreso?: boolean
    fechaSalida?: boolean
    correo?: boolean
    contrase_a?: boolean
    rolID?: boolean
    estado?: boolean
    bloqueoHorarios?: boolean | estilistas$bloqueoHorariosArgs<ExtArgs>
    citas?: boolean | estilistas$citasArgs<ExtArgs>
    disponibilidadTiempoReal?: boolean | estilistas$disponibilidadTiempoRealArgs<ExtArgs>
    roles?: boolean | estilistas$rolesArgs<ExtArgs>
    historialCitas?: boolean | estilistas$historialCitasArgs<ExtArgs>
    reporteCitasPendientes?: boolean | estilistas$reporteCitasPendientesArgs<ExtArgs>
    reporteHorarioEstilistas?: boolean | estilistas$reporteHorarioEstilistasArgs<ExtArgs>
    _count?: boolean | EstilistasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estilistas"]>

  export type estilistasSelectScalar = {
    estilistaID?: boolean
    nombre?: boolean
    apellidos?: boolean
    telefono?: boolean
    direccion?: boolean
    fechaIngreso?: boolean
    fechaSalida?: boolean
    correo?: boolean
    contrase_a?: boolean
    rolID?: boolean
    estado?: boolean
  }

  export type estilistasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    bloqueoHorarios?: boolean | estilistas$bloqueoHorariosArgs<ExtArgs>
    citas?: boolean | estilistas$citasArgs<ExtArgs>
    disponibilidadTiempoReal?: boolean | estilistas$disponibilidadTiempoRealArgs<ExtArgs>
    roles?: boolean | estilistas$rolesArgs<ExtArgs>
    historialCitas?: boolean | estilistas$historialCitasArgs<ExtArgs>
    reporteCitasPendientes?: boolean | estilistas$reporteCitasPendientesArgs<ExtArgs>
    reporteHorarioEstilistas?: boolean | estilistas$reporteHorarioEstilistasArgs<ExtArgs>
    _count?: boolean | EstilistasCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $estilistasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "estilistas"
    objects: {
      bloqueoHorarios: Prisma.$bloqueoHorariosPayload<ExtArgs>[]
      citas: Prisma.$citasPayload<ExtArgs>[]
      disponibilidadTiempoReal: Prisma.$disponibilidadTiempoRealPayload<ExtArgs>[]
      roles: Prisma.$rolesPayload<ExtArgs> | null
      historialCitas: Prisma.$historialCitasPayload<ExtArgs>[]
      reporteCitasPendientes: Prisma.$reporteCitasPendientesPayload<ExtArgs>[]
      reporteHorarioEstilistas: Prisma.$reporteHorarioEstilistasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      estilistaID: number
      nombre: string | null
      apellidos: string | null
      telefono: string | null
      direccion: string | null
      fechaIngreso: Date | null
      fechaSalida: Date | null
      correo: string | null
      contrase_a: string | null
      rolID: number | null
      estado: string | null
    }, ExtArgs["result"]["estilistas"]>
    composites: {}
  }


  type estilistasGetPayload<S extends boolean | null | undefined | estilistasDefaultArgs> = $Result.GetResult<Prisma.$estilistasPayload, S>

  type estilistasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<estilistasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EstilistasCountAggregateInputType | true
    }

  export interface estilistasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['estilistas'], meta: { name: 'estilistas' } }
    /**
     * Find zero or one Estilistas that matches the filter.
     * @param {estilistasFindUniqueArgs} args - Arguments to find a Estilistas
     * @example
     * // Get one Estilistas
     * const estilistas = await prisma.estilistas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends estilistasFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, estilistasFindUniqueArgs<ExtArgs>>
    ): Prisma__estilistasClient<$Result.GetResult<Prisma.$estilistasPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Estilistas that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {estilistasFindUniqueOrThrowArgs} args - Arguments to find a Estilistas
     * @example
     * // Get one Estilistas
     * const estilistas = await prisma.estilistas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends estilistasFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, estilistasFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__estilistasClient<$Result.GetResult<Prisma.$estilistasPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Estilistas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estilistasFindFirstArgs} args - Arguments to find a Estilistas
     * @example
     * // Get one Estilistas
     * const estilistas = await prisma.estilistas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends estilistasFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, estilistasFindFirstArgs<ExtArgs>>
    ): Prisma__estilistasClient<$Result.GetResult<Prisma.$estilistasPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Estilistas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estilistasFindFirstOrThrowArgs} args - Arguments to find a Estilistas
     * @example
     * // Get one Estilistas
     * const estilistas = await prisma.estilistas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends estilistasFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, estilistasFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__estilistasClient<$Result.GetResult<Prisma.$estilistasPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Estilistas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estilistasFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Estilistas
     * const estilistas = await prisma.estilistas.findMany()
     * 
     * // Get first 10 Estilistas
     * const estilistas = await prisma.estilistas.findMany({ take: 10 })
     * 
     * // Only select the `estilistaID`
     * const estilistasWithEstilistaIDOnly = await prisma.estilistas.findMany({ select: { estilistaID: true } })
     * 
    **/
    findMany<T extends estilistasFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, estilistasFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estilistasPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Estilistas.
     * @param {estilistasCreateArgs} args - Arguments to create a Estilistas.
     * @example
     * // Create one Estilistas
     * const Estilistas = await prisma.estilistas.create({
     *   data: {
     *     // ... data to create a Estilistas
     *   }
     * })
     * 
    **/
    create<T extends estilistasCreateArgs<ExtArgs>>(
      args: SelectSubset<T, estilistasCreateArgs<ExtArgs>>
    ): Prisma__estilistasClient<$Result.GetResult<Prisma.$estilistasPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Estilistas.
     *     @param {estilistasCreateManyArgs} args - Arguments to create many Estilistas.
     *     @example
     *     // Create many Estilistas
     *     const estilistas = await prisma.estilistas.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends estilistasCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, estilistasCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Estilistas.
     * @param {estilistasDeleteArgs} args - Arguments to delete one Estilistas.
     * @example
     * // Delete one Estilistas
     * const Estilistas = await prisma.estilistas.delete({
     *   where: {
     *     // ... filter to delete one Estilistas
     *   }
     * })
     * 
    **/
    delete<T extends estilistasDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, estilistasDeleteArgs<ExtArgs>>
    ): Prisma__estilistasClient<$Result.GetResult<Prisma.$estilistasPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Estilistas.
     * @param {estilistasUpdateArgs} args - Arguments to update one Estilistas.
     * @example
     * // Update one Estilistas
     * const estilistas = await prisma.estilistas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends estilistasUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, estilistasUpdateArgs<ExtArgs>>
    ): Prisma__estilistasClient<$Result.GetResult<Prisma.$estilistasPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Estilistas.
     * @param {estilistasDeleteManyArgs} args - Arguments to filter Estilistas to delete.
     * @example
     * // Delete a few Estilistas
     * const { count } = await prisma.estilistas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends estilistasDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, estilistasDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Estilistas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estilistasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Estilistas
     * const estilistas = await prisma.estilistas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends estilistasUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, estilistasUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Estilistas.
     * @param {estilistasUpsertArgs} args - Arguments to update or create a Estilistas.
     * @example
     * // Update or create a Estilistas
     * const estilistas = await prisma.estilistas.upsert({
     *   create: {
     *     // ... data to create a Estilistas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Estilistas we want to update
     *   }
     * })
    **/
    upsert<T extends estilistasUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, estilistasUpsertArgs<ExtArgs>>
    ): Prisma__estilistasClient<$Result.GetResult<Prisma.$estilistasPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Estilistas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estilistasCountArgs} args - Arguments to filter Estilistas to count.
     * @example
     * // Count the number of Estilistas
     * const count = await prisma.estilistas.count({
     *   where: {
     *     // ... the filter for the Estilistas we want to count
     *   }
     * })
    **/
    count<T extends estilistasCountArgs>(
      args?: Subset<T, estilistasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EstilistasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Estilistas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstilistasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EstilistasAggregateArgs>(args: Subset<T, EstilistasAggregateArgs>): Prisma.PrismaPromise<GetEstilistasAggregateType<T>>

    /**
     * Group by Estilistas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estilistasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends estilistasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: estilistasGroupByArgs['orderBy'] }
        : { orderBy?: estilistasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, estilistasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstilistasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the estilistas model
   */
  readonly fields: estilistasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for estilistas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__estilistasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    bloqueoHorarios<T extends estilistas$bloqueoHorariosArgs<ExtArgs> = {}>(args?: Subset<T, estilistas$bloqueoHorariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bloqueoHorariosPayload<ExtArgs>, T, 'findMany'> | Null>;

    citas<T extends estilistas$citasArgs<ExtArgs> = {}>(args?: Subset<T, estilistas$citasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, 'findMany'> | Null>;

    disponibilidadTiempoReal<T extends estilistas$disponibilidadTiempoRealArgs<ExtArgs> = {}>(args?: Subset<T, estilistas$disponibilidadTiempoRealArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$disponibilidadTiempoRealPayload<ExtArgs>, T, 'findMany'> | Null>;

    roles<T extends estilistas$rolesArgs<ExtArgs> = {}>(args?: Subset<T, estilistas$rolesArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    historialCitas<T extends estilistas$historialCitasArgs<ExtArgs> = {}>(args?: Subset<T, estilistas$historialCitasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historialCitasPayload<ExtArgs>, T, 'findMany'> | Null>;

    reporteCitasPendientes<T extends estilistas$reporteCitasPendientesArgs<ExtArgs> = {}>(args?: Subset<T, estilistas$reporteCitasPendientesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reporteCitasPendientesPayload<ExtArgs>, T, 'findMany'> | Null>;

    reporteHorarioEstilistas<T extends estilistas$reporteHorarioEstilistasArgs<ExtArgs> = {}>(args?: Subset<T, estilistas$reporteHorarioEstilistasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reporteHorarioEstilistasPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the estilistas model
   */ 
  interface estilistasFieldRefs {
    readonly estilistaID: FieldRef<"estilistas", 'Int'>
    readonly nombre: FieldRef<"estilistas", 'String'>
    readonly apellidos: FieldRef<"estilistas", 'String'>
    readonly telefono: FieldRef<"estilistas", 'String'>
    readonly direccion: FieldRef<"estilistas", 'String'>
    readonly fechaIngreso: FieldRef<"estilistas", 'DateTime'>
    readonly fechaSalida: FieldRef<"estilistas", 'DateTime'>
    readonly correo: FieldRef<"estilistas", 'String'>
    readonly contrase_a: FieldRef<"estilistas", 'String'>
    readonly rolID: FieldRef<"estilistas", 'Int'>
    readonly estado: FieldRef<"estilistas", 'String'>
  }
    

  // Custom InputTypes

  /**
   * estilistas findUnique
   */
  export type estilistasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estilistas
     */
    select?: estilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: estilistasInclude<ExtArgs> | null
    /**
     * Filter, which estilistas to fetch.
     */
    where: estilistasWhereUniqueInput
  }


  /**
   * estilistas findUniqueOrThrow
   */
  export type estilistasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estilistas
     */
    select?: estilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: estilistasInclude<ExtArgs> | null
    /**
     * Filter, which estilistas to fetch.
     */
    where: estilistasWhereUniqueInput
  }


  /**
   * estilistas findFirst
   */
  export type estilistasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estilistas
     */
    select?: estilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: estilistasInclude<ExtArgs> | null
    /**
     * Filter, which estilistas to fetch.
     */
    where?: estilistasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estilistas to fetch.
     */
    orderBy?: estilistasOrderByWithRelationInput | estilistasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for estilistas.
     */
    cursor?: estilistasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estilistas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estilistas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of estilistas.
     */
    distinct?: EstilistasScalarFieldEnum | EstilistasScalarFieldEnum[]
  }


  /**
   * estilistas findFirstOrThrow
   */
  export type estilistasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estilistas
     */
    select?: estilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: estilistasInclude<ExtArgs> | null
    /**
     * Filter, which estilistas to fetch.
     */
    where?: estilistasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estilistas to fetch.
     */
    orderBy?: estilistasOrderByWithRelationInput | estilistasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for estilistas.
     */
    cursor?: estilistasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estilistas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estilistas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of estilistas.
     */
    distinct?: EstilistasScalarFieldEnum | EstilistasScalarFieldEnum[]
  }


  /**
   * estilistas findMany
   */
  export type estilistasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estilistas
     */
    select?: estilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: estilistasInclude<ExtArgs> | null
    /**
     * Filter, which estilistas to fetch.
     */
    where?: estilistasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estilistas to fetch.
     */
    orderBy?: estilistasOrderByWithRelationInput | estilistasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing estilistas.
     */
    cursor?: estilistasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estilistas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estilistas.
     */
    skip?: number
    distinct?: EstilistasScalarFieldEnum | EstilistasScalarFieldEnum[]
  }


  /**
   * estilistas create
   */
  export type estilistasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estilistas
     */
    select?: estilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: estilistasInclude<ExtArgs> | null
    /**
     * The data needed to create a estilistas.
     */
    data?: XOR<estilistasCreateInput, estilistasUncheckedCreateInput>
  }


  /**
   * estilistas createMany
   */
  export type estilistasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many estilistas.
     */
    data: estilistasCreateManyInput | estilistasCreateManyInput[]
  }


  /**
   * estilistas update
   */
  export type estilistasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estilistas
     */
    select?: estilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: estilistasInclude<ExtArgs> | null
    /**
     * The data needed to update a estilistas.
     */
    data: XOR<estilistasUpdateInput, estilistasUncheckedUpdateInput>
    /**
     * Choose, which estilistas to update.
     */
    where: estilistasWhereUniqueInput
  }


  /**
   * estilistas updateMany
   */
  export type estilistasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update estilistas.
     */
    data: XOR<estilistasUpdateManyMutationInput, estilistasUncheckedUpdateManyInput>
    /**
     * Filter which estilistas to update
     */
    where?: estilistasWhereInput
  }


  /**
   * estilistas upsert
   */
  export type estilistasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estilistas
     */
    select?: estilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: estilistasInclude<ExtArgs> | null
    /**
     * The filter to search for the estilistas to update in case it exists.
     */
    where: estilistasWhereUniqueInput
    /**
     * In case the estilistas found by the `where` argument doesn't exist, create a new estilistas with this data.
     */
    create: XOR<estilistasCreateInput, estilistasUncheckedCreateInput>
    /**
     * In case the estilistas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<estilistasUpdateInput, estilistasUncheckedUpdateInput>
  }


  /**
   * estilistas delete
   */
  export type estilistasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estilistas
     */
    select?: estilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: estilistasInclude<ExtArgs> | null
    /**
     * Filter which estilistas to delete.
     */
    where: estilistasWhereUniqueInput
  }


  /**
   * estilistas deleteMany
   */
  export type estilistasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which estilistas to delete
     */
    where?: estilistasWhereInput
  }


  /**
   * estilistas.bloqueoHorarios
   */
  export type estilistas$bloqueoHorariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bloqueoHorarios
     */
    select?: bloqueoHorariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: bloqueoHorariosInclude<ExtArgs> | null
    where?: bloqueoHorariosWhereInput
    orderBy?: bloqueoHorariosOrderByWithRelationInput | bloqueoHorariosOrderByWithRelationInput[]
    cursor?: bloqueoHorariosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BloqueoHorariosScalarFieldEnum | BloqueoHorariosScalarFieldEnum[]
  }


  /**
   * estilistas.citas
   */
  export type estilistas$citasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasInclude<ExtArgs> | null
    where?: citasWhereInput
    orderBy?: citasOrderByWithRelationInput | citasOrderByWithRelationInput[]
    cursor?: citasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CitasScalarFieldEnum | CitasScalarFieldEnum[]
  }


  /**
   * estilistas.disponibilidadTiempoReal
   */
  export type estilistas$disponibilidadTiempoRealArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disponibilidadTiempoReal
     */
    select?: disponibilidadTiempoRealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: disponibilidadTiempoRealInclude<ExtArgs> | null
    where?: disponibilidadTiempoRealWhereInput
    orderBy?: disponibilidadTiempoRealOrderByWithRelationInput | disponibilidadTiempoRealOrderByWithRelationInput[]
    cursor?: disponibilidadTiempoRealWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DisponibilidadTiempoRealScalarFieldEnum | DisponibilidadTiempoRealScalarFieldEnum[]
  }


  /**
   * estilistas.roles
   */
  export type estilistas$rolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: rolesInclude<ExtArgs> | null
    where?: rolesWhereInput
  }


  /**
   * estilistas.historialCitas
   */
  export type estilistas$historialCitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialCitas
     */
    select?: historialCitasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialCitasInclude<ExtArgs> | null
    where?: historialCitasWhereInput
    orderBy?: historialCitasOrderByWithRelationInput | historialCitasOrderByWithRelationInput[]
    cursor?: historialCitasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HistorialCitasScalarFieldEnum | HistorialCitasScalarFieldEnum[]
  }


  /**
   * estilistas.reporteCitasPendientes
   */
  export type estilistas$reporteCitasPendientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteCitasPendientes
     */
    select?: reporteCitasPendientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteCitasPendientesInclude<ExtArgs> | null
    where?: reporteCitasPendientesWhereInput
    orderBy?: reporteCitasPendientesOrderByWithRelationInput | reporteCitasPendientesOrderByWithRelationInput[]
    cursor?: reporteCitasPendientesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReporteCitasPendientesScalarFieldEnum | ReporteCitasPendientesScalarFieldEnum[]
  }


  /**
   * estilistas.reporteHorarioEstilistas
   */
  export type estilistas$reporteHorarioEstilistasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteHorarioEstilistas
     */
    select?: reporteHorarioEstilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteHorarioEstilistasInclude<ExtArgs> | null
    where?: reporteHorarioEstilistasWhereInput
    orderBy?: reporteHorarioEstilistasOrderByWithRelationInput | reporteHorarioEstilistasOrderByWithRelationInput[]
    cursor?: reporteHorarioEstilistasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReporteHorarioEstilistasScalarFieldEnum | ReporteHorarioEstilistasScalarFieldEnum[]
  }


  /**
   * estilistas without action
   */
  export type estilistasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estilistas
     */
    select?: estilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: estilistasInclude<ExtArgs> | null
  }



  /**
   * Model galeriaEstilos
   */

  export type AggregateGaleriaEstilos = {
    _count: GaleriaEstilosCountAggregateOutputType | null
    _avg: GaleriaEstilosAvgAggregateOutputType | null
    _sum: GaleriaEstilosSumAggregateOutputType | null
    _min: GaleriaEstilosMinAggregateOutputType | null
    _max: GaleriaEstilosMaxAggregateOutputType | null
  }

  export type GaleriaEstilosAvgAggregateOutputType = {
    estiloID: number | null
  }

  export type GaleriaEstilosSumAggregateOutputType = {
    estiloID: number | null
  }

  export type GaleriaEstilosMinAggregateOutputType = {
    estiloID: number | null
    nombreEstilo: string | null
    rutaImagen: string | null
  }

  export type GaleriaEstilosMaxAggregateOutputType = {
    estiloID: number | null
    nombreEstilo: string | null
    rutaImagen: string | null
  }

  export type GaleriaEstilosCountAggregateOutputType = {
    estiloID: number
    nombreEstilo: number
    rutaImagen: number
    _all: number
  }


  export type GaleriaEstilosAvgAggregateInputType = {
    estiloID?: true
  }

  export type GaleriaEstilosSumAggregateInputType = {
    estiloID?: true
  }

  export type GaleriaEstilosMinAggregateInputType = {
    estiloID?: true
    nombreEstilo?: true
    rutaImagen?: true
  }

  export type GaleriaEstilosMaxAggregateInputType = {
    estiloID?: true
    nombreEstilo?: true
    rutaImagen?: true
  }

  export type GaleriaEstilosCountAggregateInputType = {
    estiloID?: true
    nombreEstilo?: true
    rutaImagen?: true
    _all?: true
  }

  export type GaleriaEstilosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which galeriaEstilos to aggregate.
     */
    where?: galeriaEstilosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of galeriaEstilos to fetch.
     */
    orderBy?: galeriaEstilosOrderByWithRelationInput | galeriaEstilosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: galeriaEstilosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` galeriaEstilos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` galeriaEstilos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned galeriaEstilos
    **/
    _count?: true | GaleriaEstilosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: GaleriaEstilosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: GaleriaEstilosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GaleriaEstilosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GaleriaEstilosMaxAggregateInputType
  }

  export type GetGaleriaEstilosAggregateType<T extends GaleriaEstilosAggregateArgs> = {
        [P in keyof T & keyof AggregateGaleriaEstilos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGaleriaEstilos[P]>
      : GetScalarType<T[P], AggregateGaleriaEstilos[P]>
  }




  export type galeriaEstilosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: galeriaEstilosWhereInput
    orderBy?: galeriaEstilosOrderByWithAggregationInput | galeriaEstilosOrderByWithAggregationInput[]
    by: GaleriaEstilosScalarFieldEnum[] | GaleriaEstilosScalarFieldEnum
    having?: galeriaEstilosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GaleriaEstilosCountAggregateInputType | true
    _avg?: GaleriaEstilosAvgAggregateInputType
    _sum?: GaleriaEstilosSumAggregateInputType
    _min?: GaleriaEstilosMinAggregateInputType
    _max?: GaleriaEstilosMaxAggregateInputType
  }

  export type GaleriaEstilosGroupByOutputType = {
    estiloID: number
    nombreEstilo: string | null
    rutaImagen: string | null
    _count: GaleriaEstilosCountAggregateOutputType | null
    _avg: GaleriaEstilosAvgAggregateOutputType | null
    _sum: GaleriaEstilosSumAggregateOutputType | null
    _min: GaleriaEstilosMinAggregateOutputType | null
    _max: GaleriaEstilosMaxAggregateOutputType | null
  }

  type GetGaleriaEstilosGroupByPayload<T extends galeriaEstilosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<GaleriaEstilosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GaleriaEstilosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GaleriaEstilosGroupByOutputType[P]>
            : GetScalarType<T[P], GaleriaEstilosGroupByOutputType[P]>
        }
      >
    >


  export type galeriaEstilosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    estiloID?: boolean
    nombreEstilo?: boolean
    rutaImagen?: boolean
    citas?: boolean | galeriaEstilos$citasArgs<ExtArgs>
    _count?: boolean | GaleriaEstilosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["galeriaEstilos"]>

  export type galeriaEstilosSelectScalar = {
    estiloID?: boolean
    nombreEstilo?: boolean
    rutaImagen?: boolean
  }

  export type galeriaEstilosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    citas?: boolean | galeriaEstilos$citasArgs<ExtArgs>
    _count?: boolean | GaleriaEstilosCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $galeriaEstilosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "galeriaEstilos"
    objects: {
      citas: Prisma.$citasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      estiloID: number
      nombreEstilo: string | null
      rutaImagen: string | null
    }, ExtArgs["result"]["galeriaEstilos"]>
    composites: {}
  }


  type galeriaEstilosGetPayload<S extends boolean | null | undefined | galeriaEstilosDefaultArgs> = $Result.GetResult<Prisma.$galeriaEstilosPayload, S>

  type galeriaEstilosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<galeriaEstilosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: GaleriaEstilosCountAggregateInputType | true
    }

  export interface galeriaEstilosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['galeriaEstilos'], meta: { name: 'galeriaEstilos' } }
    /**
     * Find zero or one GaleriaEstilos that matches the filter.
     * @param {galeriaEstilosFindUniqueArgs} args - Arguments to find a GaleriaEstilos
     * @example
     * // Get one GaleriaEstilos
     * const galeriaEstilos = await prisma.galeriaEstilos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends galeriaEstilosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, galeriaEstilosFindUniqueArgs<ExtArgs>>
    ): Prisma__galeriaEstilosClient<$Result.GetResult<Prisma.$galeriaEstilosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one GaleriaEstilos that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {galeriaEstilosFindUniqueOrThrowArgs} args - Arguments to find a GaleriaEstilos
     * @example
     * // Get one GaleriaEstilos
     * const galeriaEstilos = await prisma.galeriaEstilos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends galeriaEstilosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, galeriaEstilosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__galeriaEstilosClient<$Result.GetResult<Prisma.$galeriaEstilosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first GaleriaEstilos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {galeriaEstilosFindFirstArgs} args - Arguments to find a GaleriaEstilos
     * @example
     * // Get one GaleriaEstilos
     * const galeriaEstilos = await prisma.galeriaEstilos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends galeriaEstilosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, galeriaEstilosFindFirstArgs<ExtArgs>>
    ): Prisma__galeriaEstilosClient<$Result.GetResult<Prisma.$galeriaEstilosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first GaleriaEstilos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {galeriaEstilosFindFirstOrThrowArgs} args - Arguments to find a GaleriaEstilos
     * @example
     * // Get one GaleriaEstilos
     * const galeriaEstilos = await prisma.galeriaEstilos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends galeriaEstilosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, galeriaEstilosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__galeriaEstilosClient<$Result.GetResult<Prisma.$galeriaEstilosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more GaleriaEstilos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {galeriaEstilosFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all GaleriaEstilos
     * const galeriaEstilos = await prisma.galeriaEstilos.findMany()
     * 
     * // Get first 10 GaleriaEstilos
     * const galeriaEstilos = await prisma.galeriaEstilos.findMany({ take: 10 })
     * 
     * // Only select the `estiloID`
     * const galeriaEstilosWithEstiloIDOnly = await prisma.galeriaEstilos.findMany({ select: { estiloID: true } })
     * 
    **/
    findMany<T extends galeriaEstilosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, galeriaEstilosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$galeriaEstilosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a GaleriaEstilos.
     * @param {galeriaEstilosCreateArgs} args - Arguments to create a GaleriaEstilos.
     * @example
     * // Create one GaleriaEstilos
     * const GaleriaEstilos = await prisma.galeriaEstilos.create({
     *   data: {
     *     // ... data to create a GaleriaEstilos
     *   }
     * })
     * 
    **/
    create<T extends galeriaEstilosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, galeriaEstilosCreateArgs<ExtArgs>>
    ): Prisma__galeriaEstilosClient<$Result.GetResult<Prisma.$galeriaEstilosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many GaleriaEstilos.
     *     @param {galeriaEstilosCreateManyArgs} args - Arguments to create many GaleriaEstilos.
     *     @example
     *     // Create many GaleriaEstilos
     *     const galeriaEstilos = await prisma.galeriaEstilos.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends galeriaEstilosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, galeriaEstilosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a GaleriaEstilos.
     * @param {galeriaEstilosDeleteArgs} args - Arguments to delete one GaleriaEstilos.
     * @example
     * // Delete one GaleriaEstilos
     * const GaleriaEstilos = await prisma.galeriaEstilos.delete({
     *   where: {
     *     // ... filter to delete one GaleriaEstilos
     *   }
     * })
     * 
    **/
    delete<T extends galeriaEstilosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, galeriaEstilosDeleteArgs<ExtArgs>>
    ): Prisma__galeriaEstilosClient<$Result.GetResult<Prisma.$galeriaEstilosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one GaleriaEstilos.
     * @param {galeriaEstilosUpdateArgs} args - Arguments to update one GaleriaEstilos.
     * @example
     * // Update one GaleriaEstilos
     * const galeriaEstilos = await prisma.galeriaEstilos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends galeriaEstilosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, galeriaEstilosUpdateArgs<ExtArgs>>
    ): Prisma__galeriaEstilosClient<$Result.GetResult<Prisma.$galeriaEstilosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more GaleriaEstilos.
     * @param {galeriaEstilosDeleteManyArgs} args - Arguments to filter GaleriaEstilos to delete.
     * @example
     * // Delete a few GaleriaEstilos
     * const { count } = await prisma.galeriaEstilos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends galeriaEstilosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, galeriaEstilosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more GaleriaEstilos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {galeriaEstilosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many GaleriaEstilos
     * const galeriaEstilos = await prisma.galeriaEstilos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends galeriaEstilosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, galeriaEstilosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one GaleriaEstilos.
     * @param {galeriaEstilosUpsertArgs} args - Arguments to update or create a GaleriaEstilos.
     * @example
     * // Update or create a GaleriaEstilos
     * const galeriaEstilos = await prisma.galeriaEstilos.upsert({
     *   create: {
     *     // ... data to create a GaleriaEstilos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the GaleriaEstilos we want to update
     *   }
     * })
    **/
    upsert<T extends galeriaEstilosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, galeriaEstilosUpsertArgs<ExtArgs>>
    ): Prisma__galeriaEstilosClient<$Result.GetResult<Prisma.$galeriaEstilosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of GaleriaEstilos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {galeriaEstilosCountArgs} args - Arguments to filter GaleriaEstilos to count.
     * @example
     * // Count the number of GaleriaEstilos
     * const count = await prisma.galeriaEstilos.count({
     *   where: {
     *     // ... the filter for the GaleriaEstilos we want to count
     *   }
     * })
    **/
    count<T extends galeriaEstilosCountArgs>(
      args?: Subset<T, galeriaEstilosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GaleriaEstilosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a GaleriaEstilos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GaleriaEstilosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GaleriaEstilosAggregateArgs>(args: Subset<T, GaleriaEstilosAggregateArgs>): Prisma.PrismaPromise<GetGaleriaEstilosAggregateType<T>>

    /**
     * Group by GaleriaEstilos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {galeriaEstilosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends galeriaEstilosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: galeriaEstilosGroupByArgs['orderBy'] }
        : { orderBy?: galeriaEstilosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, galeriaEstilosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGaleriaEstilosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the galeriaEstilos model
   */
  readonly fields: galeriaEstilosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for galeriaEstilos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__galeriaEstilosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    citas<T extends galeriaEstilos$citasArgs<ExtArgs> = {}>(args?: Subset<T, galeriaEstilos$citasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the galeriaEstilos model
   */ 
  interface galeriaEstilosFieldRefs {
    readonly estiloID: FieldRef<"galeriaEstilos", 'Int'>
    readonly nombreEstilo: FieldRef<"galeriaEstilos", 'String'>
    readonly rutaImagen: FieldRef<"galeriaEstilos", 'String'>
  }
    

  // Custom InputTypes

  /**
   * galeriaEstilos findUnique
   */
  export type galeriaEstilosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the galeriaEstilos
     */
    select?: galeriaEstilosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: galeriaEstilosInclude<ExtArgs> | null
    /**
     * Filter, which galeriaEstilos to fetch.
     */
    where: galeriaEstilosWhereUniqueInput
  }


  /**
   * galeriaEstilos findUniqueOrThrow
   */
  export type galeriaEstilosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the galeriaEstilos
     */
    select?: galeriaEstilosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: galeriaEstilosInclude<ExtArgs> | null
    /**
     * Filter, which galeriaEstilos to fetch.
     */
    where: galeriaEstilosWhereUniqueInput
  }


  /**
   * galeriaEstilos findFirst
   */
  export type galeriaEstilosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the galeriaEstilos
     */
    select?: galeriaEstilosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: galeriaEstilosInclude<ExtArgs> | null
    /**
     * Filter, which galeriaEstilos to fetch.
     */
    where?: galeriaEstilosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of galeriaEstilos to fetch.
     */
    orderBy?: galeriaEstilosOrderByWithRelationInput | galeriaEstilosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for galeriaEstilos.
     */
    cursor?: galeriaEstilosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` galeriaEstilos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` galeriaEstilos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of galeriaEstilos.
     */
    distinct?: GaleriaEstilosScalarFieldEnum | GaleriaEstilosScalarFieldEnum[]
  }


  /**
   * galeriaEstilos findFirstOrThrow
   */
  export type galeriaEstilosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the galeriaEstilos
     */
    select?: galeriaEstilosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: galeriaEstilosInclude<ExtArgs> | null
    /**
     * Filter, which galeriaEstilos to fetch.
     */
    where?: galeriaEstilosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of galeriaEstilos to fetch.
     */
    orderBy?: galeriaEstilosOrderByWithRelationInput | galeriaEstilosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for galeriaEstilos.
     */
    cursor?: galeriaEstilosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` galeriaEstilos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` galeriaEstilos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of galeriaEstilos.
     */
    distinct?: GaleriaEstilosScalarFieldEnum | GaleriaEstilosScalarFieldEnum[]
  }


  /**
   * galeriaEstilos findMany
   */
  export type galeriaEstilosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the galeriaEstilos
     */
    select?: galeriaEstilosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: galeriaEstilosInclude<ExtArgs> | null
    /**
     * Filter, which galeriaEstilos to fetch.
     */
    where?: galeriaEstilosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of galeriaEstilos to fetch.
     */
    orderBy?: galeriaEstilosOrderByWithRelationInput | galeriaEstilosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing galeriaEstilos.
     */
    cursor?: galeriaEstilosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` galeriaEstilos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` galeriaEstilos.
     */
    skip?: number
    distinct?: GaleriaEstilosScalarFieldEnum | GaleriaEstilosScalarFieldEnum[]
  }


  /**
   * galeriaEstilos create
   */
  export type galeriaEstilosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the galeriaEstilos
     */
    select?: galeriaEstilosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: galeriaEstilosInclude<ExtArgs> | null
    /**
     * The data needed to create a galeriaEstilos.
     */
    data?: XOR<galeriaEstilosCreateInput, galeriaEstilosUncheckedCreateInput>
  }


  /**
   * galeriaEstilos createMany
   */
  export type galeriaEstilosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many galeriaEstilos.
     */
    data: galeriaEstilosCreateManyInput | galeriaEstilosCreateManyInput[]
  }


  /**
   * galeriaEstilos update
   */
  export type galeriaEstilosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the galeriaEstilos
     */
    select?: galeriaEstilosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: galeriaEstilosInclude<ExtArgs> | null
    /**
     * The data needed to update a galeriaEstilos.
     */
    data: XOR<galeriaEstilosUpdateInput, galeriaEstilosUncheckedUpdateInput>
    /**
     * Choose, which galeriaEstilos to update.
     */
    where: galeriaEstilosWhereUniqueInput
  }


  /**
   * galeriaEstilos updateMany
   */
  export type galeriaEstilosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update galeriaEstilos.
     */
    data: XOR<galeriaEstilosUpdateManyMutationInput, galeriaEstilosUncheckedUpdateManyInput>
    /**
     * Filter which galeriaEstilos to update
     */
    where?: galeriaEstilosWhereInput
  }


  /**
   * galeriaEstilos upsert
   */
  export type galeriaEstilosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the galeriaEstilos
     */
    select?: galeriaEstilosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: galeriaEstilosInclude<ExtArgs> | null
    /**
     * The filter to search for the galeriaEstilos to update in case it exists.
     */
    where: galeriaEstilosWhereUniqueInput
    /**
     * In case the galeriaEstilos found by the `where` argument doesn't exist, create a new galeriaEstilos with this data.
     */
    create: XOR<galeriaEstilosCreateInput, galeriaEstilosUncheckedCreateInput>
    /**
     * In case the galeriaEstilos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<galeriaEstilosUpdateInput, galeriaEstilosUncheckedUpdateInput>
  }


  /**
   * galeriaEstilos delete
   */
  export type galeriaEstilosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the galeriaEstilos
     */
    select?: galeriaEstilosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: galeriaEstilosInclude<ExtArgs> | null
    /**
     * Filter which galeriaEstilos to delete.
     */
    where: galeriaEstilosWhereUniqueInput
  }


  /**
   * galeriaEstilos deleteMany
   */
  export type galeriaEstilosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which galeriaEstilos to delete
     */
    where?: galeriaEstilosWhereInput
  }


  /**
   * galeriaEstilos.citas
   */
  export type galeriaEstilos$citasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasInclude<ExtArgs> | null
    where?: citasWhereInput
    orderBy?: citasOrderByWithRelationInput | citasOrderByWithRelationInput[]
    cursor?: citasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CitasScalarFieldEnum | CitasScalarFieldEnum[]
  }


  /**
   * galeriaEstilos without action
   */
  export type galeriaEstilosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the galeriaEstilos
     */
    select?: galeriaEstilosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: galeriaEstilosInclude<ExtArgs> | null
  }



  /**
   * Model historialCitas
   */

  export type AggregateHistorialCitas = {
    _count: HistorialCitasCountAggregateOutputType | null
    _avg: HistorialCitasAvgAggregateOutputType | null
    _sum: HistorialCitasSumAggregateOutputType | null
    _min: HistorialCitasMinAggregateOutputType | null
    _max: HistorialCitasMaxAggregateOutputType | null
  }

  export type HistorialCitasAvgAggregateOutputType = {
    historialID: number | null
    citaID: number | null
    clienteID: number | null
    estilistaID: number | null
    servicioID: number | null
  }

  export type HistorialCitasSumAggregateOutputType = {
    historialID: number | null
    citaID: number | null
    clienteID: number | null
    estilistaID: number | null
    servicioID: number | null
  }

  export type HistorialCitasMinAggregateOutputType = {
    historialID: number | null
    citaID: number | null
    clienteID: number | null
    estilistaID: number | null
    fechaCita: Date | null
    servicioID: number | null
  }

  export type HistorialCitasMaxAggregateOutputType = {
    historialID: number | null
    citaID: number | null
    clienteID: number | null
    estilistaID: number | null
    fechaCita: Date | null
    servicioID: number | null
  }

  export type HistorialCitasCountAggregateOutputType = {
    historialID: number
    citaID: number
    clienteID: number
    estilistaID: number
    fechaCita: number
    servicioID: number
    _all: number
  }


  export type HistorialCitasAvgAggregateInputType = {
    historialID?: true
    citaID?: true
    clienteID?: true
    estilistaID?: true
    servicioID?: true
  }

  export type HistorialCitasSumAggregateInputType = {
    historialID?: true
    citaID?: true
    clienteID?: true
    estilistaID?: true
    servicioID?: true
  }

  export type HistorialCitasMinAggregateInputType = {
    historialID?: true
    citaID?: true
    clienteID?: true
    estilistaID?: true
    fechaCita?: true
    servicioID?: true
  }

  export type HistorialCitasMaxAggregateInputType = {
    historialID?: true
    citaID?: true
    clienteID?: true
    estilistaID?: true
    fechaCita?: true
    servicioID?: true
  }

  export type HistorialCitasCountAggregateInputType = {
    historialID?: true
    citaID?: true
    clienteID?: true
    estilistaID?: true
    fechaCita?: true
    servicioID?: true
    _all?: true
  }

  export type HistorialCitasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which historialCitas to aggregate.
     */
    where?: historialCitasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historialCitas to fetch.
     */
    orderBy?: historialCitasOrderByWithRelationInput | historialCitasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: historialCitasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historialCitas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historialCitas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned historialCitas
    **/
    _count?: true | HistorialCitasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HistorialCitasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HistorialCitasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HistorialCitasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HistorialCitasMaxAggregateInputType
  }

  export type GetHistorialCitasAggregateType<T extends HistorialCitasAggregateArgs> = {
        [P in keyof T & keyof AggregateHistorialCitas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHistorialCitas[P]>
      : GetScalarType<T[P], AggregateHistorialCitas[P]>
  }




  export type historialCitasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: historialCitasWhereInput
    orderBy?: historialCitasOrderByWithAggregationInput | historialCitasOrderByWithAggregationInput[]
    by: HistorialCitasScalarFieldEnum[] | HistorialCitasScalarFieldEnum
    having?: historialCitasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HistorialCitasCountAggregateInputType | true
    _avg?: HistorialCitasAvgAggregateInputType
    _sum?: HistorialCitasSumAggregateInputType
    _min?: HistorialCitasMinAggregateInputType
    _max?: HistorialCitasMaxAggregateInputType
  }

  export type HistorialCitasGroupByOutputType = {
    historialID: number
    citaID: number | null
    clienteID: number | null
    estilistaID: number | null
    fechaCita: Date | null
    servicioID: number | null
    _count: HistorialCitasCountAggregateOutputType | null
    _avg: HistorialCitasAvgAggregateOutputType | null
    _sum: HistorialCitasSumAggregateOutputType | null
    _min: HistorialCitasMinAggregateOutputType | null
    _max: HistorialCitasMaxAggregateOutputType | null
  }

  type GetHistorialCitasGroupByPayload<T extends historialCitasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HistorialCitasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HistorialCitasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HistorialCitasGroupByOutputType[P]>
            : GetScalarType<T[P], HistorialCitasGroupByOutputType[P]>
        }
      >
    >


  export type historialCitasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    historialID?: boolean
    citaID?: boolean
    clienteID?: boolean
    estilistaID?: boolean
    fechaCita?: boolean
    servicioID?: boolean
    citas?: boolean | historialCitas$citasArgs<ExtArgs>
    clientes?: boolean | historialCitas$clientesArgs<ExtArgs>
    estilistas?: boolean | historialCitas$estilistasArgs<ExtArgs>
  }, ExtArgs["result"]["historialCitas"]>

  export type historialCitasSelectScalar = {
    historialID?: boolean
    citaID?: boolean
    clienteID?: boolean
    estilistaID?: boolean
    fechaCita?: boolean
    servicioID?: boolean
  }

  export type historialCitasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    citas?: boolean | historialCitas$citasArgs<ExtArgs>
    clientes?: boolean | historialCitas$clientesArgs<ExtArgs>
    estilistas?: boolean | historialCitas$estilistasArgs<ExtArgs>
  }


  export type $historialCitasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "historialCitas"
    objects: {
      citas: Prisma.$citasPayload<ExtArgs> | null
      clientes: Prisma.$clientesPayload<ExtArgs> | null
      estilistas: Prisma.$estilistasPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      historialID: number
      citaID: number | null
      clienteID: number | null
      estilistaID: number | null
      fechaCita: Date | null
      servicioID: number | null
    }, ExtArgs["result"]["historialCitas"]>
    composites: {}
  }


  type historialCitasGetPayload<S extends boolean | null | undefined | historialCitasDefaultArgs> = $Result.GetResult<Prisma.$historialCitasPayload, S>

  type historialCitasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<historialCitasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: HistorialCitasCountAggregateInputType | true
    }

  export interface historialCitasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['historialCitas'], meta: { name: 'historialCitas' } }
    /**
     * Find zero or one HistorialCitas that matches the filter.
     * @param {historialCitasFindUniqueArgs} args - Arguments to find a HistorialCitas
     * @example
     * // Get one HistorialCitas
     * const historialCitas = await prisma.historialCitas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends historialCitasFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, historialCitasFindUniqueArgs<ExtArgs>>
    ): Prisma__historialCitasClient<$Result.GetResult<Prisma.$historialCitasPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one HistorialCitas that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {historialCitasFindUniqueOrThrowArgs} args - Arguments to find a HistorialCitas
     * @example
     * // Get one HistorialCitas
     * const historialCitas = await prisma.historialCitas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends historialCitasFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, historialCitasFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__historialCitasClient<$Result.GetResult<Prisma.$historialCitasPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first HistorialCitas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historialCitasFindFirstArgs} args - Arguments to find a HistorialCitas
     * @example
     * // Get one HistorialCitas
     * const historialCitas = await prisma.historialCitas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends historialCitasFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, historialCitasFindFirstArgs<ExtArgs>>
    ): Prisma__historialCitasClient<$Result.GetResult<Prisma.$historialCitasPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first HistorialCitas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historialCitasFindFirstOrThrowArgs} args - Arguments to find a HistorialCitas
     * @example
     * // Get one HistorialCitas
     * const historialCitas = await prisma.historialCitas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends historialCitasFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, historialCitasFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__historialCitasClient<$Result.GetResult<Prisma.$historialCitasPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more HistorialCitas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historialCitasFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all HistorialCitas
     * const historialCitas = await prisma.historialCitas.findMany()
     * 
     * // Get first 10 HistorialCitas
     * const historialCitas = await prisma.historialCitas.findMany({ take: 10 })
     * 
     * // Only select the `historialID`
     * const historialCitasWithHistorialIDOnly = await prisma.historialCitas.findMany({ select: { historialID: true } })
     * 
    **/
    findMany<T extends historialCitasFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, historialCitasFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historialCitasPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a HistorialCitas.
     * @param {historialCitasCreateArgs} args - Arguments to create a HistorialCitas.
     * @example
     * // Create one HistorialCitas
     * const HistorialCitas = await prisma.historialCitas.create({
     *   data: {
     *     // ... data to create a HistorialCitas
     *   }
     * })
     * 
    **/
    create<T extends historialCitasCreateArgs<ExtArgs>>(
      args: SelectSubset<T, historialCitasCreateArgs<ExtArgs>>
    ): Prisma__historialCitasClient<$Result.GetResult<Prisma.$historialCitasPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many HistorialCitas.
     *     @param {historialCitasCreateManyArgs} args - Arguments to create many HistorialCitas.
     *     @example
     *     // Create many HistorialCitas
     *     const historialCitas = await prisma.historialCitas.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends historialCitasCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, historialCitasCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a HistorialCitas.
     * @param {historialCitasDeleteArgs} args - Arguments to delete one HistorialCitas.
     * @example
     * // Delete one HistorialCitas
     * const HistorialCitas = await prisma.historialCitas.delete({
     *   where: {
     *     // ... filter to delete one HistorialCitas
     *   }
     * })
     * 
    **/
    delete<T extends historialCitasDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, historialCitasDeleteArgs<ExtArgs>>
    ): Prisma__historialCitasClient<$Result.GetResult<Prisma.$historialCitasPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one HistorialCitas.
     * @param {historialCitasUpdateArgs} args - Arguments to update one HistorialCitas.
     * @example
     * // Update one HistorialCitas
     * const historialCitas = await prisma.historialCitas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends historialCitasUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, historialCitasUpdateArgs<ExtArgs>>
    ): Prisma__historialCitasClient<$Result.GetResult<Prisma.$historialCitasPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more HistorialCitas.
     * @param {historialCitasDeleteManyArgs} args - Arguments to filter HistorialCitas to delete.
     * @example
     * // Delete a few HistorialCitas
     * const { count } = await prisma.historialCitas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends historialCitasDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, historialCitasDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HistorialCitas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historialCitasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many HistorialCitas
     * const historialCitas = await prisma.historialCitas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends historialCitasUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, historialCitasUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one HistorialCitas.
     * @param {historialCitasUpsertArgs} args - Arguments to update or create a HistorialCitas.
     * @example
     * // Update or create a HistorialCitas
     * const historialCitas = await prisma.historialCitas.upsert({
     *   create: {
     *     // ... data to create a HistorialCitas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the HistorialCitas we want to update
     *   }
     * })
    **/
    upsert<T extends historialCitasUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, historialCitasUpsertArgs<ExtArgs>>
    ): Prisma__historialCitasClient<$Result.GetResult<Prisma.$historialCitasPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of HistorialCitas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historialCitasCountArgs} args - Arguments to filter HistorialCitas to count.
     * @example
     * // Count the number of HistorialCitas
     * const count = await prisma.historialCitas.count({
     *   where: {
     *     // ... the filter for the HistorialCitas we want to count
     *   }
     * })
    **/
    count<T extends historialCitasCountArgs>(
      args?: Subset<T, historialCitasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HistorialCitasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a HistorialCitas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialCitasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HistorialCitasAggregateArgs>(args: Subset<T, HistorialCitasAggregateArgs>): Prisma.PrismaPromise<GetHistorialCitasAggregateType<T>>

    /**
     * Group by HistorialCitas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historialCitasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends historialCitasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: historialCitasGroupByArgs['orderBy'] }
        : { orderBy?: historialCitasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, historialCitasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHistorialCitasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the historialCitas model
   */
  readonly fields: historialCitasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for historialCitas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__historialCitasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    citas<T extends historialCitas$citasArgs<ExtArgs> = {}>(args?: Subset<T, historialCitas$citasArgs<ExtArgs>>): Prisma__citasClient<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    clientes<T extends historialCitas$clientesArgs<ExtArgs> = {}>(args?: Subset<T, historialCitas$clientesArgs<ExtArgs>>): Prisma__clientesClient<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    estilistas<T extends historialCitas$estilistasArgs<ExtArgs> = {}>(args?: Subset<T, historialCitas$estilistasArgs<ExtArgs>>): Prisma__estilistasClient<$Result.GetResult<Prisma.$estilistasPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the historialCitas model
   */ 
  interface historialCitasFieldRefs {
    readonly historialID: FieldRef<"historialCitas", 'Int'>
    readonly citaID: FieldRef<"historialCitas", 'Int'>
    readonly clienteID: FieldRef<"historialCitas", 'Int'>
    readonly estilistaID: FieldRef<"historialCitas", 'Int'>
    readonly fechaCita: FieldRef<"historialCitas", 'DateTime'>
    readonly servicioID: FieldRef<"historialCitas", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * historialCitas findUnique
   */
  export type historialCitasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialCitas
     */
    select?: historialCitasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialCitasInclude<ExtArgs> | null
    /**
     * Filter, which historialCitas to fetch.
     */
    where: historialCitasWhereUniqueInput
  }


  /**
   * historialCitas findUniqueOrThrow
   */
  export type historialCitasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialCitas
     */
    select?: historialCitasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialCitasInclude<ExtArgs> | null
    /**
     * Filter, which historialCitas to fetch.
     */
    where: historialCitasWhereUniqueInput
  }


  /**
   * historialCitas findFirst
   */
  export type historialCitasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialCitas
     */
    select?: historialCitasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialCitasInclude<ExtArgs> | null
    /**
     * Filter, which historialCitas to fetch.
     */
    where?: historialCitasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historialCitas to fetch.
     */
    orderBy?: historialCitasOrderByWithRelationInput | historialCitasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for historialCitas.
     */
    cursor?: historialCitasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historialCitas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historialCitas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of historialCitas.
     */
    distinct?: HistorialCitasScalarFieldEnum | HistorialCitasScalarFieldEnum[]
  }


  /**
   * historialCitas findFirstOrThrow
   */
  export type historialCitasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialCitas
     */
    select?: historialCitasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialCitasInclude<ExtArgs> | null
    /**
     * Filter, which historialCitas to fetch.
     */
    where?: historialCitasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historialCitas to fetch.
     */
    orderBy?: historialCitasOrderByWithRelationInput | historialCitasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for historialCitas.
     */
    cursor?: historialCitasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historialCitas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historialCitas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of historialCitas.
     */
    distinct?: HistorialCitasScalarFieldEnum | HistorialCitasScalarFieldEnum[]
  }


  /**
   * historialCitas findMany
   */
  export type historialCitasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialCitas
     */
    select?: historialCitasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialCitasInclude<ExtArgs> | null
    /**
     * Filter, which historialCitas to fetch.
     */
    where?: historialCitasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historialCitas to fetch.
     */
    orderBy?: historialCitasOrderByWithRelationInput | historialCitasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing historialCitas.
     */
    cursor?: historialCitasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historialCitas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historialCitas.
     */
    skip?: number
    distinct?: HistorialCitasScalarFieldEnum | HistorialCitasScalarFieldEnum[]
  }


  /**
   * historialCitas create
   */
  export type historialCitasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialCitas
     */
    select?: historialCitasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialCitasInclude<ExtArgs> | null
    /**
     * The data needed to create a historialCitas.
     */
    data?: XOR<historialCitasCreateInput, historialCitasUncheckedCreateInput>
  }


  /**
   * historialCitas createMany
   */
  export type historialCitasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many historialCitas.
     */
    data: historialCitasCreateManyInput | historialCitasCreateManyInput[]
  }


  /**
   * historialCitas update
   */
  export type historialCitasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialCitas
     */
    select?: historialCitasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialCitasInclude<ExtArgs> | null
    /**
     * The data needed to update a historialCitas.
     */
    data: XOR<historialCitasUpdateInput, historialCitasUncheckedUpdateInput>
    /**
     * Choose, which historialCitas to update.
     */
    where: historialCitasWhereUniqueInput
  }


  /**
   * historialCitas updateMany
   */
  export type historialCitasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update historialCitas.
     */
    data: XOR<historialCitasUpdateManyMutationInput, historialCitasUncheckedUpdateManyInput>
    /**
     * Filter which historialCitas to update
     */
    where?: historialCitasWhereInput
  }


  /**
   * historialCitas upsert
   */
  export type historialCitasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialCitas
     */
    select?: historialCitasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialCitasInclude<ExtArgs> | null
    /**
     * The filter to search for the historialCitas to update in case it exists.
     */
    where: historialCitasWhereUniqueInput
    /**
     * In case the historialCitas found by the `where` argument doesn't exist, create a new historialCitas with this data.
     */
    create: XOR<historialCitasCreateInput, historialCitasUncheckedCreateInput>
    /**
     * In case the historialCitas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<historialCitasUpdateInput, historialCitasUncheckedUpdateInput>
  }


  /**
   * historialCitas delete
   */
  export type historialCitasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialCitas
     */
    select?: historialCitasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialCitasInclude<ExtArgs> | null
    /**
     * Filter which historialCitas to delete.
     */
    where: historialCitasWhereUniqueInput
  }


  /**
   * historialCitas deleteMany
   */
  export type historialCitasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which historialCitas to delete
     */
    where?: historialCitasWhereInput
  }


  /**
   * historialCitas.citas
   */
  export type historialCitas$citasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasInclude<ExtArgs> | null
    where?: citasWhereInput
  }


  /**
   * historialCitas.clientes
   */
  export type historialCitas$clientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: clientesInclude<ExtArgs> | null
    where?: clientesWhereInput
  }


  /**
   * historialCitas.estilistas
   */
  export type historialCitas$estilistasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estilistas
     */
    select?: estilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: estilistasInclude<ExtArgs> | null
    where?: estilistasWhereInput
  }


  /**
   * historialCitas without action
   */
  export type historialCitasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialCitas
     */
    select?: historialCitasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialCitasInclude<ExtArgs> | null
  }



  /**
   * Model historialClientes
   */

  export type AggregateHistorialClientes = {
    _count: HistorialClientesCountAggregateOutputType | null
    _avg: HistorialClientesAvgAggregateOutputType | null
    _sum: HistorialClientesSumAggregateOutputType | null
    _min: HistorialClientesMinAggregateOutputType | null
    _max: HistorialClientesMaxAggregateOutputType | null
  }

  export type HistorialClientesAvgAggregateOutputType = {
    historialID: number | null
    clienteID: number | null
    ultimoServicioID: number | null
  }

  export type HistorialClientesSumAggregateOutputType = {
    historialID: number | null
    clienteID: number | null
    ultimoServicioID: number | null
  }

  export type HistorialClientesMinAggregateOutputType = {
    historialID: number | null
    clienteID: number | null
    nombreCliente: string | null
    fechaRegistro: Date | null
    ultimoServicioID: number | null
  }

  export type HistorialClientesMaxAggregateOutputType = {
    historialID: number | null
    clienteID: number | null
    nombreCliente: string | null
    fechaRegistro: Date | null
    ultimoServicioID: number | null
  }

  export type HistorialClientesCountAggregateOutputType = {
    historialID: number
    clienteID: number
    nombreCliente: number
    fechaRegistro: number
    ultimoServicioID: number
    _all: number
  }


  export type HistorialClientesAvgAggregateInputType = {
    historialID?: true
    clienteID?: true
    ultimoServicioID?: true
  }

  export type HistorialClientesSumAggregateInputType = {
    historialID?: true
    clienteID?: true
    ultimoServicioID?: true
  }

  export type HistorialClientesMinAggregateInputType = {
    historialID?: true
    clienteID?: true
    nombreCliente?: true
    fechaRegistro?: true
    ultimoServicioID?: true
  }

  export type HistorialClientesMaxAggregateInputType = {
    historialID?: true
    clienteID?: true
    nombreCliente?: true
    fechaRegistro?: true
    ultimoServicioID?: true
  }

  export type HistorialClientesCountAggregateInputType = {
    historialID?: true
    clienteID?: true
    nombreCliente?: true
    fechaRegistro?: true
    ultimoServicioID?: true
    _all?: true
  }

  export type HistorialClientesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which historialClientes to aggregate.
     */
    where?: historialClientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historialClientes to fetch.
     */
    orderBy?: historialClientesOrderByWithRelationInput | historialClientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: historialClientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historialClientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historialClientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned historialClientes
    **/
    _count?: true | HistorialClientesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HistorialClientesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HistorialClientesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HistorialClientesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HistorialClientesMaxAggregateInputType
  }

  export type GetHistorialClientesAggregateType<T extends HistorialClientesAggregateArgs> = {
        [P in keyof T & keyof AggregateHistorialClientes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHistorialClientes[P]>
      : GetScalarType<T[P], AggregateHistorialClientes[P]>
  }




  export type historialClientesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: historialClientesWhereInput
    orderBy?: historialClientesOrderByWithAggregationInput | historialClientesOrderByWithAggregationInput[]
    by: HistorialClientesScalarFieldEnum[] | HistorialClientesScalarFieldEnum
    having?: historialClientesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HistorialClientesCountAggregateInputType | true
    _avg?: HistorialClientesAvgAggregateInputType
    _sum?: HistorialClientesSumAggregateInputType
    _min?: HistorialClientesMinAggregateInputType
    _max?: HistorialClientesMaxAggregateInputType
  }

  export type HistorialClientesGroupByOutputType = {
    historialID: number
    clienteID: number | null
    nombreCliente: string | null
    fechaRegistro: Date | null
    ultimoServicioID: number | null
    _count: HistorialClientesCountAggregateOutputType | null
    _avg: HistorialClientesAvgAggregateOutputType | null
    _sum: HistorialClientesSumAggregateOutputType | null
    _min: HistorialClientesMinAggregateOutputType | null
    _max: HistorialClientesMaxAggregateOutputType | null
  }

  type GetHistorialClientesGroupByPayload<T extends historialClientesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HistorialClientesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HistorialClientesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HistorialClientesGroupByOutputType[P]>
            : GetScalarType<T[P], HistorialClientesGroupByOutputType[P]>
        }
      >
    >


  export type historialClientesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    historialID?: boolean
    clienteID?: boolean
    nombreCliente?: boolean
    fechaRegistro?: boolean
    ultimoServicioID?: boolean
    clientes?: boolean | historialClientes$clientesArgs<ExtArgs>
    catalogo?: boolean | historialClientes$catalogoArgs<ExtArgs>
  }, ExtArgs["result"]["historialClientes"]>

  export type historialClientesSelectScalar = {
    historialID?: boolean
    clienteID?: boolean
    nombreCliente?: boolean
    fechaRegistro?: boolean
    ultimoServicioID?: boolean
  }

  export type historialClientesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clientes?: boolean | historialClientes$clientesArgs<ExtArgs>
    catalogo?: boolean | historialClientes$catalogoArgs<ExtArgs>
  }


  export type $historialClientesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "historialClientes"
    objects: {
      clientes: Prisma.$clientesPayload<ExtArgs> | null
      catalogo: Prisma.$catalogoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      historialID: number
      clienteID: number | null
      nombreCliente: string | null
      fechaRegistro: Date | null
      ultimoServicioID: number | null
    }, ExtArgs["result"]["historialClientes"]>
    composites: {}
  }


  type historialClientesGetPayload<S extends boolean | null | undefined | historialClientesDefaultArgs> = $Result.GetResult<Prisma.$historialClientesPayload, S>

  type historialClientesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<historialClientesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: HistorialClientesCountAggregateInputType | true
    }

  export interface historialClientesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['historialClientes'], meta: { name: 'historialClientes' } }
    /**
     * Find zero or one HistorialClientes that matches the filter.
     * @param {historialClientesFindUniqueArgs} args - Arguments to find a HistorialClientes
     * @example
     * // Get one HistorialClientes
     * const historialClientes = await prisma.historialClientes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends historialClientesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, historialClientesFindUniqueArgs<ExtArgs>>
    ): Prisma__historialClientesClient<$Result.GetResult<Prisma.$historialClientesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one HistorialClientes that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {historialClientesFindUniqueOrThrowArgs} args - Arguments to find a HistorialClientes
     * @example
     * // Get one HistorialClientes
     * const historialClientes = await prisma.historialClientes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends historialClientesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, historialClientesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__historialClientesClient<$Result.GetResult<Prisma.$historialClientesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first HistorialClientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historialClientesFindFirstArgs} args - Arguments to find a HistorialClientes
     * @example
     * // Get one HistorialClientes
     * const historialClientes = await prisma.historialClientes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends historialClientesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, historialClientesFindFirstArgs<ExtArgs>>
    ): Prisma__historialClientesClient<$Result.GetResult<Prisma.$historialClientesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first HistorialClientes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historialClientesFindFirstOrThrowArgs} args - Arguments to find a HistorialClientes
     * @example
     * // Get one HistorialClientes
     * const historialClientes = await prisma.historialClientes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends historialClientesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, historialClientesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__historialClientesClient<$Result.GetResult<Prisma.$historialClientesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more HistorialClientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historialClientesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all HistorialClientes
     * const historialClientes = await prisma.historialClientes.findMany()
     * 
     * // Get first 10 HistorialClientes
     * const historialClientes = await prisma.historialClientes.findMany({ take: 10 })
     * 
     * // Only select the `historialID`
     * const historialClientesWithHistorialIDOnly = await prisma.historialClientes.findMany({ select: { historialID: true } })
     * 
    **/
    findMany<T extends historialClientesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, historialClientesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historialClientesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a HistorialClientes.
     * @param {historialClientesCreateArgs} args - Arguments to create a HistorialClientes.
     * @example
     * // Create one HistorialClientes
     * const HistorialClientes = await prisma.historialClientes.create({
     *   data: {
     *     // ... data to create a HistorialClientes
     *   }
     * })
     * 
    **/
    create<T extends historialClientesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, historialClientesCreateArgs<ExtArgs>>
    ): Prisma__historialClientesClient<$Result.GetResult<Prisma.$historialClientesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many HistorialClientes.
     *     @param {historialClientesCreateManyArgs} args - Arguments to create many HistorialClientes.
     *     @example
     *     // Create many HistorialClientes
     *     const historialClientes = await prisma.historialClientes.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends historialClientesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, historialClientesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a HistorialClientes.
     * @param {historialClientesDeleteArgs} args - Arguments to delete one HistorialClientes.
     * @example
     * // Delete one HistorialClientes
     * const HistorialClientes = await prisma.historialClientes.delete({
     *   where: {
     *     // ... filter to delete one HistorialClientes
     *   }
     * })
     * 
    **/
    delete<T extends historialClientesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, historialClientesDeleteArgs<ExtArgs>>
    ): Prisma__historialClientesClient<$Result.GetResult<Prisma.$historialClientesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one HistorialClientes.
     * @param {historialClientesUpdateArgs} args - Arguments to update one HistorialClientes.
     * @example
     * // Update one HistorialClientes
     * const historialClientes = await prisma.historialClientes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends historialClientesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, historialClientesUpdateArgs<ExtArgs>>
    ): Prisma__historialClientesClient<$Result.GetResult<Prisma.$historialClientesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more HistorialClientes.
     * @param {historialClientesDeleteManyArgs} args - Arguments to filter HistorialClientes to delete.
     * @example
     * // Delete a few HistorialClientes
     * const { count } = await prisma.historialClientes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends historialClientesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, historialClientesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HistorialClientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historialClientesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many HistorialClientes
     * const historialClientes = await prisma.historialClientes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends historialClientesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, historialClientesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one HistorialClientes.
     * @param {historialClientesUpsertArgs} args - Arguments to update or create a HistorialClientes.
     * @example
     * // Update or create a HistorialClientes
     * const historialClientes = await prisma.historialClientes.upsert({
     *   create: {
     *     // ... data to create a HistorialClientes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the HistorialClientes we want to update
     *   }
     * })
    **/
    upsert<T extends historialClientesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, historialClientesUpsertArgs<ExtArgs>>
    ): Prisma__historialClientesClient<$Result.GetResult<Prisma.$historialClientesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of HistorialClientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historialClientesCountArgs} args - Arguments to filter HistorialClientes to count.
     * @example
     * // Count the number of HistorialClientes
     * const count = await prisma.historialClientes.count({
     *   where: {
     *     // ... the filter for the HistorialClientes we want to count
     *   }
     * })
    **/
    count<T extends historialClientesCountArgs>(
      args?: Subset<T, historialClientesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HistorialClientesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a HistorialClientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialClientesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HistorialClientesAggregateArgs>(args: Subset<T, HistorialClientesAggregateArgs>): Prisma.PrismaPromise<GetHistorialClientesAggregateType<T>>

    /**
     * Group by HistorialClientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historialClientesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends historialClientesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: historialClientesGroupByArgs['orderBy'] }
        : { orderBy?: historialClientesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, historialClientesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHistorialClientesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the historialClientes model
   */
  readonly fields: historialClientesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for historialClientes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__historialClientesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    clientes<T extends historialClientes$clientesArgs<ExtArgs> = {}>(args?: Subset<T, historialClientes$clientesArgs<ExtArgs>>): Prisma__clientesClient<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    catalogo<T extends historialClientes$catalogoArgs<ExtArgs> = {}>(args?: Subset<T, historialClientes$catalogoArgs<ExtArgs>>): Prisma__catalogoClient<$Result.GetResult<Prisma.$catalogoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the historialClientes model
   */ 
  interface historialClientesFieldRefs {
    readonly historialID: FieldRef<"historialClientes", 'Int'>
    readonly clienteID: FieldRef<"historialClientes", 'Int'>
    readonly nombreCliente: FieldRef<"historialClientes", 'String'>
    readonly fechaRegistro: FieldRef<"historialClientes", 'DateTime'>
    readonly ultimoServicioID: FieldRef<"historialClientes", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * historialClientes findUnique
   */
  export type historialClientesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialClientes
     */
    select?: historialClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialClientesInclude<ExtArgs> | null
    /**
     * Filter, which historialClientes to fetch.
     */
    where: historialClientesWhereUniqueInput
  }


  /**
   * historialClientes findUniqueOrThrow
   */
  export type historialClientesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialClientes
     */
    select?: historialClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialClientesInclude<ExtArgs> | null
    /**
     * Filter, which historialClientes to fetch.
     */
    where: historialClientesWhereUniqueInput
  }


  /**
   * historialClientes findFirst
   */
  export type historialClientesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialClientes
     */
    select?: historialClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialClientesInclude<ExtArgs> | null
    /**
     * Filter, which historialClientes to fetch.
     */
    where?: historialClientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historialClientes to fetch.
     */
    orderBy?: historialClientesOrderByWithRelationInput | historialClientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for historialClientes.
     */
    cursor?: historialClientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historialClientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historialClientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of historialClientes.
     */
    distinct?: HistorialClientesScalarFieldEnum | HistorialClientesScalarFieldEnum[]
  }


  /**
   * historialClientes findFirstOrThrow
   */
  export type historialClientesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialClientes
     */
    select?: historialClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialClientesInclude<ExtArgs> | null
    /**
     * Filter, which historialClientes to fetch.
     */
    where?: historialClientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historialClientes to fetch.
     */
    orderBy?: historialClientesOrderByWithRelationInput | historialClientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for historialClientes.
     */
    cursor?: historialClientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historialClientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historialClientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of historialClientes.
     */
    distinct?: HistorialClientesScalarFieldEnum | HistorialClientesScalarFieldEnum[]
  }


  /**
   * historialClientes findMany
   */
  export type historialClientesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialClientes
     */
    select?: historialClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialClientesInclude<ExtArgs> | null
    /**
     * Filter, which historialClientes to fetch.
     */
    where?: historialClientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historialClientes to fetch.
     */
    orderBy?: historialClientesOrderByWithRelationInput | historialClientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing historialClientes.
     */
    cursor?: historialClientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historialClientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historialClientes.
     */
    skip?: number
    distinct?: HistorialClientesScalarFieldEnum | HistorialClientesScalarFieldEnum[]
  }


  /**
   * historialClientes create
   */
  export type historialClientesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialClientes
     */
    select?: historialClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialClientesInclude<ExtArgs> | null
    /**
     * The data needed to create a historialClientes.
     */
    data?: XOR<historialClientesCreateInput, historialClientesUncheckedCreateInput>
  }


  /**
   * historialClientes createMany
   */
  export type historialClientesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many historialClientes.
     */
    data: historialClientesCreateManyInput | historialClientesCreateManyInput[]
  }


  /**
   * historialClientes update
   */
  export type historialClientesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialClientes
     */
    select?: historialClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialClientesInclude<ExtArgs> | null
    /**
     * The data needed to update a historialClientes.
     */
    data: XOR<historialClientesUpdateInput, historialClientesUncheckedUpdateInput>
    /**
     * Choose, which historialClientes to update.
     */
    where: historialClientesWhereUniqueInput
  }


  /**
   * historialClientes updateMany
   */
  export type historialClientesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update historialClientes.
     */
    data: XOR<historialClientesUpdateManyMutationInput, historialClientesUncheckedUpdateManyInput>
    /**
     * Filter which historialClientes to update
     */
    where?: historialClientesWhereInput
  }


  /**
   * historialClientes upsert
   */
  export type historialClientesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialClientes
     */
    select?: historialClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialClientesInclude<ExtArgs> | null
    /**
     * The filter to search for the historialClientes to update in case it exists.
     */
    where: historialClientesWhereUniqueInput
    /**
     * In case the historialClientes found by the `where` argument doesn't exist, create a new historialClientes with this data.
     */
    create: XOR<historialClientesCreateInput, historialClientesUncheckedCreateInput>
    /**
     * In case the historialClientes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<historialClientesUpdateInput, historialClientesUncheckedUpdateInput>
  }


  /**
   * historialClientes delete
   */
  export type historialClientesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialClientes
     */
    select?: historialClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialClientesInclude<ExtArgs> | null
    /**
     * Filter which historialClientes to delete.
     */
    where: historialClientesWhereUniqueInput
  }


  /**
   * historialClientes deleteMany
   */
  export type historialClientesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which historialClientes to delete
     */
    where?: historialClientesWhereInput
  }


  /**
   * historialClientes.clientes
   */
  export type historialClientes$clientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: clientesInclude<ExtArgs> | null
    where?: clientesWhereInput
  }


  /**
   * historialClientes.catalogo
   */
  export type historialClientes$catalogoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the catalogo
     */
    select?: catalogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catalogoInclude<ExtArgs> | null
    where?: catalogoWhereInput
  }


  /**
   * historialClientes without action
   */
  export type historialClientesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialClientes
     */
    select?: historialClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialClientesInclude<ExtArgs> | null
  }



  /**
   * Model historialCuenta
   */

  export type AggregateHistorialCuenta = {
    _count: HistorialCuentaCountAggregateOutputType | null
    _avg: HistorialCuentaAvgAggregateOutputType | null
    _sum: HistorialCuentaSumAggregateOutputType | null
    _min: HistorialCuentaMinAggregateOutputType | null
    _max: HistorialCuentaMaxAggregateOutputType | null
  }

  export type HistorialCuentaAvgAggregateOutputType = {
    historialID: number | null
    clienteID: number | null
    serviciosUtilizados: number | null
  }

  export type HistorialCuentaSumAggregateOutputType = {
    historialID: number | null
    clienteID: number | null
    serviciosUtilizados: number | null
  }

  export type HistorialCuentaMinAggregateOutputType = {
    historialID: number | null
    clienteID: number | null
    serviciosUtilizados: number | null
    ultimaConexion: Date | null
  }

  export type HistorialCuentaMaxAggregateOutputType = {
    historialID: number | null
    clienteID: number | null
    serviciosUtilizados: number | null
    ultimaConexion: Date | null
  }

  export type HistorialCuentaCountAggregateOutputType = {
    historialID: number
    clienteID: number
    serviciosUtilizados: number
    ultimaConexion: number
    _all: number
  }


  export type HistorialCuentaAvgAggregateInputType = {
    historialID?: true
    clienteID?: true
    serviciosUtilizados?: true
  }

  export type HistorialCuentaSumAggregateInputType = {
    historialID?: true
    clienteID?: true
    serviciosUtilizados?: true
  }

  export type HistorialCuentaMinAggregateInputType = {
    historialID?: true
    clienteID?: true
    serviciosUtilizados?: true
    ultimaConexion?: true
  }

  export type HistorialCuentaMaxAggregateInputType = {
    historialID?: true
    clienteID?: true
    serviciosUtilizados?: true
    ultimaConexion?: true
  }

  export type HistorialCuentaCountAggregateInputType = {
    historialID?: true
    clienteID?: true
    serviciosUtilizados?: true
    ultimaConexion?: true
    _all?: true
  }

  export type HistorialCuentaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which historialCuenta to aggregate.
     */
    where?: historialCuentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historialCuentas to fetch.
     */
    orderBy?: historialCuentaOrderByWithRelationInput | historialCuentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: historialCuentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historialCuentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historialCuentas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned historialCuentas
    **/
    _count?: true | HistorialCuentaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HistorialCuentaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HistorialCuentaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HistorialCuentaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HistorialCuentaMaxAggregateInputType
  }

  export type GetHistorialCuentaAggregateType<T extends HistorialCuentaAggregateArgs> = {
        [P in keyof T & keyof AggregateHistorialCuenta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHistorialCuenta[P]>
      : GetScalarType<T[P], AggregateHistorialCuenta[P]>
  }




  export type historialCuentaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: historialCuentaWhereInput
    orderBy?: historialCuentaOrderByWithAggregationInput | historialCuentaOrderByWithAggregationInput[]
    by: HistorialCuentaScalarFieldEnum[] | HistorialCuentaScalarFieldEnum
    having?: historialCuentaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HistorialCuentaCountAggregateInputType | true
    _avg?: HistorialCuentaAvgAggregateInputType
    _sum?: HistorialCuentaSumAggregateInputType
    _min?: HistorialCuentaMinAggregateInputType
    _max?: HistorialCuentaMaxAggregateInputType
  }

  export type HistorialCuentaGroupByOutputType = {
    historialID: number
    clienteID: number | null
    serviciosUtilizados: number | null
    ultimaConexion: Date | null
    _count: HistorialCuentaCountAggregateOutputType | null
    _avg: HistorialCuentaAvgAggregateOutputType | null
    _sum: HistorialCuentaSumAggregateOutputType | null
    _min: HistorialCuentaMinAggregateOutputType | null
    _max: HistorialCuentaMaxAggregateOutputType | null
  }

  type GetHistorialCuentaGroupByPayload<T extends historialCuentaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HistorialCuentaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HistorialCuentaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HistorialCuentaGroupByOutputType[P]>
            : GetScalarType<T[P], HistorialCuentaGroupByOutputType[P]>
        }
      >
    >


  export type historialCuentaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    historialID?: boolean
    clienteID?: boolean
    serviciosUtilizados?: boolean
    ultimaConexion?: boolean
    clientes?: boolean | historialCuenta$clientesArgs<ExtArgs>
  }, ExtArgs["result"]["historialCuenta"]>

  export type historialCuentaSelectScalar = {
    historialID?: boolean
    clienteID?: boolean
    serviciosUtilizados?: boolean
    ultimaConexion?: boolean
  }

  export type historialCuentaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clientes?: boolean | historialCuenta$clientesArgs<ExtArgs>
  }


  export type $historialCuentaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "historialCuenta"
    objects: {
      clientes: Prisma.$clientesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      historialID: number
      clienteID: number | null
      serviciosUtilizados: number | null
      ultimaConexion: Date | null
    }, ExtArgs["result"]["historialCuenta"]>
    composites: {}
  }


  type historialCuentaGetPayload<S extends boolean | null | undefined | historialCuentaDefaultArgs> = $Result.GetResult<Prisma.$historialCuentaPayload, S>

  type historialCuentaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<historialCuentaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: HistorialCuentaCountAggregateInputType | true
    }

  export interface historialCuentaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['historialCuenta'], meta: { name: 'historialCuenta' } }
    /**
     * Find zero or one HistorialCuenta that matches the filter.
     * @param {historialCuentaFindUniqueArgs} args - Arguments to find a HistorialCuenta
     * @example
     * // Get one HistorialCuenta
     * const historialCuenta = await prisma.historialCuenta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends historialCuentaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, historialCuentaFindUniqueArgs<ExtArgs>>
    ): Prisma__historialCuentaClient<$Result.GetResult<Prisma.$historialCuentaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one HistorialCuenta that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {historialCuentaFindUniqueOrThrowArgs} args - Arguments to find a HistorialCuenta
     * @example
     * // Get one HistorialCuenta
     * const historialCuenta = await prisma.historialCuenta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends historialCuentaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, historialCuentaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__historialCuentaClient<$Result.GetResult<Prisma.$historialCuentaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first HistorialCuenta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historialCuentaFindFirstArgs} args - Arguments to find a HistorialCuenta
     * @example
     * // Get one HistorialCuenta
     * const historialCuenta = await prisma.historialCuenta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends historialCuentaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, historialCuentaFindFirstArgs<ExtArgs>>
    ): Prisma__historialCuentaClient<$Result.GetResult<Prisma.$historialCuentaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first HistorialCuenta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historialCuentaFindFirstOrThrowArgs} args - Arguments to find a HistorialCuenta
     * @example
     * // Get one HistorialCuenta
     * const historialCuenta = await prisma.historialCuenta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends historialCuentaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, historialCuentaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__historialCuentaClient<$Result.GetResult<Prisma.$historialCuentaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more HistorialCuentas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historialCuentaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all HistorialCuentas
     * const historialCuentas = await prisma.historialCuenta.findMany()
     * 
     * // Get first 10 HistorialCuentas
     * const historialCuentas = await prisma.historialCuenta.findMany({ take: 10 })
     * 
     * // Only select the `historialID`
     * const historialCuentaWithHistorialIDOnly = await prisma.historialCuenta.findMany({ select: { historialID: true } })
     * 
    **/
    findMany<T extends historialCuentaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, historialCuentaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historialCuentaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a HistorialCuenta.
     * @param {historialCuentaCreateArgs} args - Arguments to create a HistorialCuenta.
     * @example
     * // Create one HistorialCuenta
     * const HistorialCuenta = await prisma.historialCuenta.create({
     *   data: {
     *     // ... data to create a HistorialCuenta
     *   }
     * })
     * 
    **/
    create<T extends historialCuentaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, historialCuentaCreateArgs<ExtArgs>>
    ): Prisma__historialCuentaClient<$Result.GetResult<Prisma.$historialCuentaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many HistorialCuentas.
     *     @param {historialCuentaCreateManyArgs} args - Arguments to create many HistorialCuentas.
     *     @example
     *     // Create many HistorialCuentas
     *     const historialCuenta = await prisma.historialCuenta.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends historialCuentaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, historialCuentaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a HistorialCuenta.
     * @param {historialCuentaDeleteArgs} args - Arguments to delete one HistorialCuenta.
     * @example
     * // Delete one HistorialCuenta
     * const HistorialCuenta = await prisma.historialCuenta.delete({
     *   where: {
     *     // ... filter to delete one HistorialCuenta
     *   }
     * })
     * 
    **/
    delete<T extends historialCuentaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, historialCuentaDeleteArgs<ExtArgs>>
    ): Prisma__historialCuentaClient<$Result.GetResult<Prisma.$historialCuentaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one HistorialCuenta.
     * @param {historialCuentaUpdateArgs} args - Arguments to update one HistorialCuenta.
     * @example
     * // Update one HistorialCuenta
     * const historialCuenta = await prisma.historialCuenta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends historialCuentaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, historialCuentaUpdateArgs<ExtArgs>>
    ): Prisma__historialCuentaClient<$Result.GetResult<Prisma.$historialCuentaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more HistorialCuentas.
     * @param {historialCuentaDeleteManyArgs} args - Arguments to filter HistorialCuentas to delete.
     * @example
     * // Delete a few HistorialCuentas
     * const { count } = await prisma.historialCuenta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends historialCuentaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, historialCuentaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HistorialCuentas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historialCuentaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many HistorialCuentas
     * const historialCuenta = await prisma.historialCuenta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends historialCuentaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, historialCuentaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one HistorialCuenta.
     * @param {historialCuentaUpsertArgs} args - Arguments to update or create a HistorialCuenta.
     * @example
     * // Update or create a HistorialCuenta
     * const historialCuenta = await prisma.historialCuenta.upsert({
     *   create: {
     *     // ... data to create a HistorialCuenta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the HistorialCuenta we want to update
     *   }
     * })
    **/
    upsert<T extends historialCuentaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, historialCuentaUpsertArgs<ExtArgs>>
    ): Prisma__historialCuentaClient<$Result.GetResult<Prisma.$historialCuentaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of HistorialCuentas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historialCuentaCountArgs} args - Arguments to filter HistorialCuentas to count.
     * @example
     * // Count the number of HistorialCuentas
     * const count = await prisma.historialCuenta.count({
     *   where: {
     *     // ... the filter for the HistorialCuentas we want to count
     *   }
     * })
    **/
    count<T extends historialCuentaCountArgs>(
      args?: Subset<T, historialCuentaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HistorialCuentaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a HistorialCuenta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialCuentaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HistorialCuentaAggregateArgs>(args: Subset<T, HistorialCuentaAggregateArgs>): Prisma.PrismaPromise<GetHistorialCuentaAggregateType<T>>

    /**
     * Group by HistorialCuenta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historialCuentaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends historialCuentaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: historialCuentaGroupByArgs['orderBy'] }
        : { orderBy?: historialCuentaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, historialCuentaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHistorialCuentaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the historialCuenta model
   */
  readonly fields: historialCuentaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for historialCuenta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__historialCuentaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    clientes<T extends historialCuenta$clientesArgs<ExtArgs> = {}>(args?: Subset<T, historialCuenta$clientesArgs<ExtArgs>>): Prisma__clientesClient<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the historialCuenta model
   */ 
  interface historialCuentaFieldRefs {
    readonly historialID: FieldRef<"historialCuenta", 'Int'>
    readonly clienteID: FieldRef<"historialCuenta", 'Int'>
    readonly serviciosUtilizados: FieldRef<"historialCuenta", 'Int'>
    readonly ultimaConexion: FieldRef<"historialCuenta", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * historialCuenta findUnique
   */
  export type historialCuentaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialCuenta
     */
    select?: historialCuentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialCuentaInclude<ExtArgs> | null
    /**
     * Filter, which historialCuenta to fetch.
     */
    where: historialCuentaWhereUniqueInput
  }


  /**
   * historialCuenta findUniqueOrThrow
   */
  export type historialCuentaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialCuenta
     */
    select?: historialCuentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialCuentaInclude<ExtArgs> | null
    /**
     * Filter, which historialCuenta to fetch.
     */
    where: historialCuentaWhereUniqueInput
  }


  /**
   * historialCuenta findFirst
   */
  export type historialCuentaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialCuenta
     */
    select?: historialCuentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialCuentaInclude<ExtArgs> | null
    /**
     * Filter, which historialCuenta to fetch.
     */
    where?: historialCuentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historialCuentas to fetch.
     */
    orderBy?: historialCuentaOrderByWithRelationInput | historialCuentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for historialCuentas.
     */
    cursor?: historialCuentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historialCuentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historialCuentas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of historialCuentas.
     */
    distinct?: HistorialCuentaScalarFieldEnum | HistorialCuentaScalarFieldEnum[]
  }


  /**
   * historialCuenta findFirstOrThrow
   */
  export type historialCuentaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialCuenta
     */
    select?: historialCuentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialCuentaInclude<ExtArgs> | null
    /**
     * Filter, which historialCuenta to fetch.
     */
    where?: historialCuentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historialCuentas to fetch.
     */
    orderBy?: historialCuentaOrderByWithRelationInput | historialCuentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for historialCuentas.
     */
    cursor?: historialCuentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historialCuentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historialCuentas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of historialCuentas.
     */
    distinct?: HistorialCuentaScalarFieldEnum | HistorialCuentaScalarFieldEnum[]
  }


  /**
   * historialCuenta findMany
   */
  export type historialCuentaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialCuenta
     */
    select?: historialCuentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialCuentaInclude<ExtArgs> | null
    /**
     * Filter, which historialCuentas to fetch.
     */
    where?: historialCuentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historialCuentas to fetch.
     */
    orderBy?: historialCuentaOrderByWithRelationInput | historialCuentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing historialCuentas.
     */
    cursor?: historialCuentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historialCuentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historialCuentas.
     */
    skip?: number
    distinct?: HistorialCuentaScalarFieldEnum | HistorialCuentaScalarFieldEnum[]
  }


  /**
   * historialCuenta create
   */
  export type historialCuentaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialCuenta
     */
    select?: historialCuentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialCuentaInclude<ExtArgs> | null
    /**
     * The data needed to create a historialCuenta.
     */
    data?: XOR<historialCuentaCreateInput, historialCuentaUncheckedCreateInput>
  }


  /**
   * historialCuenta createMany
   */
  export type historialCuentaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many historialCuentas.
     */
    data: historialCuentaCreateManyInput | historialCuentaCreateManyInput[]
  }


  /**
   * historialCuenta update
   */
  export type historialCuentaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialCuenta
     */
    select?: historialCuentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialCuentaInclude<ExtArgs> | null
    /**
     * The data needed to update a historialCuenta.
     */
    data: XOR<historialCuentaUpdateInput, historialCuentaUncheckedUpdateInput>
    /**
     * Choose, which historialCuenta to update.
     */
    where: historialCuentaWhereUniqueInput
  }


  /**
   * historialCuenta updateMany
   */
  export type historialCuentaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update historialCuentas.
     */
    data: XOR<historialCuentaUpdateManyMutationInput, historialCuentaUncheckedUpdateManyInput>
    /**
     * Filter which historialCuentas to update
     */
    where?: historialCuentaWhereInput
  }


  /**
   * historialCuenta upsert
   */
  export type historialCuentaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialCuenta
     */
    select?: historialCuentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialCuentaInclude<ExtArgs> | null
    /**
     * The filter to search for the historialCuenta to update in case it exists.
     */
    where: historialCuentaWhereUniqueInput
    /**
     * In case the historialCuenta found by the `where` argument doesn't exist, create a new historialCuenta with this data.
     */
    create: XOR<historialCuentaCreateInput, historialCuentaUncheckedCreateInput>
    /**
     * In case the historialCuenta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<historialCuentaUpdateInput, historialCuentaUncheckedUpdateInput>
  }


  /**
   * historialCuenta delete
   */
  export type historialCuentaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialCuenta
     */
    select?: historialCuentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialCuentaInclude<ExtArgs> | null
    /**
     * Filter which historialCuenta to delete.
     */
    where: historialCuentaWhereUniqueInput
  }


  /**
   * historialCuenta deleteMany
   */
  export type historialCuentaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which historialCuentas to delete
     */
    where?: historialCuentaWhereInput
  }


  /**
   * historialCuenta.clientes
   */
  export type historialCuenta$clientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: clientesInclude<ExtArgs> | null
    where?: clientesWhereInput
  }


  /**
   * historialCuenta without action
   */
  export type historialCuentaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialCuenta
     */
    select?: historialCuentaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialCuentaInclude<ExtArgs> | null
  }



  /**
   * Model historialGastoPuntos
   */

  export type AggregateHistorialGastoPuntos = {
    _count: HistorialGastoPuntosCountAggregateOutputType | null
    _avg: HistorialGastoPuntosAvgAggregateOutputType | null
    _sum: HistorialGastoPuntosSumAggregateOutputType | null
    _min: HistorialGastoPuntosMinAggregateOutputType | null
    _max: HistorialGastoPuntosMaxAggregateOutputType | null
  }

  export type HistorialGastoPuntosAvgAggregateOutputType = {
    gastoID: number | null
    clienteID: number | null
    puntosGastados: number | null
  }

  export type HistorialGastoPuntosSumAggregateOutputType = {
    gastoID: number | null
    clienteID: number | null
    puntosGastados: number | null
  }

  export type HistorialGastoPuntosMinAggregateOutputType = {
    gastoID: number | null
    clienteID: number | null
    puntosGastados: number | null
    fecha: Date | null
    descripcionGasto: string | null
  }

  export type HistorialGastoPuntosMaxAggregateOutputType = {
    gastoID: number | null
    clienteID: number | null
    puntosGastados: number | null
    fecha: Date | null
    descripcionGasto: string | null
  }

  export type HistorialGastoPuntosCountAggregateOutputType = {
    gastoID: number
    clienteID: number
    puntosGastados: number
    fecha: number
    descripcionGasto: number
    _all: number
  }


  export type HistorialGastoPuntosAvgAggregateInputType = {
    gastoID?: true
    clienteID?: true
    puntosGastados?: true
  }

  export type HistorialGastoPuntosSumAggregateInputType = {
    gastoID?: true
    clienteID?: true
    puntosGastados?: true
  }

  export type HistorialGastoPuntosMinAggregateInputType = {
    gastoID?: true
    clienteID?: true
    puntosGastados?: true
    fecha?: true
    descripcionGasto?: true
  }

  export type HistorialGastoPuntosMaxAggregateInputType = {
    gastoID?: true
    clienteID?: true
    puntosGastados?: true
    fecha?: true
    descripcionGasto?: true
  }

  export type HistorialGastoPuntosCountAggregateInputType = {
    gastoID?: true
    clienteID?: true
    puntosGastados?: true
    fecha?: true
    descripcionGasto?: true
    _all?: true
  }

  export type HistorialGastoPuntosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which historialGastoPuntos to aggregate.
     */
    where?: historialGastoPuntosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historialGastoPuntos to fetch.
     */
    orderBy?: historialGastoPuntosOrderByWithRelationInput | historialGastoPuntosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: historialGastoPuntosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historialGastoPuntos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historialGastoPuntos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned historialGastoPuntos
    **/
    _count?: true | HistorialGastoPuntosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HistorialGastoPuntosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HistorialGastoPuntosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HistorialGastoPuntosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HistorialGastoPuntosMaxAggregateInputType
  }

  export type GetHistorialGastoPuntosAggregateType<T extends HistorialGastoPuntosAggregateArgs> = {
        [P in keyof T & keyof AggregateHistorialGastoPuntos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHistorialGastoPuntos[P]>
      : GetScalarType<T[P], AggregateHistorialGastoPuntos[P]>
  }




  export type historialGastoPuntosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: historialGastoPuntosWhereInput
    orderBy?: historialGastoPuntosOrderByWithAggregationInput | historialGastoPuntosOrderByWithAggregationInput[]
    by: HistorialGastoPuntosScalarFieldEnum[] | HistorialGastoPuntosScalarFieldEnum
    having?: historialGastoPuntosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HistorialGastoPuntosCountAggregateInputType | true
    _avg?: HistorialGastoPuntosAvgAggregateInputType
    _sum?: HistorialGastoPuntosSumAggregateInputType
    _min?: HistorialGastoPuntosMinAggregateInputType
    _max?: HistorialGastoPuntosMaxAggregateInputType
  }

  export type HistorialGastoPuntosGroupByOutputType = {
    gastoID: number
    clienteID: number | null
    puntosGastados: number | null
    fecha: Date | null
    descripcionGasto: string | null
    _count: HistorialGastoPuntosCountAggregateOutputType | null
    _avg: HistorialGastoPuntosAvgAggregateOutputType | null
    _sum: HistorialGastoPuntosSumAggregateOutputType | null
    _min: HistorialGastoPuntosMinAggregateOutputType | null
    _max: HistorialGastoPuntosMaxAggregateOutputType | null
  }

  type GetHistorialGastoPuntosGroupByPayload<T extends historialGastoPuntosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HistorialGastoPuntosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HistorialGastoPuntosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HistorialGastoPuntosGroupByOutputType[P]>
            : GetScalarType<T[P], HistorialGastoPuntosGroupByOutputType[P]>
        }
      >
    >


  export type historialGastoPuntosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    gastoID?: boolean
    clienteID?: boolean
    puntosGastados?: boolean
    fecha?: boolean
    descripcionGasto?: boolean
    clientes?: boolean | historialGastoPuntos$clientesArgs<ExtArgs>
  }, ExtArgs["result"]["historialGastoPuntos"]>

  export type historialGastoPuntosSelectScalar = {
    gastoID?: boolean
    clienteID?: boolean
    puntosGastados?: boolean
    fecha?: boolean
    descripcionGasto?: boolean
  }

  export type historialGastoPuntosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clientes?: boolean | historialGastoPuntos$clientesArgs<ExtArgs>
  }


  export type $historialGastoPuntosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "historialGastoPuntos"
    objects: {
      clientes: Prisma.$clientesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      gastoID: number
      clienteID: number | null
      puntosGastados: number | null
      fecha: Date | null
      descripcionGasto: string | null
    }, ExtArgs["result"]["historialGastoPuntos"]>
    composites: {}
  }


  type historialGastoPuntosGetPayload<S extends boolean | null | undefined | historialGastoPuntosDefaultArgs> = $Result.GetResult<Prisma.$historialGastoPuntosPayload, S>

  type historialGastoPuntosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<historialGastoPuntosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: HistorialGastoPuntosCountAggregateInputType | true
    }

  export interface historialGastoPuntosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['historialGastoPuntos'], meta: { name: 'historialGastoPuntos' } }
    /**
     * Find zero or one HistorialGastoPuntos that matches the filter.
     * @param {historialGastoPuntosFindUniqueArgs} args - Arguments to find a HistorialGastoPuntos
     * @example
     * // Get one HistorialGastoPuntos
     * const historialGastoPuntos = await prisma.historialGastoPuntos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends historialGastoPuntosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, historialGastoPuntosFindUniqueArgs<ExtArgs>>
    ): Prisma__historialGastoPuntosClient<$Result.GetResult<Prisma.$historialGastoPuntosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one HistorialGastoPuntos that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {historialGastoPuntosFindUniqueOrThrowArgs} args - Arguments to find a HistorialGastoPuntos
     * @example
     * // Get one HistorialGastoPuntos
     * const historialGastoPuntos = await prisma.historialGastoPuntos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends historialGastoPuntosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, historialGastoPuntosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__historialGastoPuntosClient<$Result.GetResult<Prisma.$historialGastoPuntosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first HistorialGastoPuntos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historialGastoPuntosFindFirstArgs} args - Arguments to find a HistorialGastoPuntos
     * @example
     * // Get one HistorialGastoPuntos
     * const historialGastoPuntos = await prisma.historialGastoPuntos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends historialGastoPuntosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, historialGastoPuntosFindFirstArgs<ExtArgs>>
    ): Prisma__historialGastoPuntosClient<$Result.GetResult<Prisma.$historialGastoPuntosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first HistorialGastoPuntos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historialGastoPuntosFindFirstOrThrowArgs} args - Arguments to find a HistorialGastoPuntos
     * @example
     * // Get one HistorialGastoPuntos
     * const historialGastoPuntos = await prisma.historialGastoPuntos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends historialGastoPuntosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, historialGastoPuntosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__historialGastoPuntosClient<$Result.GetResult<Prisma.$historialGastoPuntosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more HistorialGastoPuntos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historialGastoPuntosFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all HistorialGastoPuntos
     * const historialGastoPuntos = await prisma.historialGastoPuntos.findMany()
     * 
     * // Get first 10 HistorialGastoPuntos
     * const historialGastoPuntos = await prisma.historialGastoPuntos.findMany({ take: 10 })
     * 
     * // Only select the `gastoID`
     * const historialGastoPuntosWithGastoIDOnly = await prisma.historialGastoPuntos.findMany({ select: { gastoID: true } })
     * 
    **/
    findMany<T extends historialGastoPuntosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, historialGastoPuntosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historialGastoPuntosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a HistorialGastoPuntos.
     * @param {historialGastoPuntosCreateArgs} args - Arguments to create a HistorialGastoPuntos.
     * @example
     * // Create one HistorialGastoPuntos
     * const HistorialGastoPuntos = await prisma.historialGastoPuntos.create({
     *   data: {
     *     // ... data to create a HistorialGastoPuntos
     *   }
     * })
     * 
    **/
    create<T extends historialGastoPuntosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, historialGastoPuntosCreateArgs<ExtArgs>>
    ): Prisma__historialGastoPuntosClient<$Result.GetResult<Prisma.$historialGastoPuntosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many HistorialGastoPuntos.
     *     @param {historialGastoPuntosCreateManyArgs} args - Arguments to create many HistorialGastoPuntos.
     *     @example
     *     // Create many HistorialGastoPuntos
     *     const historialGastoPuntos = await prisma.historialGastoPuntos.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends historialGastoPuntosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, historialGastoPuntosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a HistorialGastoPuntos.
     * @param {historialGastoPuntosDeleteArgs} args - Arguments to delete one HistorialGastoPuntos.
     * @example
     * // Delete one HistorialGastoPuntos
     * const HistorialGastoPuntos = await prisma.historialGastoPuntos.delete({
     *   where: {
     *     // ... filter to delete one HistorialGastoPuntos
     *   }
     * })
     * 
    **/
    delete<T extends historialGastoPuntosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, historialGastoPuntosDeleteArgs<ExtArgs>>
    ): Prisma__historialGastoPuntosClient<$Result.GetResult<Prisma.$historialGastoPuntosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one HistorialGastoPuntos.
     * @param {historialGastoPuntosUpdateArgs} args - Arguments to update one HistorialGastoPuntos.
     * @example
     * // Update one HistorialGastoPuntos
     * const historialGastoPuntos = await prisma.historialGastoPuntos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends historialGastoPuntosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, historialGastoPuntosUpdateArgs<ExtArgs>>
    ): Prisma__historialGastoPuntosClient<$Result.GetResult<Prisma.$historialGastoPuntosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more HistorialGastoPuntos.
     * @param {historialGastoPuntosDeleteManyArgs} args - Arguments to filter HistorialGastoPuntos to delete.
     * @example
     * // Delete a few HistorialGastoPuntos
     * const { count } = await prisma.historialGastoPuntos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends historialGastoPuntosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, historialGastoPuntosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HistorialGastoPuntos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historialGastoPuntosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many HistorialGastoPuntos
     * const historialGastoPuntos = await prisma.historialGastoPuntos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends historialGastoPuntosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, historialGastoPuntosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one HistorialGastoPuntos.
     * @param {historialGastoPuntosUpsertArgs} args - Arguments to update or create a HistorialGastoPuntos.
     * @example
     * // Update or create a HistorialGastoPuntos
     * const historialGastoPuntos = await prisma.historialGastoPuntos.upsert({
     *   create: {
     *     // ... data to create a HistorialGastoPuntos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the HistorialGastoPuntos we want to update
     *   }
     * })
    **/
    upsert<T extends historialGastoPuntosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, historialGastoPuntosUpsertArgs<ExtArgs>>
    ): Prisma__historialGastoPuntosClient<$Result.GetResult<Prisma.$historialGastoPuntosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of HistorialGastoPuntos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historialGastoPuntosCountArgs} args - Arguments to filter HistorialGastoPuntos to count.
     * @example
     * // Count the number of HistorialGastoPuntos
     * const count = await prisma.historialGastoPuntos.count({
     *   where: {
     *     // ... the filter for the HistorialGastoPuntos we want to count
     *   }
     * })
    **/
    count<T extends historialGastoPuntosCountArgs>(
      args?: Subset<T, historialGastoPuntosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HistorialGastoPuntosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a HistorialGastoPuntos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialGastoPuntosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HistorialGastoPuntosAggregateArgs>(args: Subset<T, HistorialGastoPuntosAggregateArgs>): Prisma.PrismaPromise<GetHistorialGastoPuntosAggregateType<T>>

    /**
     * Group by HistorialGastoPuntos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historialGastoPuntosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends historialGastoPuntosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: historialGastoPuntosGroupByArgs['orderBy'] }
        : { orderBy?: historialGastoPuntosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, historialGastoPuntosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHistorialGastoPuntosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the historialGastoPuntos model
   */
  readonly fields: historialGastoPuntosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for historialGastoPuntos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__historialGastoPuntosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    clientes<T extends historialGastoPuntos$clientesArgs<ExtArgs> = {}>(args?: Subset<T, historialGastoPuntos$clientesArgs<ExtArgs>>): Prisma__clientesClient<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the historialGastoPuntos model
   */ 
  interface historialGastoPuntosFieldRefs {
    readonly gastoID: FieldRef<"historialGastoPuntos", 'Int'>
    readonly clienteID: FieldRef<"historialGastoPuntos", 'Int'>
    readonly puntosGastados: FieldRef<"historialGastoPuntos", 'Int'>
    readonly fecha: FieldRef<"historialGastoPuntos", 'DateTime'>
    readonly descripcionGasto: FieldRef<"historialGastoPuntos", 'String'>
  }
    

  // Custom InputTypes

  /**
   * historialGastoPuntos findUnique
   */
  export type historialGastoPuntosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialGastoPuntos
     */
    select?: historialGastoPuntosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialGastoPuntosInclude<ExtArgs> | null
    /**
     * Filter, which historialGastoPuntos to fetch.
     */
    where: historialGastoPuntosWhereUniqueInput
  }


  /**
   * historialGastoPuntos findUniqueOrThrow
   */
  export type historialGastoPuntosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialGastoPuntos
     */
    select?: historialGastoPuntosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialGastoPuntosInclude<ExtArgs> | null
    /**
     * Filter, which historialGastoPuntos to fetch.
     */
    where: historialGastoPuntosWhereUniqueInput
  }


  /**
   * historialGastoPuntos findFirst
   */
  export type historialGastoPuntosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialGastoPuntos
     */
    select?: historialGastoPuntosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialGastoPuntosInclude<ExtArgs> | null
    /**
     * Filter, which historialGastoPuntos to fetch.
     */
    where?: historialGastoPuntosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historialGastoPuntos to fetch.
     */
    orderBy?: historialGastoPuntosOrderByWithRelationInput | historialGastoPuntosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for historialGastoPuntos.
     */
    cursor?: historialGastoPuntosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historialGastoPuntos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historialGastoPuntos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of historialGastoPuntos.
     */
    distinct?: HistorialGastoPuntosScalarFieldEnum | HistorialGastoPuntosScalarFieldEnum[]
  }


  /**
   * historialGastoPuntos findFirstOrThrow
   */
  export type historialGastoPuntosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialGastoPuntos
     */
    select?: historialGastoPuntosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialGastoPuntosInclude<ExtArgs> | null
    /**
     * Filter, which historialGastoPuntos to fetch.
     */
    where?: historialGastoPuntosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historialGastoPuntos to fetch.
     */
    orderBy?: historialGastoPuntosOrderByWithRelationInput | historialGastoPuntosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for historialGastoPuntos.
     */
    cursor?: historialGastoPuntosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historialGastoPuntos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historialGastoPuntos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of historialGastoPuntos.
     */
    distinct?: HistorialGastoPuntosScalarFieldEnum | HistorialGastoPuntosScalarFieldEnum[]
  }


  /**
   * historialGastoPuntos findMany
   */
  export type historialGastoPuntosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialGastoPuntos
     */
    select?: historialGastoPuntosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialGastoPuntosInclude<ExtArgs> | null
    /**
     * Filter, which historialGastoPuntos to fetch.
     */
    where?: historialGastoPuntosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historialGastoPuntos to fetch.
     */
    orderBy?: historialGastoPuntosOrderByWithRelationInput | historialGastoPuntosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing historialGastoPuntos.
     */
    cursor?: historialGastoPuntosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historialGastoPuntos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historialGastoPuntos.
     */
    skip?: number
    distinct?: HistorialGastoPuntosScalarFieldEnum | HistorialGastoPuntosScalarFieldEnum[]
  }


  /**
   * historialGastoPuntos create
   */
  export type historialGastoPuntosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialGastoPuntos
     */
    select?: historialGastoPuntosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialGastoPuntosInclude<ExtArgs> | null
    /**
     * The data needed to create a historialGastoPuntos.
     */
    data?: XOR<historialGastoPuntosCreateInput, historialGastoPuntosUncheckedCreateInput>
  }


  /**
   * historialGastoPuntos createMany
   */
  export type historialGastoPuntosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many historialGastoPuntos.
     */
    data: historialGastoPuntosCreateManyInput | historialGastoPuntosCreateManyInput[]
  }


  /**
   * historialGastoPuntos update
   */
  export type historialGastoPuntosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialGastoPuntos
     */
    select?: historialGastoPuntosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialGastoPuntosInclude<ExtArgs> | null
    /**
     * The data needed to update a historialGastoPuntos.
     */
    data: XOR<historialGastoPuntosUpdateInput, historialGastoPuntosUncheckedUpdateInput>
    /**
     * Choose, which historialGastoPuntos to update.
     */
    where: historialGastoPuntosWhereUniqueInput
  }


  /**
   * historialGastoPuntos updateMany
   */
  export type historialGastoPuntosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update historialGastoPuntos.
     */
    data: XOR<historialGastoPuntosUpdateManyMutationInput, historialGastoPuntosUncheckedUpdateManyInput>
    /**
     * Filter which historialGastoPuntos to update
     */
    where?: historialGastoPuntosWhereInput
  }


  /**
   * historialGastoPuntos upsert
   */
  export type historialGastoPuntosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialGastoPuntos
     */
    select?: historialGastoPuntosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialGastoPuntosInclude<ExtArgs> | null
    /**
     * The filter to search for the historialGastoPuntos to update in case it exists.
     */
    where: historialGastoPuntosWhereUniqueInput
    /**
     * In case the historialGastoPuntos found by the `where` argument doesn't exist, create a new historialGastoPuntos with this data.
     */
    create: XOR<historialGastoPuntosCreateInput, historialGastoPuntosUncheckedCreateInput>
    /**
     * In case the historialGastoPuntos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<historialGastoPuntosUpdateInput, historialGastoPuntosUncheckedUpdateInput>
  }


  /**
   * historialGastoPuntos delete
   */
  export type historialGastoPuntosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialGastoPuntos
     */
    select?: historialGastoPuntosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialGastoPuntosInclude<ExtArgs> | null
    /**
     * Filter which historialGastoPuntos to delete.
     */
    where: historialGastoPuntosWhereUniqueInput
  }


  /**
   * historialGastoPuntos deleteMany
   */
  export type historialGastoPuntosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which historialGastoPuntos to delete
     */
    where?: historialGastoPuntosWhereInput
  }


  /**
   * historialGastoPuntos.clientes
   */
  export type historialGastoPuntos$clientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: clientesInclude<ExtArgs> | null
    where?: clientesWhereInput
  }


  /**
   * historialGastoPuntos without action
   */
  export type historialGastoPuntosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historialGastoPuntos
     */
    select?: historialGastoPuntosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: historialGastoPuntosInclude<ExtArgs> | null
  }



  /**
   * Model puntosClientes
   */

  export type AggregatePuntosClientes = {
    _count: PuntosClientesCountAggregateOutputType | null
    _avg: PuntosClientesAvgAggregateOutputType | null
    _sum: PuntosClientesSumAggregateOutputType | null
    _min: PuntosClientesMinAggregateOutputType | null
    _max: PuntosClientesMaxAggregateOutputType | null
  }

  export type PuntosClientesAvgAggregateOutputType = {
    puntosID: number | null
    clienteID: number | null
    saldoPuntos: number | null
  }

  export type PuntosClientesSumAggregateOutputType = {
    puntosID: number | null
    clienteID: number | null
    saldoPuntos: number | null
  }

  export type PuntosClientesMinAggregateOutputType = {
    puntosID: number | null
    clienteID: number | null
    saldoPuntos: number | null
  }

  export type PuntosClientesMaxAggregateOutputType = {
    puntosID: number | null
    clienteID: number | null
    saldoPuntos: number | null
  }

  export type PuntosClientesCountAggregateOutputType = {
    puntosID: number
    clienteID: number
    saldoPuntos: number
    _all: number
  }


  export type PuntosClientesAvgAggregateInputType = {
    puntosID?: true
    clienteID?: true
    saldoPuntos?: true
  }

  export type PuntosClientesSumAggregateInputType = {
    puntosID?: true
    clienteID?: true
    saldoPuntos?: true
  }

  export type PuntosClientesMinAggregateInputType = {
    puntosID?: true
    clienteID?: true
    saldoPuntos?: true
  }

  export type PuntosClientesMaxAggregateInputType = {
    puntosID?: true
    clienteID?: true
    saldoPuntos?: true
  }

  export type PuntosClientesCountAggregateInputType = {
    puntosID?: true
    clienteID?: true
    saldoPuntos?: true
    _all?: true
  }

  export type PuntosClientesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which puntosClientes to aggregate.
     */
    where?: puntosClientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of puntosClientes to fetch.
     */
    orderBy?: puntosClientesOrderByWithRelationInput | puntosClientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: puntosClientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` puntosClientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` puntosClientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned puntosClientes
    **/
    _count?: true | PuntosClientesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PuntosClientesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PuntosClientesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PuntosClientesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PuntosClientesMaxAggregateInputType
  }

  export type GetPuntosClientesAggregateType<T extends PuntosClientesAggregateArgs> = {
        [P in keyof T & keyof AggregatePuntosClientes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePuntosClientes[P]>
      : GetScalarType<T[P], AggregatePuntosClientes[P]>
  }




  export type puntosClientesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: puntosClientesWhereInput
    orderBy?: puntosClientesOrderByWithAggregationInput | puntosClientesOrderByWithAggregationInput[]
    by: PuntosClientesScalarFieldEnum[] | PuntosClientesScalarFieldEnum
    having?: puntosClientesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PuntosClientesCountAggregateInputType | true
    _avg?: PuntosClientesAvgAggregateInputType
    _sum?: PuntosClientesSumAggregateInputType
    _min?: PuntosClientesMinAggregateInputType
    _max?: PuntosClientesMaxAggregateInputType
  }

  export type PuntosClientesGroupByOutputType = {
    puntosID: number
    clienteID: number | null
    saldoPuntos: number | null
    _count: PuntosClientesCountAggregateOutputType | null
    _avg: PuntosClientesAvgAggregateOutputType | null
    _sum: PuntosClientesSumAggregateOutputType | null
    _min: PuntosClientesMinAggregateOutputType | null
    _max: PuntosClientesMaxAggregateOutputType | null
  }

  type GetPuntosClientesGroupByPayload<T extends puntosClientesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PuntosClientesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PuntosClientesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PuntosClientesGroupByOutputType[P]>
            : GetScalarType<T[P], PuntosClientesGroupByOutputType[P]>
        }
      >
    >


  export type puntosClientesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    puntosID?: boolean
    clienteID?: boolean
    saldoPuntos?: boolean
    clientes?: boolean | puntosClientes$clientesArgs<ExtArgs>
  }, ExtArgs["result"]["puntosClientes"]>

  export type puntosClientesSelectScalar = {
    puntosID?: boolean
    clienteID?: boolean
    saldoPuntos?: boolean
  }

  export type puntosClientesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clientes?: boolean | puntosClientes$clientesArgs<ExtArgs>
  }


  export type $puntosClientesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "puntosClientes"
    objects: {
      clientes: Prisma.$clientesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      puntosID: number
      clienteID: number | null
      saldoPuntos: number | null
    }, ExtArgs["result"]["puntosClientes"]>
    composites: {}
  }


  type puntosClientesGetPayload<S extends boolean | null | undefined | puntosClientesDefaultArgs> = $Result.GetResult<Prisma.$puntosClientesPayload, S>

  type puntosClientesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<puntosClientesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PuntosClientesCountAggregateInputType | true
    }

  export interface puntosClientesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['puntosClientes'], meta: { name: 'puntosClientes' } }
    /**
     * Find zero or one PuntosClientes that matches the filter.
     * @param {puntosClientesFindUniqueArgs} args - Arguments to find a PuntosClientes
     * @example
     * // Get one PuntosClientes
     * const puntosClientes = await prisma.puntosClientes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends puntosClientesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, puntosClientesFindUniqueArgs<ExtArgs>>
    ): Prisma__puntosClientesClient<$Result.GetResult<Prisma.$puntosClientesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one PuntosClientes that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {puntosClientesFindUniqueOrThrowArgs} args - Arguments to find a PuntosClientes
     * @example
     * // Get one PuntosClientes
     * const puntosClientes = await prisma.puntosClientes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends puntosClientesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, puntosClientesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__puntosClientesClient<$Result.GetResult<Prisma.$puntosClientesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first PuntosClientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {puntosClientesFindFirstArgs} args - Arguments to find a PuntosClientes
     * @example
     * // Get one PuntosClientes
     * const puntosClientes = await prisma.puntosClientes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends puntosClientesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, puntosClientesFindFirstArgs<ExtArgs>>
    ): Prisma__puntosClientesClient<$Result.GetResult<Prisma.$puntosClientesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first PuntosClientes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {puntosClientesFindFirstOrThrowArgs} args - Arguments to find a PuntosClientes
     * @example
     * // Get one PuntosClientes
     * const puntosClientes = await prisma.puntosClientes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends puntosClientesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, puntosClientesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__puntosClientesClient<$Result.GetResult<Prisma.$puntosClientesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more PuntosClientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {puntosClientesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PuntosClientes
     * const puntosClientes = await prisma.puntosClientes.findMany()
     * 
     * // Get first 10 PuntosClientes
     * const puntosClientes = await prisma.puntosClientes.findMany({ take: 10 })
     * 
     * // Only select the `puntosID`
     * const puntosClientesWithPuntosIDOnly = await prisma.puntosClientes.findMany({ select: { puntosID: true } })
     * 
    **/
    findMany<T extends puntosClientesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, puntosClientesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$puntosClientesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a PuntosClientes.
     * @param {puntosClientesCreateArgs} args - Arguments to create a PuntosClientes.
     * @example
     * // Create one PuntosClientes
     * const PuntosClientes = await prisma.puntosClientes.create({
     *   data: {
     *     // ... data to create a PuntosClientes
     *   }
     * })
     * 
    **/
    create<T extends puntosClientesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, puntosClientesCreateArgs<ExtArgs>>
    ): Prisma__puntosClientesClient<$Result.GetResult<Prisma.$puntosClientesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many PuntosClientes.
     *     @param {puntosClientesCreateManyArgs} args - Arguments to create many PuntosClientes.
     *     @example
     *     // Create many PuntosClientes
     *     const puntosClientes = await prisma.puntosClientes.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends puntosClientesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, puntosClientesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PuntosClientes.
     * @param {puntosClientesDeleteArgs} args - Arguments to delete one PuntosClientes.
     * @example
     * // Delete one PuntosClientes
     * const PuntosClientes = await prisma.puntosClientes.delete({
     *   where: {
     *     // ... filter to delete one PuntosClientes
     *   }
     * })
     * 
    **/
    delete<T extends puntosClientesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, puntosClientesDeleteArgs<ExtArgs>>
    ): Prisma__puntosClientesClient<$Result.GetResult<Prisma.$puntosClientesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one PuntosClientes.
     * @param {puntosClientesUpdateArgs} args - Arguments to update one PuntosClientes.
     * @example
     * // Update one PuntosClientes
     * const puntosClientes = await prisma.puntosClientes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends puntosClientesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, puntosClientesUpdateArgs<ExtArgs>>
    ): Prisma__puntosClientesClient<$Result.GetResult<Prisma.$puntosClientesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more PuntosClientes.
     * @param {puntosClientesDeleteManyArgs} args - Arguments to filter PuntosClientes to delete.
     * @example
     * // Delete a few PuntosClientes
     * const { count } = await prisma.puntosClientes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends puntosClientesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, puntosClientesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PuntosClientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {puntosClientesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PuntosClientes
     * const puntosClientes = await prisma.puntosClientes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends puntosClientesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, puntosClientesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PuntosClientes.
     * @param {puntosClientesUpsertArgs} args - Arguments to update or create a PuntosClientes.
     * @example
     * // Update or create a PuntosClientes
     * const puntosClientes = await prisma.puntosClientes.upsert({
     *   create: {
     *     // ... data to create a PuntosClientes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PuntosClientes we want to update
     *   }
     * })
    **/
    upsert<T extends puntosClientesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, puntosClientesUpsertArgs<ExtArgs>>
    ): Prisma__puntosClientesClient<$Result.GetResult<Prisma.$puntosClientesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of PuntosClientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {puntosClientesCountArgs} args - Arguments to filter PuntosClientes to count.
     * @example
     * // Count the number of PuntosClientes
     * const count = await prisma.puntosClientes.count({
     *   where: {
     *     // ... the filter for the PuntosClientes we want to count
     *   }
     * })
    **/
    count<T extends puntosClientesCountArgs>(
      args?: Subset<T, puntosClientesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PuntosClientesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PuntosClientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PuntosClientesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PuntosClientesAggregateArgs>(args: Subset<T, PuntosClientesAggregateArgs>): Prisma.PrismaPromise<GetPuntosClientesAggregateType<T>>

    /**
     * Group by PuntosClientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {puntosClientesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends puntosClientesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: puntosClientesGroupByArgs['orderBy'] }
        : { orderBy?: puntosClientesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, puntosClientesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPuntosClientesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the puntosClientes model
   */
  readonly fields: puntosClientesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for puntosClientes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__puntosClientesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    clientes<T extends puntosClientes$clientesArgs<ExtArgs> = {}>(args?: Subset<T, puntosClientes$clientesArgs<ExtArgs>>): Prisma__clientesClient<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the puntosClientes model
   */ 
  interface puntosClientesFieldRefs {
    readonly puntosID: FieldRef<"puntosClientes", 'Int'>
    readonly clienteID: FieldRef<"puntosClientes", 'Int'>
    readonly saldoPuntos: FieldRef<"puntosClientes", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * puntosClientes findUnique
   */
  export type puntosClientesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the puntosClientes
     */
    select?: puntosClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: puntosClientesInclude<ExtArgs> | null
    /**
     * Filter, which puntosClientes to fetch.
     */
    where: puntosClientesWhereUniqueInput
  }


  /**
   * puntosClientes findUniqueOrThrow
   */
  export type puntosClientesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the puntosClientes
     */
    select?: puntosClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: puntosClientesInclude<ExtArgs> | null
    /**
     * Filter, which puntosClientes to fetch.
     */
    where: puntosClientesWhereUniqueInput
  }


  /**
   * puntosClientes findFirst
   */
  export type puntosClientesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the puntosClientes
     */
    select?: puntosClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: puntosClientesInclude<ExtArgs> | null
    /**
     * Filter, which puntosClientes to fetch.
     */
    where?: puntosClientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of puntosClientes to fetch.
     */
    orderBy?: puntosClientesOrderByWithRelationInput | puntosClientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for puntosClientes.
     */
    cursor?: puntosClientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` puntosClientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` puntosClientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of puntosClientes.
     */
    distinct?: PuntosClientesScalarFieldEnum | PuntosClientesScalarFieldEnum[]
  }


  /**
   * puntosClientes findFirstOrThrow
   */
  export type puntosClientesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the puntosClientes
     */
    select?: puntosClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: puntosClientesInclude<ExtArgs> | null
    /**
     * Filter, which puntosClientes to fetch.
     */
    where?: puntosClientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of puntosClientes to fetch.
     */
    orderBy?: puntosClientesOrderByWithRelationInput | puntosClientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for puntosClientes.
     */
    cursor?: puntosClientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` puntosClientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` puntosClientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of puntosClientes.
     */
    distinct?: PuntosClientesScalarFieldEnum | PuntosClientesScalarFieldEnum[]
  }


  /**
   * puntosClientes findMany
   */
  export type puntosClientesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the puntosClientes
     */
    select?: puntosClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: puntosClientesInclude<ExtArgs> | null
    /**
     * Filter, which puntosClientes to fetch.
     */
    where?: puntosClientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of puntosClientes to fetch.
     */
    orderBy?: puntosClientesOrderByWithRelationInput | puntosClientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing puntosClientes.
     */
    cursor?: puntosClientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` puntosClientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` puntosClientes.
     */
    skip?: number
    distinct?: PuntosClientesScalarFieldEnum | PuntosClientesScalarFieldEnum[]
  }


  /**
   * puntosClientes create
   */
  export type puntosClientesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the puntosClientes
     */
    select?: puntosClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: puntosClientesInclude<ExtArgs> | null
    /**
     * The data needed to create a puntosClientes.
     */
    data?: XOR<puntosClientesCreateInput, puntosClientesUncheckedCreateInput>
  }


  /**
   * puntosClientes createMany
   */
  export type puntosClientesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many puntosClientes.
     */
    data: puntosClientesCreateManyInput | puntosClientesCreateManyInput[]
  }


  /**
   * puntosClientes update
   */
  export type puntosClientesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the puntosClientes
     */
    select?: puntosClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: puntosClientesInclude<ExtArgs> | null
    /**
     * The data needed to update a puntosClientes.
     */
    data: XOR<puntosClientesUpdateInput, puntosClientesUncheckedUpdateInput>
    /**
     * Choose, which puntosClientes to update.
     */
    where: puntosClientesWhereUniqueInput
  }


  /**
   * puntosClientes updateMany
   */
  export type puntosClientesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update puntosClientes.
     */
    data: XOR<puntosClientesUpdateManyMutationInput, puntosClientesUncheckedUpdateManyInput>
    /**
     * Filter which puntosClientes to update
     */
    where?: puntosClientesWhereInput
  }


  /**
   * puntosClientes upsert
   */
  export type puntosClientesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the puntosClientes
     */
    select?: puntosClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: puntosClientesInclude<ExtArgs> | null
    /**
     * The filter to search for the puntosClientes to update in case it exists.
     */
    where: puntosClientesWhereUniqueInput
    /**
     * In case the puntosClientes found by the `where` argument doesn't exist, create a new puntosClientes with this data.
     */
    create: XOR<puntosClientesCreateInput, puntosClientesUncheckedCreateInput>
    /**
     * In case the puntosClientes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<puntosClientesUpdateInput, puntosClientesUncheckedUpdateInput>
  }


  /**
   * puntosClientes delete
   */
  export type puntosClientesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the puntosClientes
     */
    select?: puntosClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: puntosClientesInclude<ExtArgs> | null
    /**
     * Filter which puntosClientes to delete.
     */
    where: puntosClientesWhereUniqueInput
  }


  /**
   * puntosClientes deleteMany
   */
  export type puntosClientesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which puntosClientes to delete
     */
    where?: puntosClientesWhereInput
  }


  /**
   * puntosClientes.clientes
   */
  export type puntosClientes$clientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: clientesInclude<ExtArgs> | null
    where?: clientesWhereInput
  }


  /**
   * puntosClientes without action
   */
  export type puntosClientesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the puntosClientes
     */
    select?: puntosClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: puntosClientesInclude<ExtArgs> | null
  }



  /**
   * Model recompensas
   */

  export type AggregateRecompensas = {
    _count: RecompensasCountAggregateOutputType | null
    _avg: RecompensasAvgAggregateOutputType | null
    _sum: RecompensasSumAggregateOutputType | null
    _min: RecompensasMinAggregateOutputType | null
    _max: RecompensasMaxAggregateOutputType | null
  }

  export type RecompensasAvgAggregateOutputType = {
    recompensaID: number | null
    servicioID: number | null
    puntosRecompensa: number | null
  }

  export type RecompensasSumAggregateOutputType = {
    recompensaID: number | null
    servicioID: number | null
    puntosRecompensa: number | null
  }

  export type RecompensasMinAggregateOutputType = {
    recompensaID: number | null
    servicioID: number | null
    puntosRecompensa: number | null
  }

  export type RecompensasMaxAggregateOutputType = {
    recompensaID: number | null
    servicioID: number | null
    puntosRecompensa: number | null
  }

  export type RecompensasCountAggregateOutputType = {
    recompensaID: number
    servicioID: number
    puntosRecompensa: number
    _all: number
  }


  export type RecompensasAvgAggregateInputType = {
    recompensaID?: true
    servicioID?: true
    puntosRecompensa?: true
  }

  export type RecompensasSumAggregateInputType = {
    recompensaID?: true
    servicioID?: true
    puntosRecompensa?: true
  }

  export type RecompensasMinAggregateInputType = {
    recompensaID?: true
    servicioID?: true
    puntosRecompensa?: true
  }

  export type RecompensasMaxAggregateInputType = {
    recompensaID?: true
    servicioID?: true
    puntosRecompensa?: true
  }

  export type RecompensasCountAggregateInputType = {
    recompensaID?: true
    servicioID?: true
    puntosRecompensa?: true
    _all?: true
  }

  export type RecompensasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which recompensas to aggregate.
     */
    where?: recompensasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of recompensas to fetch.
     */
    orderBy?: recompensasOrderByWithRelationInput | recompensasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: recompensasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` recompensas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` recompensas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned recompensas
    **/
    _count?: true | RecompensasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RecompensasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RecompensasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RecompensasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RecompensasMaxAggregateInputType
  }

  export type GetRecompensasAggregateType<T extends RecompensasAggregateArgs> = {
        [P in keyof T & keyof AggregateRecompensas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRecompensas[P]>
      : GetScalarType<T[P], AggregateRecompensas[P]>
  }




  export type recompensasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: recompensasWhereInput
    orderBy?: recompensasOrderByWithAggregationInput | recompensasOrderByWithAggregationInput[]
    by: RecompensasScalarFieldEnum[] | RecompensasScalarFieldEnum
    having?: recompensasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RecompensasCountAggregateInputType | true
    _avg?: RecompensasAvgAggregateInputType
    _sum?: RecompensasSumAggregateInputType
    _min?: RecompensasMinAggregateInputType
    _max?: RecompensasMaxAggregateInputType
  }

  export type RecompensasGroupByOutputType = {
    recompensaID: number
    servicioID: number | null
    puntosRecompensa: number | null
    _count: RecompensasCountAggregateOutputType | null
    _avg: RecompensasAvgAggregateOutputType | null
    _sum: RecompensasSumAggregateOutputType | null
    _min: RecompensasMinAggregateOutputType | null
    _max: RecompensasMaxAggregateOutputType | null
  }

  type GetRecompensasGroupByPayload<T extends recompensasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RecompensasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RecompensasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RecompensasGroupByOutputType[P]>
            : GetScalarType<T[P], RecompensasGroupByOutputType[P]>
        }
      >
    >


  export type recompensasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    recompensaID?: boolean
    servicioID?: boolean
    puntosRecompensa?: boolean
    catalogo?: boolean | recompensas$catalogoArgs<ExtArgs>
  }, ExtArgs["result"]["recompensas"]>

  export type recompensasSelectScalar = {
    recompensaID?: boolean
    servicioID?: boolean
    puntosRecompensa?: boolean
  }

  export type recompensasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    catalogo?: boolean | recompensas$catalogoArgs<ExtArgs>
  }


  export type $recompensasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "recompensas"
    objects: {
      catalogo: Prisma.$catalogoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      recompensaID: number
      servicioID: number | null
      puntosRecompensa: number | null
    }, ExtArgs["result"]["recompensas"]>
    composites: {}
  }


  type recompensasGetPayload<S extends boolean | null | undefined | recompensasDefaultArgs> = $Result.GetResult<Prisma.$recompensasPayload, S>

  type recompensasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<recompensasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RecompensasCountAggregateInputType | true
    }

  export interface recompensasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['recompensas'], meta: { name: 'recompensas' } }
    /**
     * Find zero or one Recompensas that matches the filter.
     * @param {recompensasFindUniqueArgs} args - Arguments to find a Recompensas
     * @example
     * // Get one Recompensas
     * const recompensas = await prisma.recompensas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends recompensasFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, recompensasFindUniqueArgs<ExtArgs>>
    ): Prisma__recompensasClient<$Result.GetResult<Prisma.$recompensasPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Recompensas that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {recompensasFindUniqueOrThrowArgs} args - Arguments to find a Recompensas
     * @example
     * // Get one Recompensas
     * const recompensas = await prisma.recompensas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends recompensasFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, recompensasFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__recompensasClient<$Result.GetResult<Prisma.$recompensasPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Recompensas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {recompensasFindFirstArgs} args - Arguments to find a Recompensas
     * @example
     * // Get one Recompensas
     * const recompensas = await prisma.recompensas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends recompensasFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, recompensasFindFirstArgs<ExtArgs>>
    ): Prisma__recompensasClient<$Result.GetResult<Prisma.$recompensasPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Recompensas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {recompensasFindFirstOrThrowArgs} args - Arguments to find a Recompensas
     * @example
     * // Get one Recompensas
     * const recompensas = await prisma.recompensas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends recompensasFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, recompensasFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__recompensasClient<$Result.GetResult<Prisma.$recompensasPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Recompensas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {recompensasFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Recompensas
     * const recompensas = await prisma.recompensas.findMany()
     * 
     * // Get first 10 Recompensas
     * const recompensas = await prisma.recompensas.findMany({ take: 10 })
     * 
     * // Only select the `recompensaID`
     * const recompensasWithRecompensaIDOnly = await prisma.recompensas.findMany({ select: { recompensaID: true } })
     * 
    **/
    findMany<T extends recompensasFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, recompensasFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$recompensasPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Recompensas.
     * @param {recompensasCreateArgs} args - Arguments to create a Recompensas.
     * @example
     * // Create one Recompensas
     * const Recompensas = await prisma.recompensas.create({
     *   data: {
     *     // ... data to create a Recompensas
     *   }
     * })
     * 
    **/
    create<T extends recompensasCreateArgs<ExtArgs>>(
      args: SelectSubset<T, recompensasCreateArgs<ExtArgs>>
    ): Prisma__recompensasClient<$Result.GetResult<Prisma.$recompensasPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Recompensas.
     *     @param {recompensasCreateManyArgs} args - Arguments to create many Recompensas.
     *     @example
     *     // Create many Recompensas
     *     const recompensas = await prisma.recompensas.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends recompensasCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, recompensasCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Recompensas.
     * @param {recompensasDeleteArgs} args - Arguments to delete one Recompensas.
     * @example
     * // Delete one Recompensas
     * const Recompensas = await prisma.recompensas.delete({
     *   where: {
     *     // ... filter to delete one Recompensas
     *   }
     * })
     * 
    **/
    delete<T extends recompensasDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, recompensasDeleteArgs<ExtArgs>>
    ): Prisma__recompensasClient<$Result.GetResult<Prisma.$recompensasPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Recompensas.
     * @param {recompensasUpdateArgs} args - Arguments to update one Recompensas.
     * @example
     * // Update one Recompensas
     * const recompensas = await prisma.recompensas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends recompensasUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, recompensasUpdateArgs<ExtArgs>>
    ): Prisma__recompensasClient<$Result.GetResult<Prisma.$recompensasPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Recompensas.
     * @param {recompensasDeleteManyArgs} args - Arguments to filter Recompensas to delete.
     * @example
     * // Delete a few Recompensas
     * const { count } = await prisma.recompensas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends recompensasDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, recompensasDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Recompensas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {recompensasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Recompensas
     * const recompensas = await prisma.recompensas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends recompensasUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, recompensasUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Recompensas.
     * @param {recompensasUpsertArgs} args - Arguments to update or create a Recompensas.
     * @example
     * // Update or create a Recompensas
     * const recompensas = await prisma.recompensas.upsert({
     *   create: {
     *     // ... data to create a Recompensas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Recompensas we want to update
     *   }
     * })
    **/
    upsert<T extends recompensasUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, recompensasUpsertArgs<ExtArgs>>
    ): Prisma__recompensasClient<$Result.GetResult<Prisma.$recompensasPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Recompensas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {recompensasCountArgs} args - Arguments to filter Recompensas to count.
     * @example
     * // Count the number of Recompensas
     * const count = await prisma.recompensas.count({
     *   where: {
     *     // ... the filter for the Recompensas we want to count
     *   }
     * })
    **/
    count<T extends recompensasCountArgs>(
      args?: Subset<T, recompensasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RecompensasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Recompensas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecompensasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RecompensasAggregateArgs>(args: Subset<T, RecompensasAggregateArgs>): Prisma.PrismaPromise<GetRecompensasAggregateType<T>>

    /**
     * Group by Recompensas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {recompensasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends recompensasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: recompensasGroupByArgs['orderBy'] }
        : { orderBy?: recompensasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, recompensasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRecompensasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the recompensas model
   */
  readonly fields: recompensasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for recompensas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__recompensasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    catalogo<T extends recompensas$catalogoArgs<ExtArgs> = {}>(args?: Subset<T, recompensas$catalogoArgs<ExtArgs>>): Prisma__catalogoClient<$Result.GetResult<Prisma.$catalogoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the recompensas model
   */ 
  interface recompensasFieldRefs {
    readonly recompensaID: FieldRef<"recompensas", 'Int'>
    readonly servicioID: FieldRef<"recompensas", 'Int'>
    readonly puntosRecompensa: FieldRef<"recompensas", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * recompensas findUnique
   */
  export type recompensasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the recompensas
     */
    select?: recompensasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: recompensasInclude<ExtArgs> | null
    /**
     * Filter, which recompensas to fetch.
     */
    where: recompensasWhereUniqueInput
  }


  /**
   * recompensas findUniqueOrThrow
   */
  export type recompensasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the recompensas
     */
    select?: recompensasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: recompensasInclude<ExtArgs> | null
    /**
     * Filter, which recompensas to fetch.
     */
    where: recompensasWhereUniqueInput
  }


  /**
   * recompensas findFirst
   */
  export type recompensasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the recompensas
     */
    select?: recompensasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: recompensasInclude<ExtArgs> | null
    /**
     * Filter, which recompensas to fetch.
     */
    where?: recompensasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of recompensas to fetch.
     */
    orderBy?: recompensasOrderByWithRelationInput | recompensasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for recompensas.
     */
    cursor?: recompensasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` recompensas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` recompensas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of recompensas.
     */
    distinct?: RecompensasScalarFieldEnum | RecompensasScalarFieldEnum[]
  }


  /**
   * recompensas findFirstOrThrow
   */
  export type recompensasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the recompensas
     */
    select?: recompensasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: recompensasInclude<ExtArgs> | null
    /**
     * Filter, which recompensas to fetch.
     */
    where?: recompensasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of recompensas to fetch.
     */
    orderBy?: recompensasOrderByWithRelationInput | recompensasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for recompensas.
     */
    cursor?: recompensasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` recompensas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` recompensas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of recompensas.
     */
    distinct?: RecompensasScalarFieldEnum | RecompensasScalarFieldEnum[]
  }


  /**
   * recompensas findMany
   */
  export type recompensasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the recompensas
     */
    select?: recompensasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: recompensasInclude<ExtArgs> | null
    /**
     * Filter, which recompensas to fetch.
     */
    where?: recompensasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of recompensas to fetch.
     */
    orderBy?: recompensasOrderByWithRelationInput | recompensasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing recompensas.
     */
    cursor?: recompensasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` recompensas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` recompensas.
     */
    skip?: number
    distinct?: RecompensasScalarFieldEnum | RecompensasScalarFieldEnum[]
  }


  /**
   * recompensas create
   */
  export type recompensasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the recompensas
     */
    select?: recompensasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: recompensasInclude<ExtArgs> | null
    /**
     * The data needed to create a recompensas.
     */
    data?: XOR<recompensasCreateInput, recompensasUncheckedCreateInput>
  }


  /**
   * recompensas createMany
   */
  export type recompensasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many recompensas.
     */
    data: recompensasCreateManyInput | recompensasCreateManyInput[]
  }


  /**
   * recompensas update
   */
  export type recompensasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the recompensas
     */
    select?: recompensasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: recompensasInclude<ExtArgs> | null
    /**
     * The data needed to update a recompensas.
     */
    data: XOR<recompensasUpdateInput, recompensasUncheckedUpdateInput>
    /**
     * Choose, which recompensas to update.
     */
    where: recompensasWhereUniqueInput
  }


  /**
   * recompensas updateMany
   */
  export type recompensasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update recompensas.
     */
    data: XOR<recompensasUpdateManyMutationInput, recompensasUncheckedUpdateManyInput>
    /**
     * Filter which recompensas to update
     */
    where?: recompensasWhereInput
  }


  /**
   * recompensas upsert
   */
  export type recompensasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the recompensas
     */
    select?: recompensasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: recompensasInclude<ExtArgs> | null
    /**
     * The filter to search for the recompensas to update in case it exists.
     */
    where: recompensasWhereUniqueInput
    /**
     * In case the recompensas found by the `where` argument doesn't exist, create a new recompensas with this data.
     */
    create: XOR<recompensasCreateInput, recompensasUncheckedCreateInput>
    /**
     * In case the recompensas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<recompensasUpdateInput, recompensasUncheckedUpdateInput>
  }


  /**
   * recompensas delete
   */
  export type recompensasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the recompensas
     */
    select?: recompensasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: recompensasInclude<ExtArgs> | null
    /**
     * Filter which recompensas to delete.
     */
    where: recompensasWhereUniqueInput
  }


  /**
   * recompensas deleteMany
   */
  export type recompensasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which recompensas to delete
     */
    where?: recompensasWhereInput
  }


  /**
   * recompensas.catalogo
   */
  export type recompensas$catalogoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the catalogo
     */
    select?: catalogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catalogoInclude<ExtArgs> | null
    where?: catalogoWhereInput
  }


  /**
   * recompensas without action
   */
  export type recompensasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the recompensas
     */
    select?: recompensasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: recompensasInclude<ExtArgs> | null
  }



  /**
   * Model reporteCitasPendientes
   */

  export type AggregateReporteCitasPendientes = {
    _count: ReporteCitasPendientesCountAggregateOutputType | null
    _avg: ReporteCitasPendientesAvgAggregateOutputType | null
    _sum: ReporteCitasPendientesSumAggregateOutputType | null
    _min: ReporteCitasPendientesMinAggregateOutputType | null
    _max: ReporteCitasPendientesMaxAggregateOutputType | null
  }

  export type ReporteCitasPendientesAvgAggregateOutputType = {
    reporteID: number | null
    citaID: number | null
    clienteID: number | null
    estilistaID: number | null
  }

  export type ReporteCitasPendientesSumAggregateOutputType = {
    reporteID: number | null
    citaID: number | null
    clienteID: number | null
    estilistaID: number | null
  }

  export type ReporteCitasPendientesMinAggregateOutputType = {
    reporteID: number | null
    citaID: number | null
    clienteID: number | null
    fechaCita: Date | null
    estilistaID: number | null
  }

  export type ReporteCitasPendientesMaxAggregateOutputType = {
    reporteID: number | null
    citaID: number | null
    clienteID: number | null
    fechaCita: Date | null
    estilistaID: number | null
  }

  export type ReporteCitasPendientesCountAggregateOutputType = {
    reporteID: number
    citaID: number
    clienteID: number
    fechaCita: number
    estilistaID: number
    _all: number
  }


  export type ReporteCitasPendientesAvgAggregateInputType = {
    reporteID?: true
    citaID?: true
    clienteID?: true
    estilistaID?: true
  }

  export type ReporteCitasPendientesSumAggregateInputType = {
    reporteID?: true
    citaID?: true
    clienteID?: true
    estilistaID?: true
  }

  export type ReporteCitasPendientesMinAggregateInputType = {
    reporteID?: true
    citaID?: true
    clienteID?: true
    fechaCita?: true
    estilistaID?: true
  }

  export type ReporteCitasPendientesMaxAggregateInputType = {
    reporteID?: true
    citaID?: true
    clienteID?: true
    fechaCita?: true
    estilistaID?: true
  }

  export type ReporteCitasPendientesCountAggregateInputType = {
    reporteID?: true
    citaID?: true
    clienteID?: true
    fechaCita?: true
    estilistaID?: true
    _all?: true
  }

  export type ReporteCitasPendientesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reporteCitasPendientes to aggregate.
     */
    where?: reporteCitasPendientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reporteCitasPendientes to fetch.
     */
    orderBy?: reporteCitasPendientesOrderByWithRelationInput | reporteCitasPendientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: reporteCitasPendientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reporteCitasPendientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reporteCitasPendientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned reporteCitasPendientes
    **/
    _count?: true | ReporteCitasPendientesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReporteCitasPendientesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReporteCitasPendientesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReporteCitasPendientesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReporteCitasPendientesMaxAggregateInputType
  }

  export type GetReporteCitasPendientesAggregateType<T extends ReporteCitasPendientesAggregateArgs> = {
        [P in keyof T & keyof AggregateReporteCitasPendientes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReporteCitasPendientes[P]>
      : GetScalarType<T[P], AggregateReporteCitasPendientes[P]>
  }




  export type reporteCitasPendientesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reporteCitasPendientesWhereInput
    orderBy?: reporteCitasPendientesOrderByWithAggregationInput | reporteCitasPendientesOrderByWithAggregationInput[]
    by: ReporteCitasPendientesScalarFieldEnum[] | ReporteCitasPendientesScalarFieldEnum
    having?: reporteCitasPendientesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReporteCitasPendientesCountAggregateInputType | true
    _avg?: ReporteCitasPendientesAvgAggregateInputType
    _sum?: ReporteCitasPendientesSumAggregateInputType
    _min?: ReporteCitasPendientesMinAggregateInputType
    _max?: ReporteCitasPendientesMaxAggregateInputType
  }

  export type ReporteCitasPendientesGroupByOutputType = {
    reporteID: number
    citaID: number | null
    clienteID: number | null
    fechaCita: Date | null
    estilistaID: number | null
    _count: ReporteCitasPendientesCountAggregateOutputType | null
    _avg: ReporteCitasPendientesAvgAggregateOutputType | null
    _sum: ReporteCitasPendientesSumAggregateOutputType | null
    _min: ReporteCitasPendientesMinAggregateOutputType | null
    _max: ReporteCitasPendientesMaxAggregateOutputType | null
  }

  type GetReporteCitasPendientesGroupByPayload<T extends reporteCitasPendientesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReporteCitasPendientesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReporteCitasPendientesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReporteCitasPendientesGroupByOutputType[P]>
            : GetScalarType<T[P], ReporteCitasPendientesGroupByOutputType[P]>
        }
      >
    >


  export type reporteCitasPendientesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    reporteID?: boolean
    citaID?: boolean
    clienteID?: boolean
    fechaCita?: boolean
    estilistaID?: boolean
    citas?: boolean | reporteCitasPendientes$citasArgs<ExtArgs>
    clientes?: boolean | reporteCitasPendientes$clientesArgs<ExtArgs>
    estilistas?: boolean | reporteCitasPendientes$estilistasArgs<ExtArgs>
  }, ExtArgs["result"]["reporteCitasPendientes"]>

  export type reporteCitasPendientesSelectScalar = {
    reporteID?: boolean
    citaID?: boolean
    clienteID?: boolean
    fechaCita?: boolean
    estilistaID?: boolean
  }

  export type reporteCitasPendientesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    citas?: boolean | reporteCitasPendientes$citasArgs<ExtArgs>
    clientes?: boolean | reporteCitasPendientes$clientesArgs<ExtArgs>
    estilistas?: boolean | reporteCitasPendientes$estilistasArgs<ExtArgs>
  }


  export type $reporteCitasPendientesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "reporteCitasPendientes"
    objects: {
      citas: Prisma.$citasPayload<ExtArgs> | null
      clientes: Prisma.$clientesPayload<ExtArgs> | null
      estilistas: Prisma.$estilistasPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      reporteID: number
      citaID: number | null
      clienteID: number | null
      fechaCita: Date | null
      estilistaID: number | null
    }, ExtArgs["result"]["reporteCitasPendientes"]>
    composites: {}
  }


  type reporteCitasPendientesGetPayload<S extends boolean | null | undefined | reporteCitasPendientesDefaultArgs> = $Result.GetResult<Prisma.$reporteCitasPendientesPayload, S>

  type reporteCitasPendientesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<reporteCitasPendientesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ReporteCitasPendientesCountAggregateInputType | true
    }

  export interface reporteCitasPendientesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['reporteCitasPendientes'], meta: { name: 'reporteCitasPendientes' } }
    /**
     * Find zero or one ReporteCitasPendientes that matches the filter.
     * @param {reporteCitasPendientesFindUniqueArgs} args - Arguments to find a ReporteCitasPendientes
     * @example
     * // Get one ReporteCitasPendientes
     * const reporteCitasPendientes = await prisma.reporteCitasPendientes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends reporteCitasPendientesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, reporteCitasPendientesFindUniqueArgs<ExtArgs>>
    ): Prisma__reporteCitasPendientesClient<$Result.GetResult<Prisma.$reporteCitasPendientesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one ReporteCitasPendientes that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {reporteCitasPendientesFindUniqueOrThrowArgs} args - Arguments to find a ReporteCitasPendientes
     * @example
     * // Get one ReporteCitasPendientes
     * const reporteCitasPendientes = await prisma.reporteCitasPendientes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends reporteCitasPendientesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, reporteCitasPendientesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__reporteCitasPendientesClient<$Result.GetResult<Prisma.$reporteCitasPendientesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first ReporteCitasPendientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reporteCitasPendientesFindFirstArgs} args - Arguments to find a ReporteCitasPendientes
     * @example
     * // Get one ReporteCitasPendientes
     * const reporteCitasPendientes = await prisma.reporteCitasPendientes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends reporteCitasPendientesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, reporteCitasPendientesFindFirstArgs<ExtArgs>>
    ): Prisma__reporteCitasPendientesClient<$Result.GetResult<Prisma.$reporteCitasPendientesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first ReporteCitasPendientes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reporteCitasPendientesFindFirstOrThrowArgs} args - Arguments to find a ReporteCitasPendientes
     * @example
     * // Get one ReporteCitasPendientes
     * const reporteCitasPendientes = await prisma.reporteCitasPendientes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends reporteCitasPendientesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, reporteCitasPendientesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__reporteCitasPendientesClient<$Result.GetResult<Prisma.$reporteCitasPendientesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more ReporteCitasPendientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reporteCitasPendientesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReporteCitasPendientes
     * const reporteCitasPendientes = await prisma.reporteCitasPendientes.findMany()
     * 
     * // Get first 10 ReporteCitasPendientes
     * const reporteCitasPendientes = await prisma.reporteCitasPendientes.findMany({ take: 10 })
     * 
     * // Only select the `reporteID`
     * const reporteCitasPendientesWithReporteIDOnly = await prisma.reporteCitasPendientes.findMany({ select: { reporteID: true } })
     * 
    **/
    findMany<T extends reporteCitasPendientesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, reporteCitasPendientesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reporteCitasPendientesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a ReporteCitasPendientes.
     * @param {reporteCitasPendientesCreateArgs} args - Arguments to create a ReporteCitasPendientes.
     * @example
     * // Create one ReporteCitasPendientes
     * const ReporteCitasPendientes = await prisma.reporteCitasPendientes.create({
     *   data: {
     *     // ... data to create a ReporteCitasPendientes
     *   }
     * })
     * 
    **/
    create<T extends reporteCitasPendientesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, reporteCitasPendientesCreateArgs<ExtArgs>>
    ): Prisma__reporteCitasPendientesClient<$Result.GetResult<Prisma.$reporteCitasPendientesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many ReporteCitasPendientes.
     *     @param {reporteCitasPendientesCreateManyArgs} args - Arguments to create many ReporteCitasPendientes.
     *     @example
     *     // Create many ReporteCitasPendientes
     *     const reporteCitasPendientes = await prisma.reporteCitasPendientes.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends reporteCitasPendientesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, reporteCitasPendientesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ReporteCitasPendientes.
     * @param {reporteCitasPendientesDeleteArgs} args - Arguments to delete one ReporteCitasPendientes.
     * @example
     * // Delete one ReporteCitasPendientes
     * const ReporteCitasPendientes = await prisma.reporteCitasPendientes.delete({
     *   where: {
     *     // ... filter to delete one ReporteCitasPendientes
     *   }
     * })
     * 
    **/
    delete<T extends reporteCitasPendientesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, reporteCitasPendientesDeleteArgs<ExtArgs>>
    ): Prisma__reporteCitasPendientesClient<$Result.GetResult<Prisma.$reporteCitasPendientesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one ReporteCitasPendientes.
     * @param {reporteCitasPendientesUpdateArgs} args - Arguments to update one ReporteCitasPendientes.
     * @example
     * // Update one ReporteCitasPendientes
     * const reporteCitasPendientes = await prisma.reporteCitasPendientes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends reporteCitasPendientesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, reporteCitasPendientesUpdateArgs<ExtArgs>>
    ): Prisma__reporteCitasPendientesClient<$Result.GetResult<Prisma.$reporteCitasPendientesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more ReporteCitasPendientes.
     * @param {reporteCitasPendientesDeleteManyArgs} args - Arguments to filter ReporteCitasPendientes to delete.
     * @example
     * // Delete a few ReporteCitasPendientes
     * const { count } = await prisma.reporteCitasPendientes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends reporteCitasPendientesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, reporteCitasPendientesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReporteCitasPendientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reporteCitasPendientesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReporteCitasPendientes
     * const reporteCitasPendientes = await prisma.reporteCitasPendientes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends reporteCitasPendientesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, reporteCitasPendientesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ReporteCitasPendientes.
     * @param {reporteCitasPendientesUpsertArgs} args - Arguments to update or create a ReporteCitasPendientes.
     * @example
     * // Update or create a ReporteCitasPendientes
     * const reporteCitasPendientes = await prisma.reporteCitasPendientes.upsert({
     *   create: {
     *     // ... data to create a ReporteCitasPendientes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReporteCitasPendientes we want to update
     *   }
     * })
    **/
    upsert<T extends reporteCitasPendientesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, reporteCitasPendientesUpsertArgs<ExtArgs>>
    ): Prisma__reporteCitasPendientesClient<$Result.GetResult<Prisma.$reporteCitasPendientesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of ReporteCitasPendientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reporteCitasPendientesCountArgs} args - Arguments to filter ReporteCitasPendientes to count.
     * @example
     * // Count the number of ReporteCitasPendientes
     * const count = await prisma.reporteCitasPendientes.count({
     *   where: {
     *     // ... the filter for the ReporteCitasPendientes we want to count
     *   }
     * })
    **/
    count<T extends reporteCitasPendientesCountArgs>(
      args?: Subset<T, reporteCitasPendientesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReporteCitasPendientesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReporteCitasPendientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReporteCitasPendientesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReporteCitasPendientesAggregateArgs>(args: Subset<T, ReporteCitasPendientesAggregateArgs>): Prisma.PrismaPromise<GetReporteCitasPendientesAggregateType<T>>

    /**
     * Group by ReporteCitasPendientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reporteCitasPendientesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends reporteCitasPendientesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: reporteCitasPendientesGroupByArgs['orderBy'] }
        : { orderBy?: reporteCitasPendientesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, reporteCitasPendientesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReporteCitasPendientesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the reporteCitasPendientes model
   */
  readonly fields: reporteCitasPendientesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for reporteCitasPendientes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__reporteCitasPendientesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    citas<T extends reporteCitasPendientes$citasArgs<ExtArgs> = {}>(args?: Subset<T, reporteCitasPendientes$citasArgs<ExtArgs>>): Prisma__citasClient<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    clientes<T extends reporteCitasPendientes$clientesArgs<ExtArgs> = {}>(args?: Subset<T, reporteCitasPendientes$clientesArgs<ExtArgs>>): Prisma__clientesClient<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    estilistas<T extends reporteCitasPendientes$estilistasArgs<ExtArgs> = {}>(args?: Subset<T, reporteCitasPendientes$estilistasArgs<ExtArgs>>): Prisma__estilistasClient<$Result.GetResult<Prisma.$estilistasPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the reporteCitasPendientes model
   */ 
  interface reporteCitasPendientesFieldRefs {
    readonly reporteID: FieldRef<"reporteCitasPendientes", 'Int'>
    readonly citaID: FieldRef<"reporteCitasPendientes", 'Int'>
    readonly clienteID: FieldRef<"reporteCitasPendientes", 'Int'>
    readonly fechaCita: FieldRef<"reporteCitasPendientes", 'DateTime'>
    readonly estilistaID: FieldRef<"reporteCitasPendientes", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * reporteCitasPendientes findUnique
   */
  export type reporteCitasPendientesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteCitasPendientes
     */
    select?: reporteCitasPendientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteCitasPendientesInclude<ExtArgs> | null
    /**
     * Filter, which reporteCitasPendientes to fetch.
     */
    where: reporteCitasPendientesWhereUniqueInput
  }


  /**
   * reporteCitasPendientes findUniqueOrThrow
   */
  export type reporteCitasPendientesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteCitasPendientes
     */
    select?: reporteCitasPendientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteCitasPendientesInclude<ExtArgs> | null
    /**
     * Filter, which reporteCitasPendientes to fetch.
     */
    where: reporteCitasPendientesWhereUniqueInput
  }


  /**
   * reporteCitasPendientes findFirst
   */
  export type reporteCitasPendientesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteCitasPendientes
     */
    select?: reporteCitasPendientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteCitasPendientesInclude<ExtArgs> | null
    /**
     * Filter, which reporteCitasPendientes to fetch.
     */
    where?: reporteCitasPendientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reporteCitasPendientes to fetch.
     */
    orderBy?: reporteCitasPendientesOrderByWithRelationInput | reporteCitasPendientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reporteCitasPendientes.
     */
    cursor?: reporteCitasPendientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reporteCitasPendientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reporteCitasPendientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reporteCitasPendientes.
     */
    distinct?: ReporteCitasPendientesScalarFieldEnum | ReporteCitasPendientesScalarFieldEnum[]
  }


  /**
   * reporteCitasPendientes findFirstOrThrow
   */
  export type reporteCitasPendientesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteCitasPendientes
     */
    select?: reporteCitasPendientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteCitasPendientesInclude<ExtArgs> | null
    /**
     * Filter, which reporteCitasPendientes to fetch.
     */
    where?: reporteCitasPendientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reporteCitasPendientes to fetch.
     */
    orderBy?: reporteCitasPendientesOrderByWithRelationInput | reporteCitasPendientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reporteCitasPendientes.
     */
    cursor?: reporteCitasPendientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reporteCitasPendientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reporteCitasPendientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reporteCitasPendientes.
     */
    distinct?: ReporteCitasPendientesScalarFieldEnum | ReporteCitasPendientesScalarFieldEnum[]
  }


  /**
   * reporteCitasPendientes findMany
   */
  export type reporteCitasPendientesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteCitasPendientes
     */
    select?: reporteCitasPendientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteCitasPendientesInclude<ExtArgs> | null
    /**
     * Filter, which reporteCitasPendientes to fetch.
     */
    where?: reporteCitasPendientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reporteCitasPendientes to fetch.
     */
    orderBy?: reporteCitasPendientesOrderByWithRelationInput | reporteCitasPendientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing reporteCitasPendientes.
     */
    cursor?: reporteCitasPendientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reporteCitasPendientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reporteCitasPendientes.
     */
    skip?: number
    distinct?: ReporteCitasPendientesScalarFieldEnum | ReporteCitasPendientesScalarFieldEnum[]
  }


  /**
   * reporteCitasPendientes create
   */
  export type reporteCitasPendientesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteCitasPendientes
     */
    select?: reporteCitasPendientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteCitasPendientesInclude<ExtArgs> | null
    /**
     * The data needed to create a reporteCitasPendientes.
     */
    data?: XOR<reporteCitasPendientesCreateInput, reporteCitasPendientesUncheckedCreateInput>
  }


  /**
   * reporteCitasPendientes createMany
   */
  export type reporteCitasPendientesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many reporteCitasPendientes.
     */
    data: reporteCitasPendientesCreateManyInput | reporteCitasPendientesCreateManyInput[]
  }


  /**
   * reporteCitasPendientes update
   */
  export type reporteCitasPendientesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteCitasPendientes
     */
    select?: reporteCitasPendientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteCitasPendientesInclude<ExtArgs> | null
    /**
     * The data needed to update a reporteCitasPendientes.
     */
    data: XOR<reporteCitasPendientesUpdateInput, reporteCitasPendientesUncheckedUpdateInput>
    /**
     * Choose, which reporteCitasPendientes to update.
     */
    where: reporteCitasPendientesWhereUniqueInput
  }


  /**
   * reporteCitasPendientes updateMany
   */
  export type reporteCitasPendientesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update reporteCitasPendientes.
     */
    data: XOR<reporteCitasPendientesUpdateManyMutationInput, reporteCitasPendientesUncheckedUpdateManyInput>
    /**
     * Filter which reporteCitasPendientes to update
     */
    where?: reporteCitasPendientesWhereInput
  }


  /**
   * reporteCitasPendientes upsert
   */
  export type reporteCitasPendientesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteCitasPendientes
     */
    select?: reporteCitasPendientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteCitasPendientesInclude<ExtArgs> | null
    /**
     * The filter to search for the reporteCitasPendientes to update in case it exists.
     */
    where: reporteCitasPendientesWhereUniqueInput
    /**
     * In case the reporteCitasPendientes found by the `where` argument doesn't exist, create a new reporteCitasPendientes with this data.
     */
    create: XOR<reporteCitasPendientesCreateInput, reporteCitasPendientesUncheckedCreateInput>
    /**
     * In case the reporteCitasPendientes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<reporteCitasPendientesUpdateInput, reporteCitasPendientesUncheckedUpdateInput>
  }


  /**
   * reporteCitasPendientes delete
   */
  export type reporteCitasPendientesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteCitasPendientes
     */
    select?: reporteCitasPendientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteCitasPendientesInclude<ExtArgs> | null
    /**
     * Filter which reporteCitasPendientes to delete.
     */
    where: reporteCitasPendientesWhereUniqueInput
  }


  /**
   * reporteCitasPendientes deleteMany
   */
  export type reporteCitasPendientesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reporteCitasPendientes to delete
     */
    where?: reporteCitasPendientesWhereInput
  }


  /**
   * reporteCitasPendientes.citas
   */
  export type reporteCitasPendientes$citasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasInclude<ExtArgs> | null
    where?: citasWhereInput
  }


  /**
   * reporteCitasPendientes.clientes
   */
  export type reporteCitasPendientes$clientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: clientesInclude<ExtArgs> | null
    where?: clientesWhereInput
  }


  /**
   * reporteCitasPendientes.estilistas
   */
  export type reporteCitasPendientes$estilistasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estilistas
     */
    select?: estilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: estilistasInclude<ExtArgs> | null
    where?: estilistasWhereInput
  }


  /**
   * reporteCitasPendientes without action
   */
  export type reporteCitasPendientesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteCitasPendientes
     */
    select?: reporteCitasPendientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteCitasPendientesInclude<ExtArgs> | null
  }



  /**
   * Model reporteClientesCitas
   */

  export type AggregateReporteClientesCitas = {
    _count: ReporteClientesCitasCountAggregateOutputType | null
    _avg: ReporteClientesCitasAvgAggregateOutputType | null
    _sum: ReporteClientesCitasSumAggregateOutputType | null
    _min: ReporteClientesCitasMinAggregateOutputType | null
    _max: ReporteClientesCitasMaxAggregateOutputType | null
  }

  export type ReporteClientesCitasAvgAggregateOutputType = {
    reporteID: number | null
    clienteID: number | null
    citaID: number | null
    servicioID: number | null
  }

  export type ReporteClientesCitasSumAggregateOutputType = {
    reporteID: number | null
    clienteID: number | null
    citaID: number | null
    servicioID: number | null
  }

  export type ReporteClientesCitasMinAggregateOutputType = {
    reporteID: number | null
    clienteID: number | null
    citaID: number | null
    nombreCliente: string | null
    fechaCita: Date | null
    servicioID: number | null
  }

  export type ReporteClientesCitasMaxAggregateOutputType = {
    reporteID: number | null
    clienteID: number | null
    citaID: number | null
    nombreCliente: string | null
    fechaCita: Date | null
    servicioID: number | null
  }

  export type ReporteClientesCitasCountAggregateOutputType = {
    reporteID: number
    clienteID: number
    citaID: number
    nombreCliente: number
    fechaCita: number
    servicioID: number
    _all: number
  }


  export type ReporteClientesCitasAvgAggregateInputType = {
    reporteID?: true
    clienteID?: true
    citaID?: true
    servicioID?: true
  }

  export type ReporteClientesCitasSumAggregateInputType = {
    reporteID?: true
    clienteID?: true
    citaID?: true
    servicioID?: true
  }

  export type ReporteClientesCitasMinAggregateInputType = {
    reporteID?: true
    clienteID?: true
    citaID?: true
    nombreCliente?: true
    fechaCita?: true
    servicioID?: true
  }

  export type ReporteClientesCitasMaxAggregateInputType = {
    reporteID?: true
    clienteID?: true
    citaID?: true
    nombreCliente?: true
    fechaCita?: true
    servicioID?: true
  }

  export type ReporteClientesCitasCountAggregateInputType = {
    reporteID?: true
    clienteID?: true
    citaID?: true
    nombreCliente?: true
    fechaCita?: true
    servicioID?: true
    _all?: true
  }

  export type ReporteClientesCitasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reporteClientesCitas to aggregate.
     */
    where?: reporteClientesCitasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reporteClientesCitas to fetch.
     */
    orderBy?: reporteClientesCitasOrderByWithRelationInput | reporteClientesCitasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: reporteClientesCitasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reporteClientesCitas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reporteClientesCitas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned reporteClientesCitas
    **/
    _count?: true | ReporteClientesCitasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReporteClientesCitasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReporteClientesCitasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReporteClientesCitasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReporteClientesCitasMaxAggregateInputType
  }

  export type GetReporteClientesCitasAggregateType<T extends ReporteClientesCitasAggregateArgs> = {
        [P in keyof T & keyof AggregateReporteClientesCitas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReporteClientesCitas[P]>
      : GetScalarType<T[P], AggregateReporteClientesCitas[P]>
  }




  export type reporteClientesCitasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reporteClientesCitasWhereInput
    orderBy?: reporteClientesCitasOrderByWithAggregationInput | reporteClientesCitasOrderByWithAggregationInput[]
    by: ReporteClientesCitasScalarFieldEnum[] | ReporteClientesCitasScalarFieldEnum
    having?: reporteClientesCitasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReporteClientesCitasCountAggregateInputType | true
    _avg?: ReporteClientesCitasAvgAggregateInputType
    _sum?: ReporteClientesCitasSumAggregateInputType
    _min?: ReporteClientesCitasMinAggregateInputType
    _max?: ReporteClientesCitasMaxAggregateInputType
  }

  export type ReporteClientesCitasGroupByOutputType = {
    reporteID: number
    clienteID: number | null
    citaID: number | null
    nombreCliente: string | null
    fechaCita: Date | null
    servicioID: number | null
    _count: ReporteClientesCitasCountAggregateOutputType | null
    _avg: ReporteClientesCitasAvgAggregateOutputType | null
    _sum: ReporteClientesCitasSumAggregateOutputType | null
    _min: ReporteClientesCitasMinAggregateOutputType | null
    _max: ReporteClientesCitasMaxAggregateOutputType | null
  }

  type GetReporteClientesCitasGroupByPayload<T extends reporteClientesCitasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReporteClientesCitasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReporteClientesCitasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReporteClientesCitasGroupByOutputType[P]>
            : GetScalarType<T[P], ReporteClientesCitasGroupByOutputType[P]>
        }
      >
    >


  export type reporteClientesCitasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    reporteID?: boolean
    clienteID?: boolean
    citaID?: boolean
    nombreCliente?: boolean
    fechaCita?: boolean
    servicioID?: boolean
    citas?: boolean | reporteClientesCitas$citasArgs<ExtArgs>
    clientes?: boolean | reporteClientesCitas$clientesArgs<ExtArgs>
    catalogo?: boolean | reporteClientesCitas$catalogoArgs<ExtArgs>
  }, ExtArgs["result"]["reporteClientesCitas"]>

  export type reporteClientesCitasSelectScalar = {
    reporteID?: boolean
    clienteID?: boolean
    citaID?: boolean
    nombreCliente?: boolean
    fechaCita?: boolean
    servicioID?: boolean
  }

  export type reporteClientesCitasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    citas?: boolean | reporteClientesCitas$citasArgs<ExtArgs>
    clientes?: boolean | reporteClientesCitas$clientesArgs<ExtArgs>
    catalogo?: boolean | reporteClientesCitas$catalogoArgs<ExtArgs>
  }


  export type $reporteClientesCitasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "reporteClientesCitas"
    objects: {
      citas: Prisma.$citasPayload<ExtArgs> | null
      clientes: Prisma.$clientesPayload<ExtArgs> | null
      catalogo: Prisma.$catalogoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      reporteID: number
      clienteID: number | null
      citaID: number | null
      nombreCliente: string | null
      fechaCita: Date | null
      servicioID: number | null
    }, ExtArgs["result"]["reporteClientesCitas"]>
    composites: {}
  }


  type reporteClientesCitasGetPayload<S extends boolean | null | undefined | reporteClientesCitasDefaultArgs> = $Result.GetResult<Prisma.$reporteClientesCitasPayload, S>

  type reporteClientesCitasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<reporteClientesCitasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ReporteClientesCitasCountAggregateInputType | true
    }

  export interface reporteClientesCitasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['reporteClientesCitas'], meta: { name: 'reporteClientesCitas' } }
    /**
     * Find zero or one ReporteClientesCitas that matches the filter.
     * @param {reporteClientesCitasFindUniqueArgs} args - Arguments to find a ReporteClientesCitas
     * @example
     * // Get one ReporteClientesCitas
     * const reporteClientesCitas = await prisma.reporteClientesCitas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends reporteClientesCitasFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, reporteClientesCitasFindUniqueArgs<ExtArgs>>
    ): Prisma__reporteClientesCitasClient<$Result.GetResult<Prisma.$reporteClientesCitasPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one ReporteClientesCitas that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {reporteClientesCitasFindUniqueOrThrowArgs} args - Arguments to find a ReporteClientesCitas
     * @example
     * // Get one ReporteClientesCitas
     * const reporteClientesCitas = await prisma.reporteClientesCitas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends reporteClientesCitasFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, reporteClientesCitasFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__reporteClientesCitasClient<$Result.GetResult<Prisma.$reporteClientesCitasPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first ReporteClientesCitas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reporteClientesCitasFindFirstArgs} args - Arguments to find a ReporteClientesCitas
     * @example
     * // Get one ReporteClientesCitas
     * const reporteClientesCitas = await prisma.reporteClientesCitas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends reporteClientesCitasFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, reporteClientesCitasFindFirstArgs<ExtArgs>>
    ): Prisma__reporteClientesCitasClient<$Result.GetResult<Prisma.$reporteClientesCitasPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first ReporteClientesCitas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reporteClientesCitasFindFirstOrThrowArgs} args - Arguments to find a ReporteClientesCitas
     * @example
     * // Get one ReporteClientesCitas
     * const reporteClientesCitas = await prisma.reporteClientesCitas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends reporteClientesCitasFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, reporteClientesCitasFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__reporteClientesCitasClient<$Result.GetResult<Prisma.$reporteClientesCitasPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more ReporteClientesCitas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reporteClientesCitasFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReporteClientesCitas
     * const reporteClientesCitas = await prisma.reporteClientesCitas.findMany()
     * 
     * // Get first 10 ReporteClientesCitas
     * const reporteClientesCitas = await prisma.reporteClientesCitas.findMany({ take: 10 })
     * 
     * // Only select the `reporteID`
     * const reporteClientesCitasWithReporteIDOnly = await prisma.reporteClientesCitas.findMany({ select: { reporteID: true } })
     * 
    **/
    findMany<T extends reporteClientesCitasFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, reporteClientesCitasFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reporteClientesCitasPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a ReporteClientesCitas.
     * @param {reporteClientesCitasCreateArgs} args - Arguments to create a ReporteClientesCitas.
     * @example
     * // Create one ReporteClientesCitas
     * const ReporteClientesCitas = await prisma.reporteClientesCitas.create({
     *   data: {
     *     // ... data to create a ReporteClientesCitas
     *   }
     * })
     * 
    **/
    create<T extends reporteClientesCitasCreateArgs<ExtArgs>>(
      args: SelectSubset<T, reporteClientesCitasCreateArgs<ExtArgs>>
    ): Prisma__reporteClientesCitasClient<$Result.GetResult<Prisma.$reporteClientesCitasPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many ReporteClientesCitas.
     *     @param {reporteClientesCitasCreateManyArgs} args - Arguments to create many ReporteClientesCitas.
     *     @example
     *     // Create many ReporteClientesCitas
     *     const reporteClientesCitas = await prisma.reporteClientesCitas.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends reporteClientesCitasCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, reporteClientesCitasCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ReporteClientesCitas.
     * @param {reporteClientesCitasDeleteArgs} args - Arguments to delete one ReporteClientesCitas.
     * @example
     * // Delete one ReporteClientesCitas
     * const ReporteClientesCitas = await prisma.reporteClientesCitas.delete({
     *   where: {
     *     // ... filter to delete one ReporteClientesCitas
     *   }
     * })
     * 
    **/
    delete<T extends reporteClientesCitasDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, reporteClientesCitasDeleteArgs<ExtArgs>>
    ): Prisma__reporteClientesCitasClient<$Result.GetResult<Prisma.$reporteClientesCitasPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one ReporteClientesCitas.
     * @param {reporteClientesCitasUpdateArgs} args - Arguments to update one ReporteClientesCitas.
     * @example
     * // Update one ReporteClientesCitas
     * const reporteClientesCitas = await prisma.reporteClientesCitas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends reporteClientesCitasUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, reporteClientesCitasUpdateArgs<ExtArgs>>
    ): Prisma__reporteClientesCitasClient<$Result.GetResult<Prisma.$reporteClientesCitasPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more ReporteClientesCitas.
     * @param {reporteClientesCitasDeleteManyArgs} args - Arguments to filter ReporteClientesCitas to delete.
     * @example
     * // Delete a few ReporteClientesCitas
     * const { count } = await prisma.reporteClientesCitas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends reporteClientesCitasDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, reporteClientesCitasDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReporteClientesCitas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reporteClientesCitasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReporteClientesCitas
     * const reporteClientesCitas = await prisma.reporteClientesCitas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends reporteClientesCitasUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, reporteClientesCitasUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ReporteClientesCitas.
     * @param {reporteClientesCitasUpsertArgs} args - Arguments to update or create a ReporteClientesCitas.
     * @example
     * // Update or create a ReporteClientesCitas
     * const reporteClientesCitas = await prisma.reporteClientesCitas.upsert({
     *   create: {
     *     // ... data to create a ReporteClientesCitas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReporteClientesCitas we want to update
     *   }
     * })
    **/
    upsert<T extends reporteClientesCitasUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, reporteClientesCitasUpsertArgs<ExtArgs>>
    ): Prisma__reporteClientesCitasClient<$Result.GetResult<Prisma.$reporteClientesCitasPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of ReporteClientesCitas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reporteClientesCitasCountArgs} args - Arguments to filter ReporteClientesCitas to count.
     * @example
     * // Count the number of ReporteClientesCitas
     * const count = await prisma.reporteClientesCitas.count({
     *   where: {
     *     // ... the filter for the ReporteClientesCitas we want to count
     *   }
     * })
    **/
    count<T extends reporteClientesCitasCountArgs>(
      args?: Subset<T, reporteClientesCitasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReporteClientesCitasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReporteClientesCitas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReporteClientesCitasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReporteClientesCitasAggregateArgs>(args: Subset<T, ReporteClientesCitasAggregateArgs>): Prisma.PrismaPromise<GetReporteClientesCitasAggregateType<T>>

    /**
     * Group by ReporteClientesCitas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reporteClientesCitasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends reporteClientesCitasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: reporteClientesCitasGroupByArgs['orderBy'] }
        : { orderBy?: reporteClientesCitasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, reporteClientesCitasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReporteClientesCitasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the reporteClientesCitas model
   */
  readonly fields: reporteClientesCitasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for reporteClientesCitas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__reporteClientesCitasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    citas<T extends reporteClientesCitas$citasArgs<ExtArgs> = {}>(args?: Subset<T, reporteClientesCitas$citasArgs<ExtArgs>>): Prisma__citasClient<$Result.GetResult<Prisma.$citasPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    clientes<T extends reporteClientesCitas$clientesArgs<ExtArgs> = {}>(args?: Subset<T, reporteClientesCitas$clientesArgs<ExtArgs>>): Prisma__clientesClient<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    catalogo<T extends reporteClientesCitas$catalogoArgs<ExtArgs> = {}>(args?: Subset<T, reporteClientesCitas$catalogoArgs<ExtArgs>>): Prisma__catalogoClient<$Result.GetResult<Prisma.$catalogoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the reporteClientesCitas model
   */ 
  interface reporteClientesCitasFieldRefs {
    readonly reporteID: FieldRef<"reporteClientesCitas", 'Int'>
    readonly clienteID: FieldRef<"reporteClientesCitas", 'Int'>
    readonly citaID: FieldRef<"reporteClientesCitas", 'Int'>
    readonly nombreCliente: FieldRef<"reporteClientesCitas", 'String'>
    readonly fechaCita: FieldRef<"reporteClientesCitas", 'DateTime'>
    readonly servicioID: FieldRef<"reporteClientesCitas", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * reporteClientesCitas findUnique
   */
  export type reporteClientesCitasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteClientesCitas
     */
    select?: reporteClientesCitasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteClientesCitasInclude<ExtArgs> | null
    /**
     * Filter, which reporteClientesCitas to fetch.
     */
    where: reporteClientesCitasWhereUniqueInput
  }


  /**
   * reporteClientesCitas findUniqueOrThrow
   */
  export type reporteClientesCitasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteClientesCitas
     */
    select?: reporteClientesCitasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteClientesCitasInclude<ExtArgs> | null
    /**
     * Filter, which reporteClientesCitas to fetch.
     */
    where: reporteClientesCitasWhereUniqueInput
  }


  /**
   * reporteClientesCitas findFirst
   */
  export type reporteClientesCitasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteClientesCitas
     */
    select?: reporteClientesCitasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteClientesCitasInclude<ExtArgs> | null
    /**
     * Filter, which reporteClientesCitas to fetch.
     */
    where?: reporteClientesCitasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reporteClientesCitas to fetch.
     */
    orderBy?: reporteClientesCitasOrderByWithRelationInput | reporteClientesCitasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reporteClientesCitas.
     */
    cursor?: reporteClientesCitasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reporteClientesCitas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reporteClientesCitas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reporteClientesCitas.
     */
    distinct?: ReporteClientesCitasScalarFieldEnum | ReporteClientesCitasScalarFieldEnum[]
  }


  /**
   * reporteClientesCitas findFirstOrThrow
   */
  export type reporteClientesCitasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteClientesCitas
     */
    select?: reporteClientesCitasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteClientesCitasInclude<ExtArgs> | null
    /**
     * Filter, which reporteClientesCitas to fetch.
     */
    where?: reporteClientesCitasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reporteClientesCitas to fetch.
     */
    orderBy?: reporteClientesCitasOrderByWithRelationInput | reporteClientesCitasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reporteClientesCitas.
     */
    cursor?: reporteClientesCitasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reporteClientesCitas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reporteClientesCitas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reporteClientesCitas.
     */
    distinct?: ReporteClientesCitasScalarFieldEnum | ReporteClientesCitasScalarFieldEnum[]
  }


  /**
   * reporteClientesCitas findMany
   */
  export type reporteClientesCitasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteClientesCitas
     */
    select?: reporteClientesCitasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteClientesCitasInclude<ExtArgs> | null
    /**
     * Filter, which reporteClientesCitas to fetch.
     */
    where?: reporteClientesCitasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reporteClientesCitas to fetch.
     */
    orderBy?: reporteClientesCitasOrderByWithRelationInput | reporteClientesCitasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing reporteClientesCitas.
     */
    cursor?: reporteClientesCitasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reporteClientesCitas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reporteClientesCitas.
     */
    skip?: number
    distinct?: ReporteClientesCitasScalarFieldEnum | ReporteClientesCitasScalarFieldEnum[]
  }


  /**
   * reporteClientesCitas create
   */
  export type reporteClientesCitasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteClientesCitas
     */
    select?: reporteClientesCitasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteClientesCitasInclude<ExtArgs> | null
    /**
     * The data needed to create a reporteClientesCitas.
     */
    data?: XOR<reporteClientesCitasCreateInput, reporteClientesCitasUncheckedCreateInput>
  }


  /**
   * reporteClientesCitas createMany
   */
  export type reporteClientesCitasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many reporteClientesCitas.
     */
    data: reporteClientesCitasCreateManyInput | reporteClientesCitasCreateManyInput[]
  }


  /**
   * reporteClientesCitas update
   */
  export type reporteClientesCitasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteClientesCitas
     */
    select?: reporteClientesCitasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteClientesCitasInclude<ExtArgs> | null
    /**
     * The data needed to update a reporteClientesCitas.
     */
    data: XOR<reporteClientesCitasUpdateInput, reporteClientesCitasUncheckedUpdateInput>
    /**
     * Choose, which reporteClientesCitas to update.
     */
    where: reporteClientesCitasWhereUniqueInput
  }


  /**
   * reporteClientesCitas updateMany
   */
  export type reporteClientesCitasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update reporteClientesCitas.
     */
    data: XOR<reporteClientesCitasUpdateManyMutationInput, reporteClientesCitasUncheckedUpdateManyInput>
    /**
     * Filter which reporteClientesCitas to update
     */
    where?: reporteClientesCitasWhereInput
  }


  /**
   * reporteClientesCitas upsert
   */
  export type reporteClientesCitasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteClientesCitas
     */
    select?: reporteClientesCitasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteClientesCitasInclude<ExtArgs> | null
    /**
     * The filter to search for the reporteClientesCitas to update in case it exists.
     */
    where: reporteClientesCitasWhereUniqueInput
    /**
     * In case the reporteClientesCitas found by the `where` argument doesn't exist, create a new reporteClientesCitas with this data.
     */
    create: XOR<reporteClientesCitasCreateInput, reporteClientesCitasUncheckedCreateInput>
    /**
     * In case the reporteClientesCitas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<reporteClientesCitasUpdateInput, reporteClientesCitasUncheckedUpdateInput>
  }


  /**
   * reporteClientesCitas delete
   */
  export type reporteClientesCitasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteClientesCitas
     */
    select?: reporteClientesCitasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteClientesCitasInclude<ExtArgs> | null
    /**
     * Filter which reporteClientesCitas to delete.
     */
    where: reporteClientesCitasWhereUniqueInput
  }


  /**
   * reporteClientesCitas deleteMany
   */
  export type reporteClientesCitasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reporteClientesCitas to delete
     */
    where?: reporteClientesCitasWhereInput
  }


  /**
   * reporteClientesCitas.citas
   */
  export type reporteClientesCitas$citasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the citas
     */
    select?: citasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: citasInclude<ExtArgs> | null
    where?: citasWhereInput
  }


  /**
   * reporteClientesCitas.clientes
   */
  export type reporteClientesCitas$clientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: clientesInclude<ExtArgs> | null
    where?: clientesWhereInput
  }


  /**
   * reporteClientesCitas.catalogo
   */
  export type reporteClientesCitas$catalogoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the catalogo
     */
    select?: catalogoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: catalogoInclude<ExtArgs> | null
    where?: catalogoWhereInput
  }


  /**
   * reporteClientesCitas without action
   */
  export type reporteClientesCitasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteClientesCitas
     */
    select?: reporteClientesCitasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteClientesCitasInclude<ExtArgs> | null
  }



  /**
   * Model reporteHorarioEstilistas
   */

  export type AggregateReporteHorarioEstilistas = {
    _count: ReporteHorarioEstilistasCountAggregateOutputType | null
    _avg: ReporteHorarioEstilistasAvgAggregateOutputType | null
    _sum: ReporteHorarioEstilistasSumAggregateOutputType | null
    _min: ReporteHorarioEstilistasMinAggregateOutputType | null
    _max: ReporteHorarioEstilistasMaxAggregateOutputType | null
  }

  export type ReporteHorarioEstilistasAvgAggregateOutputType = {
    reporteID: number | null
    estilistaID: number | null
  }

  export type ReporteHorarioEstilistasSumAggregateOutputType = {
    reporteID: number | null
    estilistaID: number | null
  }

  export type ReporteHorarioEstilistasMinAggregateOutputType = {
    reporteID: number | null
    estilistaID: number | null
    diaSemana: string | null
    horaInicio: Date | null
    horaFinal: Date | null
  }

  export type ReporteHorarioEstilistasMaxAggregateOutputType = {
    reporteID: number | null
    estilistaID: number | null
    diaSemana: string | null
    horaInicio: Date | null
    horaFinal: Date | null
  }

  export type ReporteHorarioEstilistasCountAggregateOutputType = {
    reporteID: number
    estilistaID: number
    diaSemana: number
    horaInicio: number
    horaFinal: number
    _all: number
  }


  export type ReporteHorarioEstilistasAvgAggregateInputType = {
    reporteID?: true
    estilistaID?: true
  }

  export type ReporteHorarioEstilistasSumAggregateInputType = {
    reporteID?: true
    estilistaID?: true
  }

  export type ReporteHorarioEstilistasMinAggregateInputType = {
    reporteID?: true
    estilistaID?: true
    diaSemana?: true
    horaInicio?: true
    horaFinal?: true
  }

  export type ReporteHorarioEstilistasMaxAggregateInputType = {
    reporteID?: true
    estilistaID?: true
    diaSemana?: true
    horaInicio?: true
    horaFinal?: true
  }

  export type ReporteHorarioEstilistasCountAggregateInputType = {
    reporteID?: true
    estilistaID?: true
    diaSemana?: true
    horaInicio?: true
    horaFinal?: true
    _all?: true
  }

  export type ReporteHorarioEstilistasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reporteHorarioEstilistas to aggregate.
     */
    where?: reporteHorarioEstilistasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reporteHorarioEstilistas to fetch.
     */
    orderBy?: reporteHorarioEstilistasOrderByWithRelationInput | reporteHorarioEstilistasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: reporteHorarioEstilistasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reporteHorarioEstilistas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reporteHorarioEstilistas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned reporteHorarioEstilistas
    **/
    _count?: true | ReporteHorarioEstilistasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReporteHorarioEstilistasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReporteHorarioEstilistasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReporteHorarioEstilistasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReporteHorarioEstilistasMaxAggregateInputType
  }

  export type GetReporteHorarioEstilistasAggregateType<T extends ReporteHorarioEstilistasAggregateArgs> = {
        [P in keyof T & keyof AggregateReporteHorarioEstilistas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReporteHorarioEstilistas[P]>
      : GetScalarType<T[P], AggregateReporteHorarioEstilistas[P]>
  }




  export type reporteHorarioEstilistasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reporteHorarioEstilistasWhereInput
    orderBy?: reporteHorarioEstilistasOrderByWithAggregationInput | reporteHorarioEstilistasOrderByWithAggregationInput[]
    by: ReporteHorarioEstilistasScalarFieldEnum[] | ReporteHorarioEstilistasScalarFieldEnum
    having?: reporteHorarioEstilistasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReporteHorarioEstilistasCountAggregateInputType | true
    _avg?: ReporteHorarioEstilistasAvgAggregateInputType
    _sum?: ReporteHorarioEstilistasSumAggregateInputType
    _min?: ReporteHorarioEstilistasMinAggregateInputType
    _max?: ReporteHorarioEstilistasMaxAggregateInputType
  }

  export type ReporteHorarioEstilistasGroupByOutputType = {
    reporteID: number
    estilistaID: number | null
    diaSemana: string | null
    horaInicio: Date | null
    horaFinal: Date | null
    _count: ReporteHorarioEstilistasCountAggregateOutputType | null
    _avg: ReporteHorarioEstilistasAvgAggregateOutputType | null
    _sum: ReporteHorarioEstilistasSumAggregateOutputType | null
    _min: ReporteHorarioEstilistasMinAggregateOutputType | null
    _max: ReporteHorarioEstilistasMaxAggregateOutputType | null
  }

  type GetReporteHorarioEstilistasGroupByPayload<T extends reporteHorarioEstilistasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReporteHorarioEstilistasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReporteHorarioEstilistasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReporteHorarioEstilistasGroupByOutputType[P]>
            : GetScalarType<T[P], ReporteHorarioEstilistasGroupByOutputType[P]>
        }
      >
    >


  export type reporteHorarioEstilistasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    reporteID?: boolean
    estilistaID?: boolean
    diaSemana?: boolean
    horaInicio?: boolean
    horaFinal?: boolean
    estilistas?: boolean | reporteHorarioEstilistas$estilistasArgs<ExtArgs>
  }, ExtArgs["result"]["reporteHorarioEstilistas"]>

  export type reporteHorarioEstilistasSelectScalar = {
    reporteID?: boolean
    estilistaID?: boolean
    diaSemana?: boolean
    horaInicio?: boolean
    horaFinal?: boolean
  }

  export type reporteHorarioEstilistasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estilistas?: boolean | reporteHorarioEstilistas$estilistasArgs<ExtArgs>
  }


  export type $reporteHorarioEstilistasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "reporteHorarioEstilistas"
    objects: {
      estilistas: Prisma.$estilistasPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      reporteID: number
      estilistaID: number | null
      diaSemana: string | null
      horaInicio: Date | null
      horaFinal: Date | null
    }, ExtArgs["result"]["reporteHorarioEstilistas"]>
    composites: {}
  }


  type reporteHorarioEstilistasGetPayload<S extends boolean | null | undefined | reporteHorarioEstilistasDefaultArgs> = $Result.GetResult<Prisma.$reporteHorarioEstilistasPayload, S>

  type reporteHorarioEstilistasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<reporteHorarioEstilistasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ReporteHorarioEstilistasCountAggregateInputType | true
    }

  export interface reporteHorarioEstilistasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['reporteHorarioEstilistas'], meta: { name: 'reporteHorarioEstilistas' } }
    /**
     * Find zero or one ReporteHorarioEstilistas that matches the filter.
     * @param {reporteHorarioEstilistasFindUniqueArgs} args - Arguments to find a ReporteHorarioEstilistas
     * @example
     * // Get one ReporteHorarioEstilistas
     * const reporteHorarioEstilistas = await prisma.reporteHorarioEstilistas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends reporteHorarioEstilistasFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, reporteHorarioEstilistasFindUniqueArgs<ExtArgs>>
    ): Prisma__reporteHorarioEstilistasClient<$Result.GetResult<Prisma.$reporteHorarioEstilistasPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one ReporteHorarioEstilistas that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {reporteHorarioEstilistasFindUniqueOrThrowArgs} args - Arguments to find a ReporteHorarioEstilistas
     * @example
     * // Get one ReporteHorarioEstilistas
     * const reporteHorarioEstilistas = await prisma.reporteHorarioEstilistas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends reporteHorarioEstilistasFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, reporteHorarioEstilistasFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__reporteHorarioEstilistasClient<$Result.GetResult<Prisma.$reporteHorarioEstilistasPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first ReporteHorarioEstilistas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reporteHorarioEstilistasFindFirstArgs} args - Arguments to find a ReporteHorarioEstilistas
     * @example
     * // Get one ReporteHorarioEstilistas
     * const reporteHorarioEstilistas = await prisma.reporteHorarioEstilistas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends reporteHorarioEstilistasFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, reporteHorarioEstilistasFindFirstArgs<ExtArgs>>
    ): Prisma__reporteHorarioEstilistasClient<$Result.GetResult<Prisma.$reporteHorarioEstilistasPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first ReporteHorarioEstilistas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reporteHorarioEstilistasFindFirstOrThrowArgs} args - Arguments to find a ReporteHorarioEstilistas
     * @example
     * // Get one ReporteHorarioEstilistas
     * const reporteHorarioEstilistas = await prisma.reporteHorarioEstilistas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends reporteHorarioEstilistasFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, reporteHorarioEstilistasFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__reporteHorarioEstilistasClient<$Result.GetResult<Prisma.$reporteHorarioEstilistasPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more ReporteHorarioEstilistas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reporteHorarioEstilistasFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReporteHorarioEstilistas
     * const reporteHorarioEstilistas = await prisma.reporteHorarioEstilistas.findMany()
     * 
     * // Get first 10 ReporteHorarioEstilistas
     * const reporteHorarioEstilistas = await prisma.reporteHorarioEstilistas.findMany({ take: 10 })
     * 
     * // Only select the `reporteID`
     * const reporteHorarioEstilistasWithReporteIDOnly = await prisma.reporteHorarioEstilistas.findMany({ select: { reporteID: true } })
     * 
    **/
    findMany<T extends reporteHorarioEstilistasFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, reporteHorarioEstilistasFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reporteHorarioEstilistasPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a ReporteHorarioEstilistas.
     * @param {reporteHorarioEstilistasCreateArgs} args - Arguments to create a ReporteHorarioEstilistas.
     * @example
     * // Create one ReporteHorarioEstilistas
     * const ReporteHorarioEstilistas = await prisma.reporteHorarioEstilistas.create({
     *   data: {
     *     // ... data to create a ReporteHorarioEstilistas
     *   }
     * })
     * 
    **/
    create<T extends reporteHorarioEstilistasCreateArgs<ExtArgs>>(
      args: SelectSubset<T, reporteHorarioEstilistasCreateArgs<ExtArgs>>
    ): Prisma__reporteHorarioEstilistasClient<$Result.GetResult<Prisma.$reporteHorarioEstilistasPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many ReporteHorarioEstilistas.
     *     @param {reporteHorarioEstilistasCreateManyArgs} args - Arguments to create many ReporteHorarioEstilistas.
     *     @example
     *     // Create many ReporteHorarioEstilistas
     *     const reporteHorarioEstilistas = await prisma.reporteHorarioEstilistas.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends reporteHorarioEstilistasCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, reporteHorarioEstilistasCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ReporteHorarioEstilistas.
     * @param {reporteHorarioEstilistasDeleteArgs} args - Arguments to delete one ReporteHorarioEstilistas.
     * @example
     * // Delete one ReporteHorarioEstilistas
     * const ReporteHorarioEstilistas = await prisma.reporteHorarioEstilistas.delete({
     *   where: {
     *     // ... filter to delete one ReporteHorarioEstilistas
     *   }
     * })
     * 
    **/
    delete<T extends reporteHorarioEstilistasDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, reporteHorarioEstilistasDeleteArgs<ExtArgs>>
    ): Prisma__reporteHorarioEstilistasClient<$Result.GetResult<Prisma.$reporteHorarioEstilistasPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one ReporteHorarioEstilistas.
     * @param {reporteHorarioEstilistasUpdateArgs} args - Arguments to update one ReporteHorarioEstilistas.
     * @example
     * // Update one ReporteHorarioEstilistas
     * const reporteHorarioEstilistas = await prisma.reporteHorarioEstilistas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends reporteHorarioEstilistasUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, reporteHorarioEstilistasUpdateArgs<ExtArgs>>
    ): Prisma__reporteHorarioEstilistasClient<$Result.GetResult<Prisma.$reporteHorarioEstilistasPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more ReporteHorarioEstilistas.
     * @param {reporteHorarioEstilistasDeleteManyArgs} args - Arguments to filter ReporteHorarioEstilistas to delete.
     * @example
     * // Delete a few ReporteHorarioEstilistas
     * const { count } = await prisma.reporteHorarioEstilistas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends reporteHorarioEstilistasDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, reporteHorarioEstilistasDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReporteHorarioEstilistas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reporteHorarioEstilistasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReporteHorarioEstilistas
     * const reporteHorarioEstilistas = await prisma.reporteHorarioEstilistas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends reporteHorarioEstilistasUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, reporteHorarioEstilistasUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ReporteHorarioEstilistas.
     * @param {reporteHorarioEstilistasUpsertArgs} args - Arguments to update or create a ReporteHorarioEstilistas.
     * @example
     * // Update or create a ReporteHorarioEstilistas
     * const reporteHorarioEstilistas = await prisma.reporteHorarioEstilistas.upsert({
     *   create: {
     *     // ... data to create a ReporteHorarioEstilistas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReporteHorarioEstilistas we want to update
     *   }
     * })
    **/
    upsert<T extends reporteHorarioEstilistasUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, reporteHorarioEstilistasUpsertArgs<ExtArgs>>
    ): Prisma__reporteHorarioEstilistasClient<$Result.GetResult<Prisma.$reporteHorarioEstilistasPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of ReporteHorarioEstilistas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reporteHorarioEstilistasCountArgs} args - Arguments to filter ReporteHorarioEstilistas to count.
     * @example
     * // Count the number of ReporteHorarioEstilistas
     * const count = await prisma.reporteHorarioEstilistas.count({
     *   where: {
     *     // ... the filter for the ReporteHorarioEstilistas we want to count
     *   }
     * })
    **/
    count<T extends reporteHorarioEstilistasCountArgs>(
      args?: Subset<T, reporteHorarioEstilistasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReporteHorarioEstilistasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReporteHorarioEstilistas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReporteHorarioEstilistasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReporteHorarioEstilistasAggregateArgs>(args: Subset<T, ReporteHorarioEstilistasAggregateArgs>): Prisma.PrismaPromise<GetReporteHorarioEstilistasAggregateType<T>>

    /**
     * Group by ReporteHorarioEstilistas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reporteHorarioEstilistasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends reporteHorarioEstilistasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: reporteHorarioEstilistasGroupByArgs['orderBy'] }
        : { orderBy?: reporteHorarioEstilistasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, reporteHorarioEstilistasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReporteHorarioEstilistasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the reporteHorarioEstilistas model
   */
  readonly fields: reporteHorarioEstilistasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for reporteHorarioEstilistas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__reporteHorarioEstilistasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    estilistas<T extends reporteHorarioEstilistas$estilistasArgs<ExtArgs> = {}>(args?: Subset<T, reporteHorarioEstilistas$estilistasArgs<ExtArgs>>): Prisma__estilistasClient<$Result.GetResult<Prisma.$estilistasPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the reporteHorarioEstilistas model
   */ 
  interface reporteHorarioEstilistasFieldRefs {
    readonly reporteID: FieldRef<"reporteHorarioEstilistas", 'Int'>
    readonly estilistaID: FieldRef<"reporteHorarioEstilistas", 'Int'>
    readonly diaSemana: FieldRef<"reporteHorarioEstilistas", 'String'>
    readonly horaInicio: FieldRef<"reporteHorarioEstilistas", 'DateTime'>
    readonly horaFinal: FieldRef<"reporteHorarioEstilistas", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * reporteHorarioEstilistas findUnique
   */
  export type reporteHorarioEstilistasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteHorarioEstilistas
     */
    select?: reporteHorarioEstilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteHorarioEstilistasInclude<ExtArgs> | null
    /**
     * Filter, which reporteHorarioEstilistas to fetch.
     */
    where: reporteHorarioEstilistasWhereUniqueInput
  }


  /**
   * reporteHorarioEstilistas findUniqueOrThrow
   */
  export type reporteHorarioEstilistasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteHorarioEstilistas
     */
    select?: reporteHorarioEstilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteHorarioEstilistasInclude<ExtArgs> | null
    /**
     * Filter, which reporteHorarioEstilistas to fetch.
     */
    where: reporteHorarioEstilistasWhereUniqueInput
  }


  /**
   * reporteHorarioEstilistas findFirst
   */
  export type reporteHorarioEstilistasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteHorarioEstilistas
     */
    select?: reporteHorarioEstilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteHorarioEstilistasInclude<ExtArgs> | null
    /**
     * Filter, which reporteHorarioEstilistas to fetch.
     */
    where?: reporteHorarioEstilistasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reporteHorarioEstilistas to fetch.
     */
    orderBy?: reporteHorarioEstilistasOrderByWithRelationInput | reporteHorarioEstilistasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reporteHorarioEstilistas.
     */
    cursor?: reporteHorarioEstilistasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reporteHorarioEstilistas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reporteHorarioEstilistas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reporteHorarioEstilistas.
     */
    distinct?: ReporteHorarioEstilistasScalarFieldEnum | ReporteHorarioEstilistasScalarFieldEnum[]
  }


  /**
   * reporteHorarioEstilistas findFirstOrThrow
   */
  export type reporteHorarioEstilistasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteHorarioEstilistas
     */
    select?: reporteHorarioEstilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteHorarioEstilistasInclude<ExtArgs> | null
    /**
     * Filter, which reporteHorarioEstilistas to fetch.
     */
    where?: reporteHorarioEstilistasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reporteHorarioEstilistas to fetch.
     */
    orderBy?: reporteHorarioEstilistasOrderByWithRelationInput | reporteHorarioEstilistasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reporteHorarioEstilistas.
     */
    cursor?: reporteHorarioEstilistasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reporteHorarioEstilistas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reporteHorarioEstilistas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reporteHorarioEstilistas.
     */
    distinct?: ReporteHorarioEstilistasScalarFieldEnum | ReporteHorarioEstilistasScalarFieldEnum[]
  }


  /**
   * reporteHorarioEstilistas findMany
   */
  export type reporteHorarioEstilistasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteHorarioEstilistas
     */
    select?: reporteHorarioEstilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteHorarioEstilistasInclude<ExtArgs> | null
    /**
     * Filter, which reporteHorarioEstilistas to fetch.
     */
    where?: reporteHorarioEstilistasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reporteHorarioEstilistas to fetch.
     */
    orderBy?: reporteHorarioEstilistasOrderByWithRelationInput | reporteHorarioEstilistasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing reporteHorarioEstilistas.
     */
    cursor?: reporteHorarioEstilistasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reporteHorarioEstilistas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reporteHorarioEstilistas.
     */
    skip?: number
    distinct?: ReporteHorarioEstilistasScalarFieldEnum | ReporteHorarioEstilistasScalarFieldEnum[]
  }


  /**
   * reporteHorarioEstilistas create
   */
  export type reporteHorarioEstilistasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteHorarioEstilistas
     */
    select?: reporteHorarioEstilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteHorarioEstilistasInclude<ExtArgs> | null
    /**
     * The data needed to create a reporteHorarioEstilistas.
     */
    data?: XOR<reporteHorarioEstilistasCreateInput, reporteHorarioEstilistasUncheckedCreateInput>
  }


  /**
   * reporteHorarioEstilistas createMany
   */
  export type reporteHorarioEstilistasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many reporteHorarioEstilistas.
     */
    data: reporteHorarioEstilistasCreateManyInput | reporteHorarioEstilistasCreateManyInput[]
  }


  /**
   * reporteHorarioEstilistas update
   */
  export type reporteHorarioEstilistasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteHorarioEstilistas
     */
    select?: reporteHorarioEstilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteHorarioEstilistasInclude<ExtArgs> | null
    /**
     * The data needed to update a reporteHorarioEstilistas.
     */
    data: XOR<reporteHorarioEstilistasUpdateInput, reporteHorarioEstilistasUncheckedUpdateInput>
    /**
     * Choose, which reporteHorarioEstilistas to update.
     */
    where: reporteHorarioEstilistasWhereUniqueInput
  }


  /**
   * reporteHorarioEstilistas updateMany
   */
  export type reporteHorarioEstilistasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update reporteHorarioEstilistas.
     */
    data: XOR<reporteHorarioEstilistasUpdateManyMutationInput, reporteHorarioEstilistasUncheckedUpdateManyInput>
    /**
     * Filter which reporteHorarioEstilistas to update
     */
    where?: reporteHorarioEstilistasWhereInput
  }


  /**
   * reporteHorarioEstilistas upsert
   */
  export type reporteHorarioEstilistasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteHorarioEstilistas
     */
    select?: reporteHorarioEstilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteHorarioEstilistasInclude<ExtArgs> | null
    /**
     * The filter to search for the reporteHorarioEstilistas to update in case it exists.
     */
    where: reporteHorarioEstilistasWhereUniqueInput
    /**
     * In case the reporteHorarioEstilistas found by the `where` argument doesn't exist, create a new reporteHorarioEstilistas with this data.
     */
    create: XOR<reporteHorarioEstilistasCreateInput, reporteHorarioEstilistasUncheckedCreateInput>
    /**
     * In case the reporteHorarioEstilistas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<reporteHorarioEstilistasUpdateInput, reporteHorarioEstilistasUncheckedUpdateInput>
  }


  /**
   * reporteHorarioEstilistas delete
   */
  export type reporteHorarioEstilistasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteHorarioEstilistas
     */
    select?: reporteHorarioEstilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteHorarioEstilistasInclude<ExtArgs> | null
    /**
     * Filter which reporteHorarioEstilistas to delete.
     */
    where: reporteHorarioEstilistasWhereUniqueInput
  }


  /**
   * reporteHorarioEstilistas deleteMany
   */
  export type reporteHorarioEstilistasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reporteHorarioEstilistas to delete
     */
    where?: reporteHorarioEstilistasWhereInput
  }


  /**
   * reporteHorarioEstilistas.estilistas
   */
  export type reporteHorarioEstilistas$estilistasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estilistas
     */
    select?: estilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: estilistasInclude<ExtArgs> | null
    where?: estilistasWhereInput
  }


  /**
   * reporteHorarioEstilistas without action
   */
  export type reporteHorarioEstilistasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reporteHorarioEstilistas
     */
    select?: reporteHorarioEstilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: reporteHorarioEstilistasInclude<ExtArgs> | null
  }



  /**
   * Model roles
   */

  export type AggregateRoles = {
    _count: RolesCountAggregateOutputType | null
    _avg: RolesAvgAggregateOutputType | null
    _sum: RolesSumAggregateOutputType | null
    _min: RolesMinAggregateOutputType | null
    _max: RolesMaxAggregateOutputType | null
  }

  export type RolesAvgAggregateOutputType = {
    rolID: number | null
  }

  export type RolesSumAggregateOutputType = {
    rolID: number | null
  }

  export type RolesMinAggregateOutputType = {
    rolID: number | null
    nombreRol: string | null
  }

  export type RolesMaxAggregateOutputType = {
    rolID: number | null
    nombreRol: string | null
  }

  export type RolesCountAggregateOutputType = {
    rolID: number
    nombreRol: number
    _all: number
  }


  export type RolesAvgAggregateInputType = {
    rolID?: true
  }

  export type RolesSumAggregateInputType = {
    rolID?: true
  }

  export type RolesMinAggregateInputType = {
    rolID?: true
    nombreRol?: true
  }

  export type RolesMaxAggregateInputType = {
    rolID?: true
    nombreRol?: true
  }

  export type RolesCountAggregateInputType = {
    rolID?: true
    nombreRol?: true
    _all?: true
  }

  export type RolesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which roles to aggregate.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned roles
    **/
    _count?: true | RolesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RolesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RolesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RolesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RolesMaxAggregateInputType
  }

  export type GetRolesAggregateType<T extends RolesAggregateArgs> = {
        [P in keyof T & keyof AggregateRoles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRoles[P]>
      : GetScalarType<T[P], AggregateRoles[P]>
  }




  export type rolesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: rolesWhereInput
    orderBy?: rolesOrderByWithAggregationInput | rolesOrderByWithAggregationInput[]
    by: RolesScalarFieldEnum[] | RolesScalarFieldEnum
    having?: rolesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RolesCountAggregateInputType | true
    _avg?: RolesAvgAggregateInputType
    _sum?: RolesSumAggregateInputType
    _min?: RolesMinAggregateInputType
    _max?: RolesMaxAggregateInputType
  }

  export type RolesGroupByOutputType = {
    rolID: number
    nombreRol: string | null
    _count: RolesCountAggregateOutputType | null
    _avg: RolesAvgAggregateOutputType | null
    _sum: RolesSumAggregateOutputType | null
    _min: RolesMinAggregateOutputType | null
    _max: RolesMaxAggregateOutputType | null
  }

  type GetRolesGroupByPayload<T extends rolesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RolesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RolesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RolesGroupByOutputType[P]>
            : GetScalarType<T[P], RolesGroupByOutputType[P]>
        }
      >
    >


  export type rolesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    rolID?: boolean
    nombreRol?: boolean
    administradores?: boolean | roles$administradoresArgs<ExtArgs>
    clientes?: boolean | roles$clientesArgs<ExtArgs>
    estilistas?: boolean | roles$estilistasArgs<ExtArgs>
    _count?: boolean | RolesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["roles"]>

  export type rolesSelectScalar = {
    rolID?: boolean
    nombreRol?: boolean
  }

  export type rolesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    administradores?: boolean | roles$administradoresArgs<ExtArgs>
    clientes?: boolean | roles$clientesArgs<ExtArgs>
    estilistas?: boolean | roles$estilistasArgs<ExtArgs>
    _count?: boolean | RolesCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $rolesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "roles"
    objects: {
      administradores: Prisma.$administradoresPayload<ExtArgs>[]
      clientes: Prisma.$clientesPayload<ExtArgs>[]
      estilistas: Prisma.$estilistasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      rolID: number
      nombreRol: string | null
    }, ExtArgs["result"]["roles"]>
    composites: {}
  }


  type rolesGetPayload<S extends boolean | null | undefined | rolesDefaultArgs> = $Result.GetResult<Prisma.$rolesPayload, S>

  type rolesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<rolesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RolesCountAggregateInputType | true
    }

  export interface rolesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['roles'], meta: { name: 'roles' } }
    /**
     * Find zero or one Roles that matches the filter.
     * @param {rolesFindUniqueArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends rolesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, rolesFindUniqueArgs<ExtArgs>>
    ): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Roles that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {rolesFindUniqueOrThrowArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends rolesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, rolesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesFindFirstArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends rolesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, rolesFindFirstArgs<ExtArgs>>
    ): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Roles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesFindFirstOrThrowArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends rolesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, rolesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles
     * const roles = await prisma.roles.findMany()
     * 
     * // Get first 10 Roles
     * const roles = await prisma.roles.findMany({ take: 10 })
     * 
     * // Only select the `rolID`
     * const rolesWithRolIDOnly = await prisma.roles.findMany({ select: { rolID: true } })
     * 
    **/
    findMany<T extends rolesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, rolesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Roles.
     * @param {rolesCreateArgs} args - Arguments to create a Roles.
     * @example
     * // Create one Roles
     * const Roles = await prisma.roles.create({
     *   data: {
     *     // ... data to create a Roles
     *   }
     * })
     * 
    **/
    create<T extends rolesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, rolesCreateArgs<ExtArgs>>
    ): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Roles.
     *     @param {rolesCreateManyArgs} args - Arguments to create many Roles.
     *     @example
     *     // Create many Roles
     *     const roles = await prisma.roles.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends rolesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, rolesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Roles.
     * @param {rolesDeleteArgs} args - Arguments to delete one Roles.
     * @example
     * // Delete one Roles
     * const Roles = await prisma.roles.delete({
     *   where: {
     *     // ... filter to delete one Roles
     *   }
     * })
     * 
    **/
    delete<T extends rolesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, rolesDeleteArgs<ExtArgs>>
    ): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Roles.
     * @param {rolesUpdateArgs} args - Arguments to update one Roles.
     * @example
     * // Update one Roles
     * const roles = await prisma.roles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends rolesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, rolesUpdateArgs<ExtArgs>>
    ): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Roles.
     * @param {rolesDeleteManyArgs} args - Arguments to filter Roles to delete.
     * @example
     * // Delete a few Roles
     * const { count } = await prisma.roles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends rolesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, rolesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles
     * const roles = await prisma.roles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends rolesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, rolesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Roles.
     * @param {rolesUpsertArgs} args - Arguments to update or create a Roles.
     * @example
     * // Update or create a Roles
     * const roles = await prisma.roles.upsert({
     *   create: {
     *     // ... data to create a Roles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Roles we want to update
     *   }
     * })
    **/
    upsert<T extends rolesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, rolesUpsertArgs<ExtArgs>>
    ): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesCountArgs} args - Arguments to filter Roles to count.
     * @example
     * // Count the number of Roles
     * const count = await prisma.roles.count({
     *   where: {
     *     // ... the filter for the Roles we want to count
     *   }
     * })
    **/
    count<T extends rolesCountArgs>(
      args?: Subset<T, rolesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RolesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RolesAggregateArgs>(args: Subset<T, RolesAggregateArgs>): Prisma.PrismaPromise<GetRolesAggregateType<T>>

    /**
     * Group by Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends rolesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: rolesGroupByArgs['orderBy'] }
        : { orderBy?: rolesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, rolesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRolesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the roles model
   */
  readonly fields: rolesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for roles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__rolesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    administradores<T extends roles$administradoresArgs<ExtArgs> = {}>(args?: Subset<T, roles$administradoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$administradoresPayload<ExtArgs>, T, 'findMany'> | Null>;

    clientes<T extends roles$clientesArgs<ExtArgs> = {}>(args?: Subset<T, roles$clientesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$clientesPayload<ExtArgs>, T, 'findMany'> | Null>;

    estilistas<T extends roles$estilistasArgs<ExtArgs> = {}>(args?: Subset<T, roles$estilistasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estilistasPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the roles model
   */ 
  interface rolesFieldRefs {
    readonly rolID: FieldRef<"roles", 'Int'>
    readonly nombreRol: FieldRef<"roles", 'String'>
  }
    

  // Custom InputTypes

  /**
   * roles findUnique
   */
  export type rolesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where: rolesWhereUniqueInput
  }


  /**
   * roles findUniqueOrThrow
   */
  export type rolesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where: rolesWhereUniqueInput
  }


  /**
   * roles findFirst
   */
  export type rolesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for roles.
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of roles.
     */
    distinct?: RolesScalarFieldEnum | RolesScalarFieldEnum[]
  }


  /**
   * roles findFirstOrThrow
   */
  export type rolesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for roles.
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of roles.
     */
    distinct?: RolesScalarFieldEnum | RolesScalarFieldEnum[]
  }


  /**
   * roles findMany
   */
  export type rolesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing roles.
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    distinct?: RolesScalarFieldEnum | RolesScalarFieldEnum[]
  }


  /**
   * roles create
   */
  export type rolesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * The data needed to create a roles.
     */
    data?: XOR<rolesCreateInput, rolesUncheckedCreateInput>
  }


  /**
   * roles createMany
   */
  export type rolesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many roles.
     */
    data: rolesCreateManyInput | rolesCreateManyInput[]
  }


  /**
   * roles update
   */
  export type rolesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * The data needed to update a roles.
     */
    data: XOR<rolesUpdateInput, rolesUncheckedUpdateInput>
    /**
     * Choose, which roles to update.
     */
    where: rolesWhereUniqueInput
  }


  /**
   * roles updateMany
   */
  export type rolesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update roles.
     */
    data: XOR<rolesUpdateManyMutationInput, rolesUncheckedUpdateManyInput>
    /**
     * Filter which roles to update
     */
    where?: rolesWhereInput
  }


  /**
   * roles upsert
   */
  export type rolesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * The filter to search for the roles to update in case it exists.
     */
    where: rolesWhereUniqueInput
    /**
     * In case the roles found by the `where` argument doesn't exist, create a new roles with this data.
     */
    create: XOR<rolesCreateInput, rolesUncheckedCreateInput>
    /**
     * In case the roles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<rolesUpdateInput, rolesUncheckedUpdateInput>
  }


  /**
   * roles delete
   */
  export type rolesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter which roles to delete.
     */
    where: rolesWhereUniqueInput
  }


  /**
   * roles deleteMany
   */
  export type rolesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which roles to delete
     */
    where?: rolesWhereInput
  }


  /**
   * roles.administradores
   */
  export type roles$administradoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administradores
     */
    select?: administradoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: administradoresInclude<ExtArgs> | null
    where?: administradoresWhereInput
    orderBy?: administradoresOrderByWithRelationInput | administradoresOrderByWithRelationInput[]
    cursor?: administradoresWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AdministradoresScalarFieldEnum | AdministradoresScalarFieldEnum[]
  }


  /**
   * roles.clientes
   */
  export type roles$clientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clientes
     */
    select?: clientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: clientesInclude<ExtArgs> | null
    where?: clientesWhereInput
    orderBy?: clientesOrderByWithRelationInput | clientesOrderByWithRelationInput[]
    cursor?: clientesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClientesScalarFieldEnum | ClientesScalarFieldEnum[]
  }


  /**
   * roles.estilistas
   */
  export type roles$estilistasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estilistas
     */
    select?: estilistasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: estilistasInclude<ExtArgs> | null
    where?: estilistasWhereInput
    orderBy?: estilistasOrderByWithRelationInput | estilistasOrderByWithRelationInput[]
    cursor?: estilistasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EstilistasScalarFieldEnum | EstilistasScalarFieldEnum[]
  }


  /**
   * roles without action
   */
  export type rolesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: rolesInclude<ExtArgs> | null
  }



  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable',
    Snapshot: 'Snapshot'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const AdministradoresScalarFieldEnum: {
    adminID: 'adminID',
    nombre: 'nombre',
    apellidos: 'apellidos',
    correo: 'correo',
    contrase_a: 'contrase_a',
    rolID: 'rolID'
  };

  export type AdministradoresScalarFieldEnum = (typeof AdministradoresScalarFieldEnum)[keyof typeof AdministradoresScalarFieldEnum]


  export const BloqueoHorariosScalarFieldEnum: {
    bloqueoID: 'bloqueoID',
    estilistaID: 'estilistaID',
    dia: 'dia',
    horaInicio: 'horaInicio',
    horaFinal: 'horaFinal',
    motivo: 'motivo'
  };

  export type BloqueoHorariosScalarFieldEnum = (typeof BloqueoHorariosScalarFieldEnum)[keyof typeof BloqueoHorariosScalarFieldEnum]


  export const CatalogoScalarFieldEnum: {
    servicioID: 'servicioID',
    nombreServicio: 'nombreServicio',
    descripcion: 'descripcion',
    precio: 'precio'
  };

  export type CatalogoScalarFieldEnum = (typeof CatalogoScalarFieldEnum)[keyof typeof CatalogoScalarFieldEnum]


  export const CitasScalarFieldEnum: {
    citaID: 'citaID',
    clienteID: 'clienteID',
    estilistaID: 'estilistaID',
    servicioID: 'servicioID',
    fechaCita: 'fechaCita',
    estiloID: 'estiloID',
    comentarios: 'comentarios'
  };

  export type CitasScalarFieldEnum = (typeof CitasScalarFieldEnum)[keyof typeof CitasScalarFieldEnum]


  export const CitasReagendadasScalarFieldEnum: {
    reagendadaID: 'reagendadaID',
    citaID: 'citaID',
    idCitaNueva: 'idCitaNueva',
    fechaNuevaCita: 'fechaNuevaCita',
    motivo: 'motivo'
  };

  export type CitasReagendadasScalarFieldEnum = (typeof CitasReagendadasScalarFieldEnum)[keyof typeof CitasReagendadasScalarFieldEnum]


  export const ClientesScalarFieldEnum: {
    clienteID: 'clienteID',
    nombre: 'nombre',
    apellidos: 'apellidos',
    correo: 'correo',
    telefono: 'telefono',
    direccion: 'direccion',
    puntosGanados: 'puntosGanados',
    puntosCanjeados: 'puntosCanjeados',
    contrase_a: 'contrase_a',
    rolID: 'rolID',
    estado: 'estado'
  };

  export type ClientesScalarFieldEnum = (typeof ClientesScalarFieldEnum)[keyof typeof ClientesScalarFieldEnum]


  export const DetalleServicioScalarFieldEnum: {
    detalleID: 'detalleID',
    servicioID: 'servicioID',
    tiempoEstimado: 'tiempoEstimado'
  };

  export type DetalleServicioScalarFieldEnum = (typeof DetalleServicioScalarFieldEnum)[keyof typeof DetalleServicioScalarFieldEnum]


  export const DisponibilidadTiempoRealScalarFieldEnum: {
    disponibilidadID: 'disponibilidadID',
    estilistaID: 'estilistaID',
    diaSemana: 'diaSemana',
    horaInicio: 'horaInicio',
    horaFinal: 'horaFinal'
  };

  export type DisponibilidadTiempoRealScalarFieldEnum = (typeof DisponibilidadTiempoRealScalarFieldEnum)[keyof typeof DisponibilidadTiempoRealScalarFieldEnum]


  export const EstilistasScalarFieldEnum: {
    estilistaID: 'estilistaID',
    nombre: 'nombre',
    apellidos: 'apellidos',
    telefono: 'telefono',
    direccion: 'direccion',
    fechaIngreso: 'fechaIngreso',
    fechaSalida: 'fechaSalida',
    correo: 'correo',
    contrase_a: 'contrase_a',
    rolID: 'rolID',
    estado: 'estado'
  };

  export type EstilistasScalarFieldEnum = (typeof EstilistasScalarFieldEnum)[keyof typeof EstilistasScalarFieldEnum]


  export const GaleriaEstilosScalarFieldEnum: {
    estiloID: 'estiloID',
    nombreEstilo: 'nombreEstilo',
    rutaImagen: 'rutaImagen'
  };

  export type GaleriaEstilosScalarFieldEnum = (typeof GaleriaEstilosScalarFieldEnum)[keyof typeof GaleriaEstilosScalarFieldEnum]


  export const HistorialCitasScalarFieldEnum: {
    historialID: 'historialID',
    citaID: 'citaID',
    clienteID: 'clienteID',
    estilistaID: 'estilistaID',
    fechaCita: 'fechaCita',
    servicioID: 'servicioID'
  };

  export type HistorialCitasScalarFieldEnum = (typeof HistorialCitasScalarFieldEnum)[keyof typeof HistorialCitasScalarFieldEnum]


  export const HistorialClientesScalarFieldEnum: {
    historialID: 'historialID',
    clienteID: 'clienteID',
    nombreCliente: 'nombreCliente',
    fechaRegistro: 'fechaRegistro',
    ultimoServicioID: 'ultimoServicioID'
  };

  export type HistorialClientesScalarFieldEnum = (typeof HistorialClientesScalarFieldEnum)[keyof typeof HistorialClientesScalarFieldEnum]


  export const HistorialCuentaScalarFieldEnum: {
    historialID: 'historialID',
    clienteID: 'clienteID',
    serviciosUtilizados: 'serviciosUtilizados',
    ultimaConexion: 'ultimaConexion'
  };

  export type HistorialCuentaScalarFieldEnum = (typeof HistorialCuentaScalarFieldEnum)[keyof typeof HistorialCuentaScalarFieldEnum]


  export const HistorialGastoPuntosScalarFieldEnum: {
    gastoID: 'gastoID',
    clienteID: 'clienteID',
    puntosGastados: 'puntosGastados',
    fecha: 'fecha',
    descripcionGasto: 'descripcionGasto'
  };

  export type HistorialGastoPuntosScalarFieldEnum = (typeof HistorialGastoPuntosScalarFieldEnum)[keyof typeof HistorialGastoPuntosScalarFieldEnum]


  export const PuntosClientesScalarFieldEnum: {
    puntosID: 'puntosID',
    clienteID: 'clienteID',
    saldoPuntos: 'saldoPuntos'
  };

  export type PuntosClientesScalarFieldEnum = (typeof PuntosClientesScalarFieldEnum)[keyof typeof PuntosClientesScalarFieldEnum]


  export const RecompensasScalarFieldEnum: {
    recompensaID: 'recompensaID',
    servicioID: 'servicioID',
    puntosRecompensa: 'puntosRecompensa'
  };

  export type RecompensasScalarFieldEnum = (typeof RecompensasScalarFieldEnum)[keyof typeof RecompensasScalarFieldEnum]


  export const ReporteCitasPendientesScalarFieldEnum: {
    reporteID: 'reporteID',
    citaID: 'citaID',
    clienteID: 'clienteID',
    fechaCita: 'fechaCita',
    estilistaID: 'estilistaID'
  };

  export type ReporteCitasPendientesScalarFieldEnum = (typeof ReporteCitasPendientesScalarFieldEnum)[keyof typeof ReporteCitasPendientesScalarFieldEnum]


  export const ReporteClientesCitasScalarFieldEnum: {
    reporteID: 'reporteID',
    clienteID: 'clienteID',
    citaID: 'citaID',
    nombreCliente: 'nombreCliente',
    fechaCita: 'fechaCita',
    servicioID: 'servicioID'
  };

  export type ReporteClientesCitasScalarFieldEnum = (typeof ReporteClientesCitasScalarFieldEnum)[keyof typeof ReporteClientesCitasScalarFieldEnum]


  export const ReporteHorarioEstilistasScalarFieldEnum: {
    reporteID: 'reporteID',
    estilistaID: 'estilistaID',
    diaSemana: 'diaSemana',
    horaInicio: 'horaInicio',
    horaFinal: 'horaFinal'
  };

  export type ReporteHorarioEstilistasScalarFieldEnum = (typeof ReporteHorarioEstilistasScalarFieldEnum)[keyof typeof ReporteHorarioEstilistasScalarFieldEnum]


  export const RolesScalarFieldEnum: {
    rolID: 'rolID',
    nombreRol: 'nombreRol'
  };

  export type RolesScalarFieldEnum = (typeof RolesScalarFieldEnum)[keyof typeof RolesScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type administradoresWhereInput = {
    AND?: administradoresWhereInput | administradoresWhereInput[]
    OR?: administradoresWhereInput[]
    NOT?: administradoresWhereInput | administradoresWhereInput[]
    adminID?: IntFilter<"administradores"> | number
    nombre?: StringNullableFilter<"administradores"> | string | null
    apellidos?: StringNullableFilter<"administradores"> | string | null
    correo?: StringNullableFilter<"administradores"> | string | null
    contrase_a?: StringNullableFilter<"administradores"> | string | null
    rolID?: IntNullableFilter<"administradores"> | number | null
    roles?: XOR<RolesNullableRelationFilter, rolesWhereInput> | null
  }

  export type administradoresOrderByWithRelationInput = {
    adminID?: SortOrder
    nombre?: SortOrderInput | SortOrder
    apellidos?: SortOrderInput | SortOrder
    correo?: SortOrderInput | SortOrder
    contrase_a?: SortOrderInput | SortOrder
    rolID?: SortOrderInput | SortOrder
    roles?: rolesOrderByWithRelationInput
  }

  export type administradoresWhereUniqueInput = Prisma.AtLeast<{
    adminID?: number
    AND?: administradoresWhereInput | administradoresWhereInput[]
    OR?: administradoresWhereInput[]
    NOT?: administradoresWhereInput | administradoresWhereInput[]
    nombre?: StringNullableFilter<"administradores"> | string | null
    apellidos?: StringNullableFilter<"administradores"> | string | null
    correo?: StringNullableFilter<"administradores"> | string | null
    contrase_a?: StringNullableFilter<"administradores"> | string | null
    rolID?: IntNullableFilter<"administradores"> | number | null
    roles?: XOR<RolesNullableRelationFilter, rolesWhereInput> | null
  }, "adminID">

  export type administradoresOrderByWithAggregationInput = {
    adminID?: SortOrder
    nombre?: SortOrderInput | SortOrder
    apellidos?: SortOrderInput | SortOrder
    correo?: SortOrderInput | SortOrder
    contrase_a?: SortOrderInput | SortOrder
    rolID?: SortOrderInput | SortOrder
    _count?: administradoresCountOrderByAggregateInput
    _avg?: administradoresAvgOrderByAggregateInput
    _max?: administradoresMaxOrderByAggregateInput
    _min?: administradoresMinOrderByAggregateInput
    _sum?: administradoresSumOrderByAggregateInput
  }

  export type administradoresScalarWhereWithAggregatesInput = {
    AND?: administradoresScalarWhereWithAggregatesInput | administradoresScalarWhereWithAggregatesInput[]
    OR?: administradoresScalarWhereWithAggregatesInput[]
    NOT?: administradoresScalarWhereWithAggregatesInput | administradoresScalarWhereWithAggregatesInput[]
    adminID?: IntWithAggregatesFilter<"administradores"> | number
    nombre?: StringNullableWithAggregatesFilter<"administradores"> | string | null
    apellidos?: StringNullableWithAggregatesFilter<"administradores"> | string | null
    correo?: StringNullableWithAggregatesFilter<"administradores"> | string | null
    contrase_a?: StringNullableWithAggregatesFilter<"administradores"> | string | null
    rolID?: IntNullableWithAggregatesFilter<"administradores"> | number | null
  }

  export type bloqueoHorariosWhereInput = {
    AND?: bloqueoHorariosWhereInput | bloqueoHorariosWhereInput[]
    OR?: bloqueoHorariosWhereInput[]
    NOT?: bloqueoHorariosWhereInput | bloqueoHorariosWhereInput[]
    bloqueoID?: IntFilter<"bloqueoHorarios"> | number
    estilistaID?: IntNullableFilter<"bloqueoHorarios"> | number | null
    dia?: StringNullableFilter<"bloqueoHorarios"> | string | null
    horaInicio?: DateTimeNullableFilter<"bloqueoHorarios"> | Date | string | null
    horaFinal?: DateTimeNullableFilter<"bloqueoHorarios"> | Date | string | null
    motivo?: StringNullableFilter<"bloqueoHorarios"> | string | null
    estilistas?: XOR<EstilistasNullableRelationFilter, estilistasWhereInput> | null
  }

  export type bloqueoHorariosOrderByWithRelationInput = {
    bloqueoID?: SortOrder
    estilistaID?: SortOrderInput | SortOrder
    dia?: SortOrderInput | SortOrder
    horaInicio?: SortOrderInput | SortOrder
    horaFinal?: SortOrderInput | SortOrder
    motivo?: SortOrderInput | SortOrder
    estilistas?: estilistasOrderByWithRelationInput
  }

  export type bloqueoHorariosWhereUniqueInput = Prisma.AtLeast<{
    bloqueoID?: number
    AND?: bloqueoHorariosWhereInput | bloqueoHorariosWhereInput[]
    OR?: bloqueoHorariosWhereInput[]
    NOT?: bloqueoHorariosWhereInput | bloqueoHorariosWhereInput[]
    estilistaID?: IntNullableFilter<"bloqueoHorarios"> | number | null
    dia?: StringNullableFilter<"bloqueoHorarios"> | string | null
    horaInicio?: DateTimeNullableFilter<"bloqueoHorarios"> | Date | string | null
    horaFinal?: DateTimeNullableFilter<"bloqueoHorarios"> | Date | string | null
    motivo?: StringNullableFilter<"bloqueoHorarios"> | string | null
    estilistas?: XOR<EstilistasNullableRelationFilter, estilistasWhereInput> | null
  }, "bloqueoID">

  export type bloqueoHorariosOrderByWithAggregationInput = {
    bloqueoID?: SortOrder
    estilistaID?: SortOrderInput | SortOrder
    dia?: SortOrderInput | SortOrder
    horaInicio?: SortOrderInput | SortOrder
    horaFinal?: SortOrderInput | SortOrder
    motivo?: SortOrderInput | SortOrder
    _count?: bloqueoHorariosCountOrderByAggregateInput
    _avg?: bloqueoHorariosAvgOrderByAggregateInput
    _max?: bloqueoHorariosMaxOrderByAggregateInput
    _min?: bloqueoHorariosMinOrderByAggregateInput
    _sum?: bloqueoHorariosSumOrderByAggregateInput
  }

  export type bloqueoHorariosScalarWhereWithAggregatesInput = {
    AND?: bloqueoHorariosScalarWhereWithAggregatesInput | bloqueoHorariosScalarWhereWithAggregatesInput[]
    OR?: bloqueoHorariosScalarWhereWithAggregatesInput[]
    NOT?: bloqueoHorariosScalarWhereWithAggregatesInput | bloqueoHorariosScalarWhereWithAggregatesInput[]
    bloqueoID?: IntWithAggregatesFilter<"bloqueoHorarios"> | number
    estilistaID?: IntNullableWithAggregatesFilter<"bloqueoHorarios"> | number | null
    dia?: StringNullableWithAggregatesFilter<"bloqueoHorarios"> | string | null
    horaInicio?: DateTimeNullableWithAggregatesFilter<"bloqueoHorarios"> | Date | string | null
    horaFinal?: DateTimeNullableWithAggregatesFilter<"bloqueoHorarios"> | Date | string | null
    motivo?: StringNullableWithAggregatesFilter<"bloqueoHorarios"> | string | null
  }

  export type catalogoWhereInput = {
    AND?: catalogoWhereInput | catalogoWhereInput[]
    OR?: catalogoWhereInput[]
    NOT?: catalogoWhereInput | catalogoWhereInput[]
    servicioID?: IntFilter<"catalogo"> | number
    nombreServicio?: StringNullableFilter<"catalogo"> | string | null
    descripcion?: StringNullableFilter<"catalogo"> | string | null
    precio?: IntNullableFilter<"catalogo"> | number | null
    citas?: CitasListRelationFilter
    detalleServicio?: DetalleServicioListRelationFilter
    historialClientes?: HistorialClientesListRelationFilter
    recompensas?: RecompensasListRelationFilter
    reporteClientesCitas?: ReporteClientesCitasListRelationFilter
  }

  export type catalogoOrderByWithRelationInput = {
    servicioID?: SortOrder
    nombreServicio?: SortOrderInput | SortOrder
    descripcion?: SortOrderInput | SortOrder
    precio?: SortOrderInput | SortOrder
    citas?: citasOrderByRelationAggregateInput
    detalleServicio?: detalleServicioOrderByRelationAggregateInput
    historialClientes?: historialClientesOrderByRelationAggregateInput
    recompensas?: recompensasOrderByRelationAggregateInput
    reporteClientesCitas?: reporteClientesCitasOrderByRelationAggregateInput
  }

  export type catalogoWhereUniqueInput = Prisma.AtLeast<{
    servicioID?: number
    AND?: catalogoWhereInput | catalogoWhereInput[]
    OR?: catalogoWhereInput[]
    NOT?: catalogoWhereInput | catalogoWhereInput[]
    nombreServicio?: StringNullableFilter<"catalogo"> | string | null
    descripcion?: StringNullableFilter<"catalogo"> | string | null
    precio?: IntNullableFilter<"catalogo"> | number | null
    citas?: CitasListRelationFilter
    detalleServicio?: DetalleServicioListRelationFilter
    historialClientes?: HistorialClientesListRelationFilter
    recompensas?: RecompensasListRelationFilter
    reporteClientesCitas?: ReporteClientesCitasListRelationFilter
  }, "servicioID">

  export type catalogoOrderByWithAggregationInput = {
    servicioID?: SortOrder
    nombreServicio?: SortOrderInput | SortOrder
    descripcion?: SortOrderInput | SortOrder
    precio?: SortOrderInput | SortOrder
    _count?: catalogoCountOrderByAggregateInput
    _avg?: catalogoAvgOrderByAggregateInput
    _max?: catalogoMaxOrderByAggregateInput
    _min?: catalogoMinOrderByAggregateInput
    _sum?: catalogoSumOrderByAggregateInput
  }

  export type catalogoScalarWhereWithAggregatesInput = {
    AND?: catalogoScalarWhereWithAggregatesInput | catalogoScalarWhereWithAggregatesInput[]
    OR?: catalogoScalarWhereWithAggregatesInput[]
    NOT?: catalogoScalarWhereWithAggregatesInput | catalogoScalarWhereWithAggregatesInput[]
    servicioID?: IntWithAggregatesFilter<"catalogo"> | number
    nombreServicio?: StringNullableWithAggregatesFilter<"catalogo"> | string | null
    descripcion?: StringNullableWithAggregatesFilter<"catalogo"> | string | null
    precio?: IntNullableWithAggregatesFilter<"catalogo"> | number | null
  }

  export type citasWhereInput = {
    AND?: citasWhereInput | citasWhereInput[]
    OR?: citasWhereInput[]
    NOT?: citasWhereInput | citasWhereInput[]
    citaID?: IntFilter<"citas"> | number
    clienteID?: IntNullableFilter<"citas"> | number | null
    estilistaID?: IntNullableFilter<"citas"> | number | null
    servicioID?: IntNullableFilter<"citas"> | number | null
    fechaCita?: DateTimeNullableFilter<"citas"> | Date | string | null
    estiloID?: IntNullableFilter<"citas"> | number | null
    comentarios?: StringNullableFilter<"citas"> | string | null
    clientes?: XOR<ClientesNullableRelationFilter, clientesWhereInput> | null
    estilistas?: XOR<EstilistasNullableRelationFilter, estilistasWhereInput> | null
    galeriaEstilos?: XOR<GaleriaEstilosNullableRelationFilter, galeriaEstilosWhereInput> | null
    catalogo?: XOR<CatalogoNullableRelationFilter, catalogoWhereInput> | null
    citasReagendadas?: CitasReagendadasListRelationFilter
    historialCitas?: HistorialCitasListRelationFilter
    reporteCitasPendientes?: ReporteCitasPendientesListRelationFilter
    reporteClientesCitas?: ReporteClientesCitasListRelationFilter
  }

  export type citasOrderByWithRelationInput = {
    citaID?: SortOrder
    clienteID?: SortOrderInput | SortOrder
    estilistaID?: SortOrderInput | SortOrder
    servicioID?: SortOrderInput | SortOrder
    fechaCita?: SortOrderInput | SortOrder
    estiloID?: SortOrderInput | SortOrder
    comentarios?: SortOrderInput | SortOrder
    clientes?: clientesOrderByWithRelationInput
    estilistas?: estilistasOrderByWithRelationInput
    galeriaEstilos?: galeriaEstilosOrderByWithRelationInput
    catalogo?: catalogoOrderByWithRelationInput
    citasReagendadas?: citasReagendadasOrderByRelationAggregateInput
    historialCitas?: historialCitasOrderByRelationAggregateInput
    reporteCitasPendientes?: reporteCitasPendientesOrderByRelationAggregateInput
    reporteClientesCitas?: reporteClientesCitasOrderByRelationAggregateInput
  }

  export type citasWhereUniqueInput = Prisma.AtLeast<{
    citaID?: number
    AND?: citasWhereInput | citasWhereInput[]
    OR?: citasWhereInput[]
    NOT?: citasWhereInput | citasWhereInput[]
    clienteID?: IntNullableFilter<"citas"> | number | null
    estilistaID?: IntNullableFilter<"citas"> | number | null
    servicioID?: IntNullableFilter<"citas"> | number | null
    fechaCita?: DateTimeNullableFilter<"citas"> | Date | string | null
    estiloID?: IntNullableFilter<"citas"> | number | null
    comentarios?: StringNullableFilter<"citas"> | string | null
    clientes?: XOR<ClientesNullableRelationFilter, clientesWhereInput> | null
    estilistas?: XOR<EstilistasNullableRelationFilter, estilistasWhereInput> | null
    galeriaEstilos?: XOR<GaleriaEstilosNullableRelationFilter, galeriaEstilosWhereInput> | null
    catalogo?: XOR<CatalogoNullableRelationFilter, catalogoWhereInput> | null
    citasReagendadas?: CitasReagendadasListRelationFilter
    historialCitas?: HistorialCitasListRelationFilter
    reporteCitasPendientes?: ReporteCitasPendientesListRelationFilter
    reporteClientesCitas?: ReporteClientesCitasListRelationFilter
  }, "citaID">

  export type citasOrderByWithAggregationInput = {
    citaID?: SortOrder
    clienteID?: SortOrderInput | SortOrder
    estilistaID?: SortOrderInput | SortOrder
    servicioID?: SortOrderInput | SortOrder
    fechaCita?: SortOrderInput | SortOrder
    estiloID?: SortOrderInput | SortOrder
    comentarios?: SortOrderInput | SortOrder
    _count?: citasCountOrderByAggregateInput
    _avg?: citasAvgOrderByAggregateInput
    _max?: citasMaxOrderByAggregateInput
    _min?: citasMinOrderByAggregateInput
    _sum?: citasSumOrderByAggregateInput
  }

  export type citasScalarWhereWithAggregatesInput = {
    AND?: citasScalarWhereWithAggregatesInput | citasScalarWhereWithAggregatesInput[]
    OR?: citasScalarWhereWithAggregatesInput[]
    NOT?: citasScalarWhereWithAggregatesInput | citasScalarWhereWithAggregatesInput[]
    citaID?: IntWithAggregatesFilter<"citas"> | number
    clienteID?: IntNullableWithAggregatesFilter<"citas"> | number | null
    estilistaID?: IntNullableWithAggregatesFilter<"citas"> | number | null
    servicioID?: IntNullableWithAggregatesFilter<"citas"> | number | null
    fechaCita?: DateTimeNullableWithAggregatesFilter<"citas"> | Date | string | null
    estiloID?: IntNullableWithAggregatesFilter<"citas"> | number | null
    comentarios?: StringNullableWithAggregatesFilter<"citas"> | string | null
  }

  export type citasReagendadasWhereInput = {
    AND?: citasReagendadasWhereInput | citasReagendadasWhereInput[]
    OR?: citasReagendadasWhereInput[]
    NOT?: citasReagendadasWhereInput | citasReagendadasWhereInput[]
    reagendadaID?: IntFilter<"citasReagendadas"> | number
    citaID?: IntNullableFilter<"citasReagendadas"> | number | null
    idCitaNueva?: IntNullableFilter<"citasReagendadas"> | number | null
    fechaNuevaCita?: DateTimeNullableFilter<"citasReagendadas"> | Date | string | null
    motivo?: StringNullableFilter<"citasReagendadas"> | string | null
    citas?: XOR<CitasNullableRelationFilter, citasWhereInput> | null
  }

  export type citasReagendadasOrderByWithRelationInput = {
    reagendadaID?: SortOrder
    citaID?: SortOrderInput | SortOrder
    idCitaNueva?: SortOrderInput | SortOrder
    fechaNuevaCita?: SortOrderInput | SortOrder
    motivo?: SortOrderInput | SortOrder
    citas?: citasOrderByWithRelationInput
  }

  export type citasReagendadasWhereUniqueInput = Prisma.AtLeast<{
    reagendadaID?: number
    AND?: citasReagendadasWhereInput | citasReagendadasWhereInput[]
    OR?: citasReagendadasWhereInput[]
    NOT?: citasReagendadasWhereInput | citasReagendadasWhereInput[]
    citaID?: IntNullableFilter<"citasReagendadas"> | number | null
    idCitaNueva?: IntNullableFilter<"citasReagendadas"> | number | null
    fechaNuevaCita?: DateTimeNullableFilter<"citasReagendadas"> | Date | string | null
    motivo?: StringNullableFilter<"citasReagendadas"> | string | null
    citas?: XOR<CitasNullableRelationFilter, citasWhereInput> | null
  }, "reagendadaID">

  export type citasReagendadasOrderByWithAggregationInput = {
    reagendadaID?: SortOrder
    citaID?: SortOrderInput | SortOrder
    idCitaNueva?: SortOrderInput | SortOrder
    fechaNuevaCita?: SortOrderInput | SortOrder
    motivo?: SortOrderInput | SortOrder
    _count?: citasReagendadasCountOrderByAggregateInput
    _avg?: citasReagendadasAvgOrderByAggregateInput
    _max?: citasReagendadasMaxOrderByAggregateInput
    _min?: citasReagendadasMinOrderByAggregateInput
    _sum?: citasReagendadasSumOrderByAggregateInput
  }

  export type citasReagendadasScalarWhereWithAggregatesInput = {
    AND?: citasReagendadasScalarWhereWithAggregatesInput | citasReagendadasScalarWhereWithAggregatesInput[]
    OR?: citasReagendadasScalarWhereWithAggregatesInput[]
    NOT?: citasReagendadasScalarWhereWithAggregatesInput | citasReagendadasScalarWhereWithAggregatesInput[]
    reagendadaID?: IntWithAggregatesFilter<"citasReagendadas"> | number
    citaID?: IntNullableWithAggregatesFilter<"citasReagendadas"> | number | null
    idCitaNueva?: IntNullableWithAggregatesFilter<"citasReagendadas"> | number | null
    fechaNuevaCita?: DateTimeNullableWithAggregatesFilter<"citasReagendadas"> | Date | string | null
    motivo?: StringNullableWithAggregatesFilter<"citasReagendadas"> | string | null
  }

  export type clientesWhereInput = {
    AND?: clientesWhereInput | clientesWhereInput[]
    OR?: clientesWhereInput[]
    NOT?: clientesWhereInput | clientesWhereInput[]
    clienteID?: IntFilter<"clientes"> | number
    nombre?: StringNullableFilter<"clientes"> | string | null
    apellidos?: StringNullableFilter<"clientes"> | string | null
    correo?: StringNullableFilter<"clientes"> | string | null
    telefono?: StringNullableFilter<"clientes"> | string | null
    direccion?: StringNullableFilter<"clientes"> | string | null
    puntosGanados?: IntNullableFilter<"clientes"> | number | null
    puntosCanjeados?: IntNullableFilter<"clientes"> | number | null
    contrase_a?: StringNullableFilter<"clientes"> | string | null
    rolID?: IntNullableFilter<"clientes"> | number | null
    estado?: StringNullableFilter<"clientes"> | string | null
    citas?: CitasListRelationFilter
    roles?: XOR<RolesNullableRelationFilter, rolesWhereInput> | null
    historialCitas?: HistorialCitasListRelationFilter
    historialClientes?: HistorialClientesListRelationFilter
    historialCuenta?: HistorialCuentaListRelationFilter
    historialGastoPuntos?: HistorialGastoPuntosListRelationFilter
    puntosClientes?: PuntosClientesListRelationFilter
    reporteCitasPendientes?: ReporteCitasPendientesListRelationFilter
    reporteClientesCitas?: ReporteClientesCitasListRelationFilter
  }

  export type clientesOrderByWithRelationInput = {
    clienteID?: SortOrder
    nombre?: SortOrderInput | SortOrder
    apellidos?: SortOrderInput | SortOrder
    correo?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    puntosGanados?: SortOrderInput | SortOrder
    puntosCanjeados?: SortOrderInput | SortOrder
    contrase_a?: SortOrderInput | SortOrder
    rolID?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
    citas?: citasOrderByRelationAggregateInput
    roles?: rolesOrderByWithRelationInput
    historialCitas?: historialCitasOrderByRelationAggregateInput
    historialClientes?: historialClientesOrderByRelationAggregateInput
    historialCuenta?: historialCuentaOrderByRelationAggregateInput
    historialGastoPuntos?: historialGastoPuntosOrderByRelationAggregateInput
    puntosClientes?: puntosClientesOrderByRelationAggregateInput
    reporteCitasPendientes?: reporteCitasPendientesOrderByRelationAggregateInput
    reporteClientesCitas?: reporteClientesCitasOrderByRelationAggregateInput
  }

  export type clientesWhereUniqueInput = Prisma.AtLeast<{
    clienteID?: number
    AND?: clientesWhereInput | clientesWhereInput[]
    OR?: clientesWhereInput[]
    NOT?: clientesWhereInput | clientesWhereInput[]
    nombre?: StringNullableFilter<"clientes"> | string | null
    apellidos?: StringNullableFilter<"clientes"> | string | null
    correo?: StringNullableFilter<"clientes"> | string | null
    telefono?: StringNullableFilter<"clientes"> | string | null
    direccion?: StringNullableFilter<"clientes"> | string | null
    puntosGanados?: IntNullableFilter<"clientes"> | number | null
    puntosCanjeados?: IntNullableFilter<"clientes"> | number | null
    contrase_a?: StringNullableFilter<"clientes"> | string | null
    rolID?: IntNullableFilter<"clientes"> | number | null
    estado?: StringNullableFilter<"clientes"> | string | null
    citas?: CitasListRelationFilter
    roles?: XOR<RolesNullableRelationFilter, rolesWhereInput> | null
    historialCitas?: HistorialCitasListRelationFilter
    historialClientes?: HistorialClientesListRelationFilter
    historialCuenta?: HistorialCuentaListRelationFilter
    historialGastoPuntos?: HistorialGastoPuntosListRelationFilter
    puntosClientes?: PuntosClientesListRelationFilter
    reporteCitasPendientes?: ReporteCitasPendientesListRelationFilter
    reporteClientesCitas?: ReporteClientesCitasListRelationFilter
  }, "clienteID">

  export type clientesOrderByWithAggregationInput = {
    clienteID?: SortOrder
    nombre?: SortOrderInput | SortOrder
    apellidos?: SortOrderInput | SortOrder
    correo?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    puntosGanados?: SortOrderInput | SortOrder
    puntosCanjeados?: SortOrderInput | SortOrder
    contrase_a?: SortOrderInput | SortOrder
    rolID?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
    _count?: clientesCountOrderByAggregateInput
    _avg?: clientesAvgOrderByAggregateInput
    _max?: clientesMaxOrderByAggregateInput
    _min?: clientesMinOrderByAggregateInput
    _sum?: clientesSumOrderByAggregateInput
  }

  export type clientesScalarWhereWithAggregatesInput = {
    AND?: clientesScalarWhereWithAggregatesInput | clientesScalarWhereWithAggregatesInput[]
    OR?: clientesScalarWhereWithAggregatesInput[]
    NOT?: clientesScalarWhereWithAggregatesInput | clientesScalarWhereWithAggregatesInput[]
    clienteID?: IntWithAggregatesFilter<"clientes"> | number
    nombre?: StringNullableWithAggregatesFilter<"clientes"> | string | null
    apellidos?: StringNullableWithAggregatesFilter<"clientes"> | string | null
    correo?: StringNullableWithAggregatesFilter<"clientes"> | string | null
    telefono?: StringNullableWithAggregatesFilter<"clientes"> | string | null
    direccion?: StringNullableWithAggregatesFilter<"clientes"> | string | null
    puntosGanados?: IntNullableWithAggregatesFilter<"clientes"> | number | null
    puntosCanjeados?: IntNullableWithAggregatesFilter<"clientes"> | number | null
    contrase_a?: StringNullableWithAggregatesFilter<"clientes"> | string | null
    rolID?: IntNullableWithAggregatesFilter<"clientes"> | number | null
    estado?: StringNullableWithAggregatesFilter<"clientes"> | string | null
  }

  export type detalleServicioWhereInput = {
    AND?: detalleServicioWhereInput | detalleServicioWhereInput[]
    OR?: detalleServicioWhereInput[]
    NOT?: detalleServicioWhereInput | detalleServicioWhereInput[]
    detalleID?: IntFilter<"detalleServicio"> | number
    servicioID?: IntNullableFilter<"detalleServicio"> | number | null
    tiempoEstimado?: DateTimeNullableFilter<"detalleServicio"> | Date | string | null
    catalogo?: XOR<CatalogoNullableRelationFilter, catalogoWhereInput> | null
  }

  export type detalleServicioOrderByWithRelationInput = {
    detalleID?: SortOrder
    servicioID?: SortOrderInput | SortOrder
    tiempoEstimado?: SortOrderInput | SortOrder
    catalogo?: catalogoOrderByWithRelationInput
  }

  export type detalleServicioWhereUniqueInput = Prisma.AtLeast<{
    detalleID?: number
    AND?: detalleServicioWhereInput | detalleServicioWhereInput[]
    OR?: detalleServicioWhereInput[]
    NOT?: detalleServicioWhereInput | detalleServicioWhereInput[]
    servicioID?: IntNullableFilter<"detalleServicio"> | number | null
    tiempoEstimado?: DateTimeNullableFilter<"detalleServicio"> | Date | string | null
    catalogo?: XOR<CatalogoNullableRelationFilter, catalogoWhereInput> | null
  }, "detalleID">

  export type detalleServicioOrderByWithAggregationInput = {
    detalleID?: SortOrder
    servicioID?: SortOrderInput | SortOrder
    tiempoEstimado?: SortOrderInput | SortOrder
    _count?: detalleServicioCountOrderByAggregateInput
    _avg?: detalleServicioAvgOrderByAggregateInput
    _max?: detalleServicioMaxOrderByAggregateInput
    _min?: detalleServicioMinOrderByAggregateInput
    _sum?: detalleServicioSumOrderByAggregateInput
  }

  export type detalleServicioScalarWhereWithAggregatesInput = {
    AND?: detalleServicioScalarWhereWithAggregatesInput | detalleServicioScalarWhereWithAggregatesInput[]
    OR?: detalleServicioScalarWhereWithAggregatesInput[]
    NOT?: detalleServicioScalarWhereWithAggregatesInput | detalleServicioScalarWhereWithAggregatesInput[]
    detalleID?: IntWithAggregatesFilter<"detalleServicio"> | number
    servicioID?: IntNullableWithAggregatesFilter<"detalleServicio"> | number | null
    tiempoEstimado?: DateTimeNullableWithAggregatesFilter<"detalleServicio"> | Date | string | null
  }

  export type disponibilidadTiempoRealWhereInput = {
    AND?: disponibilidadTiempoRealWhereInput | disponibilidadTiempoRealWhereInput[]
    OR?: disponibilidadTiempoRealWhereInput[]
    NOT?: disponibilidadTiempoRealWhereInput | disponibilidadTiempoRealWhereInput[]
    disponibilidadID?: IntFilter<"disponibilidadTiempoReal"> | number
    estilistaID?: IntNullableFilter<"disponibilidadTiempoReal"> | number | null
    diaSemana?: StringNullableFilter<"disponibilidadTiempoReal"> | string | null
    horaInicio?: DateTimeNullableFilter<"disponibilidadTiempoReal"> | Date | string | null
    horaFinal?: DateTimeNullableFilter<"disponibilidadTiempoReal"> | Date | string | null
    estilistas?: XOR<EstilistasNullableRelationFilter, estilistasWhereInput> | null
  }

  export type disponibilidadTiempoRealOrderByWithRelationInput = {
    disponibilidadID?: SortOrder
    estilistaID?: SortOrderInput | SortOrder
    diaSemana?: SortOrderInput | SortOrder
    horaInicio?: SortOrderInput | SortOrder
    horaFinal?: SortOrderInput | SortOrder
    estilistas?: estilistasOrderByWithRelationInput
  }

  export type disponibilidadTiempoRealWhereUniqueInput = Prisma.AtLeast<{
    disponibilidadID?: number
    AND?: disponibilidadTiempoRealWhereInput | disponibilidadTiempoRealWhereInput[]
    OR?: disponibilidadTiempoRealWhereInput[]
    NOT?: disponibilidadTiempoRealWhereInput | disponibilidadTiempoRealWhereInput[]
    estilistaID?: IntNullableFilter<"disponibilidadTiempoReal"> | number | null
    diaSemana?: StringNullableFilter<"disponibilidadTiempoReal"> | string | null
    horaInicio?: DateTimeNullableFilter<"disponibilidadTiempoReal"> | Date | string | null
    horaFinal?: DateTimeNullableFilter<"disponibilidadTiempoReal"> | Date | string | null
    estilistas?: XOR<EstilistasNullableRelationFilter, estilistasWhereInput> | null
  }, "disponibilidadID">

  export type disponibilidadTiempoRealOrderByWithAggregationInput = {
    disponibilidadID?: SortOrder
    estilistaID?: SortOrderInput | SortOrder
    diaSemana?: SortOrderInput | SortOrder
    horaInicio?: SortOrderInput | SortOrder
    horaFinal?: SortOrderInput | SortOrder
    _count?: disponibilidadTiempoRealCountOrderByAggregateInput
    _avg?: disponibilidadTiempoRealAvgOrderByAggregateInput
    _max?: disponibilidadTiempoRealMaxOrderByAggregateInput
    _min?: disponibilidadTiempoRealMinOrderByAggregateInput
    _sum?: disponibilidadTiempoRealSumOrderByAggregateInput
  }

  export type disponibilidadTiempoRealScalarWhereWithAggregatesInput = {
    AND?: disponibilidadTiempoRealScalarWhereWithAggregatesInput | disponibilidadTiempoRealScalarWhereWithAggregatesInput[]
    OR?: disponibilidadTiempoRealScalarWhereWithAggregatesInput[]
    NOT?: disponibilidadTiempoRealScalarWhereWithAggregatesInput | disponibilidadTiempoRealScalarWhereWithAggregatesInput[]
    disponibilidadID?: IntWithAggregatesFilter<"disponibilidadTiempoReal"> | number
    estilistaID?: IntNullableWithAggregatesFilter<"disponibilidadTiempoReal"> | number | null
    diaSemana?: StringNullableWithAggregatesFilter<"disponibilidadTiempoReal"> | string | null
    horaInicio?: DateTimeNullableWithAggregatesFilter<"disponibilidadTiempoReal"> | Date | string | null
    horaFinal?: DateTimeNullableWithAggregatesFilter<"disponibilidadTiempoReal"> | Date | string | null
  }

  export type estilistasWhereInput = {
    AND?: estilistasWhereInput | estilistasWhereInput[]
    OR?: estilistasWhereInput[]
    NOT?: estilistasWhereInput | estilistasWhereInput[]
    estilistaID?: IntFilter<"estilistas"> | number
    nombre?: StringNullableFilter<"estilistas"> | string | null
    apellidos?: StringNullableFilter<"estilistas"> | string | null
    telefono?: StringNullableFilter<"estilistas"> | string | null
    direccion?: StringNullableFilter<"estilistas"> | string | null
    fechaIngreso?: DateTimeNullableFilter<"estilistas"> | Date | string | null
    fechaSalida?: DateTimeNullableFilter<"estilistas"> | Date | string | null
    correo?: StringNullableFilter<"estilistas"> | string | null
    contrase_a?: StringNullableFilter<"estilistas"> | string | null
    rolID?: IntNullableFilter<"estilistas"> | number | null
    estado?: StringNullableFilter<"estilistas"> | string | null
    bloqueoHorarios?: BloqueoHorariosListRelationFilter
    citas?: CitasListRelationFilter
    disponibilidadTiempoReal?: DisponibilidadTiempoRealListRelationFilter
    roles?: XOR<RolesNullableRelationFilter, rolesWhereInput> | null
    historialCitas?: HistorialCitasListRelationFilter
    reporteCitasPendientes?: ReporteCitasPendientesListRelationFilter
    reporteHorarioEstilistas?: ReporteHorarioEstilistasListRelationFilter
  }

  export type estilistasOrderByWithRelationInput = {
    estilistaID?: SortOrder
    nombre?: SortOrderInput | SortOrder
    apellidos?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    fechaIngreso?: SortOrderInput | SortOrder
    fechaSalida?: SortOrderInput | SortOrder
    correo?: SortOrderInput | SortOrder
    contrase_a?: SortOrderInput | SortOrder
    rolID?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
    bloqueoHorarios?: bloqueoHorariosOrderByRelationAggregateInput
    citas?: citasOrderByRelationAggregateInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealOrderByRelationAggregateInput
    roles?: rolesOrderByWithRelationInput
    historialCitas?: historialCitasOrderByRelationAggregateInput
    reporteCitasPendientes?: reporteCitasPendientesOrderByRelationAggregateInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasOrderByRelationAggregateInput
  }

  export type estilistasWhereUniqueInput = Prisma.AtLeast<{
    estilistaID?: number
    AND?: estilistasWhereInput | estilistasWhereInput[]
    OR?: estilistasWhereInput[]
    NOT?: estilistasWhereInput | estilistasWhereInput[]
    nombre?: StringNullableFilter<"estilistas"> | string | null
    apellidos?: StringNullableFilter<"estilistas"> | string | null
    telefono?: StringNullableFilter<"estilistas"> | string | null
    direccion?: StringNullableFilter<"estilistas"> | string | null
    fechaIngreso?: DateTimeNullableFilter<"estilistas"> | Date | string | null
    fechaSalida?: DateTimeNullableFilter<"estilistas"> | Date | string | null
    correo?: StringNullableFilter<"estilistas"> | string | null
    contrase_a?: StringNullableFilter<"estilistas"> | string | null
    rolID?: IntNullableFilter<"estilistas"> | number | null
    estado?: StringNullableFilter<"estilistas"> | string | null
    bloqueoHorarios?: BloqueoHorariosListRelationFilter
    citas?: CitasListRelationFilter
    disponibilidadTiempoReal?: DisponibilidadTiempoRealListRelationFilter
    roles?: XOR<RolesNullableRelationFilter, rolesWhereInput> | null
    historialCitas?: HistorialCitasListRelationFilter
    reporteCitasPendientes?: ReporteCitasPendientesListRelationFilter
    reporteHorarioEstilistas?: ReporteHorarioEstilistasListRelationFilter
  }, "estilistaID">

  export type estilistasOrderByWithAggregationInput = {
    estilistaID?: SortOrder
    nombre?: SortOrderInput | SortOrder
    apellidos?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    fechaIngreso?: SortOrderInput | SortOrder
    fechaSalida?: SortOrderInput | SortOrder
    correo?: SortOrderInput | SortOrder
    contrase_a?: SortOrderInput | SortOrder
    rolID?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
    _count?: estilistasCountOrderByAggregateInput
    _avg?: estilistasAvgOrderByAggregateInput
    _max?: estilistasMaxOrderByAggregateInput
    _min?: estilistasMinOrderByAggregateInput
    _sum?: estilistasSumOrderByAggregateInput
  }

  export type estilistasScalarWhereWithAggregatesInput = {
    AND?: estilistasScalarWhereWithAggregatesInput | estilistasScalarWhereWithAggregatesInput[]
    OR?: estilistasScalarWhereWithAggregatesInput[]
    NOT?: estilistasScalarWhereWithAggregatesInput | estilistasScalarWhereWithAggregatesInput[]
    estilistaID?: IntWithAggregatesFilter<"estilistas"> | number
    nombre?: StringNullableWithAggregatesFilter<"estilistas"> | string | null
    apellidos?: StringNullableWithAggregatesFilter<"estilistas"> | string | null
    telefono?: StringNullableWithAggregatesFilter<"estilistas"> | string | null
    direccion?: StringNullableWithAggregatesFilter<"estilistas"> | string | null
    fechaIngreso?: DateTimeNullableWithAggregatesFilter<"estilistas"> | Date | string | null
    fechaSalida?: DateTimeNullableWithAggregatesFilter<"estilistas"> | Date | string | null
    correo?: StringNullableWithAggregatesFilter<"estilistas"> | string | null
    contrase_a?: StringNullableWithAggregatesFilter<"estilistas"> | string | null
    rolID?: IntNullableWithAggregatesFilter<"estilistas"> | number | null
    estado?: StringNullableWithAggregatesFilter<"estilistas"> | string | null
  }

  export type galeriaEstilosWhereInput = {
    AND?: galeriaEstilosWhereInput | galeriaEstilosWhereInput[]
    OR?: galeriaEstilosWhereInput[]
    NOT?: galeriaEstilosWhereInput | galeriaEstilosWhereInput[]
    estiloID?: IntFilter<"galeriaEstilos"> | number
    nombreEstilo?: StringNullableFilter<"galeriaEstilos"> | string | null
    rutaImagen?: StringNullableFilter<"galeriaEstilos"> | string | null
    citas?: CitasListRelationFilter
  }

  export type galeriaEstilosOrderByWithRelationInput = {
    estiloID?: SortOrder
    nombreEstilo?: SortOrderInput | SortOrder
    rutaImagen?: SortOrderInput | SortOrder
    citas?: citasOrderByRelationAggregateInput
  }

  export type galeriaEstilosWhereUniqueInput = Prisma.AtLeast<{
    estiloID?: number
    AND?: galeriaEstilosWhereInput | galeriaEstilosWhereInput[]
    OR?: galeriaEstilosWhereInput[]
    NOT?: galeriaEstilosWhereInput | galeriaEstilosWhereInput[]
    nombreEstilo?: StringNullableFilter<"galeriaEstilos"> | string | null
    rutaImagen?: StringNullableFilter<"galeriaEstilos"> | string | null
    citas?: CitasListRelationFilter
  }, "estiloID">

  export type galeriaEstilosOrderByWithAggregationInput = {
    estiloID?: SortOrder
    nombreEstilo?: SortOrderInput | SortOrder
    rutaImagen?: SortOrderInput | SortOrder
    _count?: galeriaEstilosCountOrderByAggregateInput
    _avg?: galeriaEstilosAvgOrderByAggregateInput
    _max?: galeriaEstilosMaxOrderByAggregateInput
    _min?: galeriaEstilosMinOrderByAggregateInput
    _sum?: galeriaEstilosSumOrderByAggregateInput
  }

  export type galeriaEstilosScalarWhereWithAggregatesInput = {
    AND?: galeriaEstilosScalarWhereWithAggregatesInput | galeriaEstilosScalarWhereWithAggregatesInput[]
    OR?: galeriaEstilosScalarWhereWithAggregatesInput[]
    NOT?: galeriaEstilosScalarWhereWithAggregatesInput | galeriaEstilosScalarWhereWithAggregatesInput[]
    estiloID?: IntWithAggregatesFilter<"galeriaEstilos"> | number
    nombreEstilo?: StringNullableWithAggregatesFilter<"galeriaEstilos"> | string | null
    rutaImagen?: StringNullableWithAggregatesFilter<"galeriaEstilos"> | string | null
  }

  export type historialCitasWhereInput = {
    AND?: historialCitasWhereInput | historialCitasWhereInput[]
    OR?: historialCitasWhereInput[]
    NOT?: historialCitasWhereInput | historialCitasWhereInput[]
    historialID?: IntFilter<"historialCitas"> | number
    citaID?: IntNullableFilter<"historialCitas"> | number | null
    clienteID?: IntNullableFilter<"historialCitas"> | number | null
    estilistaID?: IntNullableFilter<"historialCitas"> | number | null
    fechaCita?: DateTimeNullableFilter<"historialCitas"> | Date | string | null
    servicioID?: IntNullableFilter<"historialCitas"> | number | null
    citas?: XOR<CitasNullableRelationFilter, citasWhereInput> | null
    clientes?: XOR<ClientesNullableRelationFilter, clientesWhereInput> | null
    estilistas?: XOR<EstilistasNullableRelationFilter, estilistasWhereInput> | null
  }

  export type historialCitasOrderByWithRelationInput = {
    historialID?: SortOrder
    citaID?: SortOrderInput | SortOrder
    clienteID?: SortOrderInput | SortOrder
    estilistaID?: SortOrderInput | SortOrder
    fechaCita?: SortOrderInput | SortOrder
    servicioID?: SortOrderInput | SortOrder
    citas?: citasOrderByWithRelationInput
    clientes?: clientesOrderByWithRelationInput
    estilistas?: estilistasOrderByWithRelationInput
  }

  export type historialCitasWhereUniqueInput = Prisma.AtLeast<{
    historialID?: number
    AND?: historialCitasWhereInput | historialCitasWhereInput[]
    OR?: historialCitasWhereInput[]
    NOT?: historialCitasWhereInput | historialCitasWhereInput[]
    citaID?: IntNullableFilter<"historialCitas"> | number | null
    clienteID?: IntNullableFilter<"historialCitas"> | number | null
    estilistaID?: IntNullableFilter<"historialCitas"> | number | null
    fechaCita?: DateTimeNullableFilter<"historialCitas"> | Date | string | null
    servicioID?: IntNullableFilter<"historialCitas"> | number | null
    citas?: XOR<CitasNullableRelationFilter, citasWhereInput> | null
    clientes?: XOR<ClientesNullableRelationFilter, clientesWhereInput> | null
    estilistas?: XOR<EstilistasNullableRelationFilter, estilistasWhereInput> | null
  }, "historialID">

  export type historialCitasOrderByWithAggregationInput = {
    historialID?: SortOrder
    citaID?: SortOrderInput | SortOrder
    clienteID?: SortOrderInput | SortOrder
    estilistaID?: SortOrderInput | SortOrder
    fechaCita?: SortOrderInput | SortOrder
    servicioID?: SortOrderInput | SortOrder
    _count?: historialCitasCountOrderByAggregateInput
    _avg?: historialCitasAvgOrderByAggregateInput
    _max?: historialCitasMaxOrderByAggregateInput
    _min?: historialCitasMinOrderByAggregateInput
    _sum?: historialCitasSumOrderByAggregateInput
  }

  export type historialCitasScalarWhereWithAggregatesInput = {
    AND?: historialCitasScalarWhereWithAggregatesInput | historialCitasScalarWhereWithAggregatesInput[]
    OR?: historialCitasScalarWhereWithAggregatesInput[]
    NOT?: historialCitasScalarWhereWithAggregatesInput | historialCitasScalarWhereWithAggregatesInput[]
    historialID?: IntWithAggregatesFilter<"historialCitas"> | number
    citaID?: IntNullableWithAggregatesFilter<"historialCitas"> | number | null
    clienteID?: IntNullableWithAggregatesFilter<"historialCitas"> | number | null
    estilistaID?: IntNullableWithAggregatesFilter<"historialCitas"> | number | null
    fechaCita?: DateTimeNullableWithAggregatesFilter<"historialCitas"> | Date | string | null
    servicioID?: IntNullableWithAggregatesFilter<"historialCitas"> | number | null
  }

  export type historialClientesWhereInput = {
    AND?: historialClientesWhereInput | historialClientesWhereInput[]
    OR?: historialClientesWhereInput[]
    NOT?: historialClientesWhereInput | historialClientesWhereInput[]
    historialID?: IntFilter<"historialClientes"> | number
    clienteID?: IntNullableFilter<"historialClientes"> | number | null
    nombreCliente?: StringNullableFilter<"historialClientes"> | string | null
    fechaRegistro?: DateTimeNullableFilter<"historialClientes"> | Date | string | null
    ultimoServicioID?: IntNullableFilter<"historialClientes"> | number | null
    clientes?: XOR<ClientesNullableRelationFilter, clientesWhereInput> | null
    catalogo?: XOR<CatalogoNullableRelationFilter, catalogoWhereInput> | null
  }

  export type historialClientesOrderByWithRelationInput = {
    historialID?: SortOrder
    clienteID?: SortOrderInput | SortOrder
    nombreCliente?: SortOrderInput | SortOrder
    fechaRegistro?: SortOrderInput | SortOrder
    ultimoServicioID?: SortOrderInput | SortOrder
    clientes?: clientesOrderByWithRelationInput
    catalogo?: catalogoOrderByWithRelationInput
  }

  export type historialClientesWhereUniqueInput = Prisma.AtLeast<{
    historialID?: number
    AND?: historialClientesWhereInput | historialClientesWhereInput[]
    OR?: historialClientesWhereInput[]
    NOT?: historialClientesWhereInput | historialClientesWhereInput[]
    clienteID?: IntNullableFilter<"historialClientes"> | number | null
    nombreCliente?: StringNullableFilter<"historialClientes"> | string | null
    fechaRegistro?: DateTimeNullableFilter<"historialClientes"> | Date | string | null
    ultimoServicioID?: IntNullableFilter<"historialClientes"> | number | null
    clientes?: XOR<ClientesNullableRelationFilter, clientesWhereInput> | null
    catalogo?: XOR<CatalogoNullableRelationFilter, catalogoWhereInput> | null
  }, "historialID">

  export type historialClientesOrderByWithAggregationInput = {
    historialID?: SortOrder
    clienteID?: SortOrderInput | SortOrder
    nombreCliente?: SortOrderInput | SortOrder
    fechaRegistro?: SortOrderInput | SortOrder
    ultimoServicioID?: SortOrderInput | SortOrder
    _count?: historialClientesCountOrderByAggregateInput
    _avg?: historialClientesAvgOrderByAggregateInput
    _max?: historialClientesMaxOrderByAggregateInput
    _min?: historialClientesMinOrderByAggregateInput
    _sum?: historialClientesSumOrderByAggregateInput
  }

  export type historialClientesScalarWhereWithAggregatesInput = {
    AND?: historialClientesScalarWhereWithAggregatesInput | historialClientesScalarWhereWithAggregatesInput[]
    OR?: historialClientesScalarWhereWithAggregatesInput[]
    NOT?: historialClientesScalarWhereWithAggregatesInput | historialClientesScalarWhereWithAggregatesInput[]
    historialID?: IntWithAggregatesFilter<"historialClientes"> | number
    clienteID?: IntNullableWithAggregatesFilter<"historialClientes"> | number | null
    nombreCliente?: StringNullableWithAggregatesFilter<"historialClientes"> | string | null
    fechaRegistro?: DateTimeNullableWithAggregatesFilter<"historialClientes"> | Date | string | null
    ultimoServicioID?: IntNullableWithAggregatesFilter<"historialClientes"> | number | null
  }

  export type historialCuentaWhereInput = {
    AND?: historialCuentaWhereInput | historialCuentaWhereInput[]
    OR?: historialCuentaWhereInput[]
    NOT?: historialCuentaWhereInput | historialCuentaWhereInput[]
    historialID?: IntFilter<"historialCuenta"> | number
    clienteID?: IntNullableFilter<"historialCuenta"> | number | null
    serviciosUtilizados?: IntNullableFilter<"historialCuenta"> | number | null
    ultimaConexion?: DateTimeNullableFilter<"historialCuenta"> | Date | string | null
    clientes?: XOR<ClientesNullableRelationFilter, clientesWhereInput> | null
  }

  export type historialCuentaOrderByWithRelationInput = {
    historialID?: SortOrder
    clienteID?: SortOrderInput | SortOrder
    serviciosUtilizados?: SortOrderInput | SortOrder
    ultimaConexion?: SortOrderInput | SortOrder
    clientes?: clientesOrderByWithRelationInput
  }

  export type historialCuentaWhereUniqueInput = Prisma.AtLeast<{
    historialID?: number
    AND?: historialCuentaWhereInput | historialCuentaWhereInput[]
    OR?: historialCuentaWhereInput[]
    NOT?: historialCuentaWhereInput | historialCuentaWhereInput[]
    clienteID?: IntNullableFilter<"historialCuenta"> | number | null
    serviciosUtilizados?: IntNullableFilter<"historialCuenta"> | number | null
    ultimaConexion?: DateTimeNullableFilter<"historialCuenta"> | Date | string | null
    clientes?: XOR<ClientesNullableRelationFilter, clientesWhereInput> | null
  }, "historialID">

  export type historialCuentaOrderByWithAggregationInput = {
    historialID?: SortOrder
    clienteID?: SortOrderInput | SortOrder
    serviciosUtilizados?: SortOrderInput | SortOrder
    ultimaConexion?: SortOrderInput | SortOrder
    _count?: historialCuentaCountOrderByAggregateInput
    _avg?: historialCuentaAvgOrderByAggregateInput
    _max?: historialCuentaMaxOrderByAggregateInput
    _min?: historialCuentaMinOrderByAggregateInput
    _sum?: historialCuentaSumOrderByAggregateInput
  }

  export type historialCuentaScalarWhereWithAggregatesInput = {
    AND?: historialCuentaScalarWhereWithAggregatesInput | historialCuentaScalarWhereWithAggregatesInput[]
    OR?: historialCuentaScalarWhereWithAggregatesInput[]
    NOT?: historialCuentaScalarWhereWithAggregatesInput | historialCuentaScalarWhereWithAggregatesInput[]
    historialID?: IntWithAggregatesFilter<"historialCuenta"> | number
    clienteID?: IntNullableWithAggregatesFilter<"historialCuenta"> | number | null
    serviciosUtilizados?: IntNullableWithAggregatesFilter<"historialCuenta"> | number | null
    ultimaConexion?: DateTimeNullableWithAggregatesFilter<"historialCuenta"> | Date | string | null
  }

  export type historialGastoPuntosWhereInput = {
    AND?: historialGastoPuntosWhereInput | historialGastoPuntosWhereInput[]
    OR?: historialGastoPuntosWhereInput[]
    NOT?: historialGastoPuntosWhereInput | historialGastoPuntosWhereInput[]
    gastoID?: IntFilter<"historialGastoPuntos"> | number
    clienteID?: IntNullableFilter<"historialGastoPuntos"> | number | null
    puntosGastados?: IntNullableFilter<"historialGastoPuntos"> | number | null
    fecha?: DateTimeNullableFilter<"historialGastoPuntos"> | Date | string | null
    descripcionGasto?: StringNullableFilter<"historialGastoPuntos"> | string | null
    clientes?: XOR<ClientesNullableRelationFilter, clientesWhereInput> | null
  }

  export type historialGastoPuntosOrderByWithRelationInput = {
    gastoID?: SortOrder
    clienteID?: SortOrderInput | SortOrder
    puntosGastados?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    descripcionGasto?: SortOrderInput | SortOrder
    clientes?: clientesOrderByWithRelationInput
  }

  export type historialGastoPuntosWhereUniqueInput = Prisma.AtLeast<{
    gastoID?: number
    AND?: historialGastoPuntosWhereInput | historialGastoPuntosWhereInput[]
    OR?: historialGastoPuntosWhereInput[]
    NOT?: historialGastoPuntosWhereInput | historialGastoPuntosWhereInput[]
    clienteID?: IntNullableFilter<"historialGastoPuntos"> | number | null
    puntosGastados?: IntNullableFilter<"historialGastoPuntos"> | number | null
    fecha?: DateTimeNullableFilter<"historialGastoPuntos"> | Date | string | null
    descripcionGasto?: StringNullableFilter<"historialGastoPuntos"> | string | null
    clientes?: XOR<ClientesNullableRelationFilter, clientesWhereInput> | null
  }, "gastoID">

  export type historialGastoPuntosOrderByWithAggregationInput = {
    gastoID?: SortOrder
    clienteID?: SortOrderInput | SortOrder
    puntosGastados?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    descripcionGasto?: SortOrderInput | SortOrder
    _count?: historialGastoPuntosCountOrderByAggregateInput
    _avg?: historialGastoPuntosAvgOrderByAggregateInput
    _max?: historialGastoPuntosMaxOrderByAggregateInput
    _min?: historialGastoPuntosMinOrderByAggregateInput
    _sum?: historialGastoPuntosSumOrderByAggregateInput
  }

  export type historialGastoPuntosScalarWhereWithAggregatesInput = {
    AND?: historialGastoPuntosScalarWhereWithAggregatesInput | historialGastoPuntosScalarWhereWithAggregatesInput[]
    OR?: historialGastoPuntosScalarWhereWithAggregatesInput[]
    NOT?: historialGastoPuntosScalarWhereWithAggregatesInput | historialGastoPuntosScalarWhereWithAggregatesInput[]
    gastoID?: IntWithAggregatesFilter<"historialGastoPuntos"> | number
    clienteID?: IntNullableWithAggregatesFilter<"historialGastoPuntos"> | number | null
    puntosGastados?: IntNullableWithAggregatesFilter<"historialGastoPuntos"> | number | null
    fecha?: DateTimeNullableWithAggregatesFilter<"historialGastoPuntos"> | Date | string | null
    descripcionGasto?: StringNullableWithAggregatesFilter<"historialGastoPuntos"> | string | null
  }

  export type puntosClientesWhereInput = {
    AND?: puntosClientesWhereInput | puntosClientesWhereInput[]
    OR?: puntosClientesWhereInput[]
    NOT?: puntosClientesWhereInput | puntosClientesWhereInput[]
    puntosID?: IntFilter<"puntosClientes"> | number
    clienteID?: IntNullableFilter<"puntosClientes"> | number | null
    saldoPuntos?: IntNullableFilter<"puntosClientes"> | number | null
    clientes?: XOR<ClientesNullableRelationFilter, clientesWhereInput> | null
  }

  export type puntosClientesOrderByWithRelationInput = {
    puntosID?: SortOrder
    clienteID?: SortOrderInput | SortOrder
    saldoPuntos?: SortOrderInput | SortOrder
    clientes?: clientesOrderByWithRelationInput
  }

  export type puntosClientesWhereUniqueInput = Prisma.AtLeast<{
    puntosID?: number
    AND?: puntosClientesWhereInput | puntosClientesWhereInput[]
    OR?: puntosClientesWhereInput[]
    NOT?: puntosClientesWhereInput | puntosClientesWhereInput[]
    clienteID?: IntNullableFilter<"puntosClientes"> | number | null
    saldoPuntos?: IntNullableFilter<"puntosClientes"> | number | null
    clientes?: XOR<ClientesNullableRelationFilter, clientesWhereInput> | null
  }, "puntosID">

  export type puntosClientesOrderByWithAggregationInput = {
    puntosID?: SortOrder
    clienteID?: SortOrderInput | SortOrder
    saldoPuntos?: SortOrderInput | SortOrder
    _count?: puntosClientesCountOrderByAggregateInput
    _avg?: puntosClientesAvgOrderByAggregateInput
    _max?: puntosClientesMaxOrderByAggregateInput
    _min?: puntosClientesMinOrderByAggregateInput
    _sum?: puntosClientesSumOrderByAggregateInput
  }

  export type puntosClientesScalarWhereWithAggregatesInput = {
    AND?: puntosClientesScalarWhereWithAggregatesInput | puntosClientesScalarWhereWithAggregatesInput[]
    OR?: puntosClientesScalarWhereWithAggregatesInput[]
    NOT?: puntosClientesScalarWhereWithAggregatesInput | puntosClientesScalarWhereWithAggregatesInput[]
    puntosID?: IntWithAggregatesFilter<"puntosClientes"> | number
    clienteID?: IntNullableWithAggregatesFilter<"puntosClientes"> | number | null
    saldoPuntos?: IntNullableWithAggregatesFilter<"puntosClientes"> | number | null
  }

  export type recompensasWhereInput = {
    AND?: recompensasWhereInput | recompensasWhereInput[]
    OR?: recompensasWhereInput[]
    NOT?: recompensasWhereInput | recompensasWhereInput[]
    recompensaID?: IntFilter<"recompensas"> | number
    servicioID?: IntNullableFilter<"recompensas"> | number | null
    puntosRecompensa?: IntNullableFilter<"recompensas"> | number | null
    catalogo?: XOR<CatalogoNullableRelationFilter, catalogoWhereInput> | null
  }

  export type recompensasOrderByWithRelationInput = {
    recompensaID?: SortOrder
    servicioID?: SortOrderInput | SortOrder
    puntosRecompensa?: SortOrderInput | SortOrder
    catalogo?: catalogoOrderByWithRelationInput
  }

  export type recompensasWhereUniqueInput = Prisma.AtLeast<{
    recompensaID?: number
    AND?: recompensasWhereInput | recompensasWhereInput[]
    OR?: recompensasWhereInput[]
    NOT?: recompensasWhereInput | recompensasWhereInput[]
    servicioID?: IntNullableFilter<"recompensas"> | number | null
    puntosRecompensa?: IntNullableFilter<"recompensas"> | number | null
    catalogo?: XOR<CatalogoNullableRelationFilter, catalogoWhereInput> | null
  }, "recompensaID">

  export type recompensasOrderByWithAggregationInput = {
    recompensaID?: SortOrder
    servicioID?: SortOrderInput | SortOrder
    puntosRecompensa?: SortOrderInput | SortOrder
    _count?: recompensasCountOrderByAggregateInput
    _avg?: recompensasAvgOrderByAggregateInput
    _max?: recompensasMaxOrderByAggregateInput
    _min?: recompensasMinOrderByAggregateInput
    _sum?: recompensasSumOrderByAggregateInput
  }

  export type recompensasScalarWhereWithAggregatesInput = {
    AND?: recompensasScalarWhereWithAggregatesInput | recompensasScalarWhereWithAggregatesInput[]
    OR?: recompensasScalarWhereWithAggregatesInput[]
    NOT?: recompensasScalarWhereWithAggregatesInput | recompensasScalarWhereWithAggregatesInput[]
    recompensaID?: IntWithAggregatesFilter<"recompensas"> | number
    servicioID?: IntNullableWithAggregatesFilter<"recompensas"> | number | null
    puntosRecompensa?: IntNullableWithAggregatesFilter<"recompensas"> | number | null
  }

  export type reporteCitasPendientesWhereInput = {
    AND?: reporteCitasPendientesWhereInput | reporteCitasPendientesWhereInput[]
    OR?: reporteCitasPendientesWhereInput[]
    NOT?: reporteCitasPendientesWhereInput | reporteCitasPendientesWhereInput[]
    reporteID?: IntFilter<"reporteCitasPendientes"> | number
    citaID?: IntNullableFilter<"reporteCitasPendientes"> | number | null
    clienteID?: IntNullableFilter<"reporteCitasPendientes"> | number | null
    fechaCita?: DateTimeNullableFilter<"reporteCitasPendientes"> | Date | string | null
    estilistaID?: IntNullableFilter<"reporteCitasPendientes"> | number | null
    citas?: XOR<CitasNullableRelationFilter, citasWhereInput> | null
    clientes?: XOR<ClientesNullableRelationFilter, clientesWhereInput> | null
    estilistas?: XOR<EstilistasNullableRelationFilter, estilistasWhereInput> | null
  }

  export type reporteCitasPendientesOrderByWithRelationInput = {
    reporteID?: SortOrder
    citaID?: SortOrderInput | SortOrder
    clienteID?: SortOrderInput | SortOrder
    fechaCita?: SortOrderInput | SortOrder
    estilistaID?: SortOrderInput | SortOrder
    citas?: citasOrderByWithRelationInput
    clientes?: clientesOrderByWithRelationInput
    estilistas?: estilistasOrderByWithRelationInput
  }

  export type reporteCitasPendientesWhereUniqueInput = Prisma.AtLeast<{
    reporteID?: number
    AND?: reporteCitasPendientesWhereInput | reporteCitasPendientesWhereInput[]
    OR?: reporteCitasPendientesWhereInput[]
    NOT?: reporteCitasPendientesWhereInput | reporteCitasPendientesWhereInput[]
    citaID?: IntNullableFilter<"reporteCitasPendientes"> | number | null
    clienteID?: IntNullableFilter<"reporteCitasPendientes"> | number | null
    fechaCita?: DateTimeNullableFilter<"reporteCitasPendientes"> | Date | string | null
    estilistaID?: IntNullableFilter<"reporteCitasPendientes"> | number | null
    citas?: XOR<CitasNullableRelationFilter, citasWhereInput> | null
    clientes?: XOR<ClientesNullableRelationFilter, clientesWhereInput> | null
    estilistas?: XOR<EstilistasNullableRelationFilter, estilistasWhereInput> | null
  }, "reporteID">

  export type reporteCitasPendientesOrderByWithAggregationInput = {
    reporteID?: SortOrder
    citaID?: SortOrderInput | SortOrder
    clienteID?: SortOrderInput | SortOrder
    fechaCita?: SortOrderInput | SortOrder
    estilistaID?: SortOrderInput | SortOrder
    _count?: reporteCitasPendientesCountOrderByAggregateInput
    _avg?: reporteCitasPendientesAvgOrderByAggregateInput
    _max?: reporteCitasPendientesMaxOrderByAggregateInput
    _min?: reporteCitasPendientesMinOrderByAggregateInput
    _sum?: reporteCitasPendientesSumOrderByAggregateInput
  }

  export type reporteCitasPendientesScalarWhereWithAggregatesInput = {
    AND?: reporteCitasPendientesScalarWhereWithAggregatesInput | reporteCitasPendientesScalarWhereWithAggregatesInput[]
    OR?: reporteCitasPendientesScalarWhereWithAggregatesInput[]
    NOT?: reporteCitasPendientesScalarWhereWithAggregatesInput | reporteCitasPendientesScalarWhereWithAggregatesInput[]
    reporteID?: IntWithAggregatesFilter<"reporteCitasPendientes"> | number
    citaID?: IntNullableWithAggregatesFilter<"reporteCitasPendientes"> | number | null
    clienteID?: IntNullableWithAggregatesFilter<"reporteCitasPendientes"> | number | null
    fechaCita?: DateTimeNullableWithAggregatesFilter<"reporteCitasPendientes"> | Date | string | null
    estilistaID?: IntNullableWithAggregatesFilter<"reporteCitasPendientes"> | number | null
  }

  export type reporteClientesCitasWhereInput = {
    AND?: reporteClientesCitasWhereInput | reporteClientesCitasWhereInput[]
    OR?: reporteClientesCitasWhereInput[]
    NOT?: reporteClientesCitasWhereInput | reporteClientesCitasWhereInput[]
    reporteID?: IntFilter<"reporteClientesCitas"> | number
    clienteID?: IntNullableFilter<"reporteClientesCitas"> | number | null
    citaID?: IntNullableFilter<"reporteClientesCitas"> | number | null
    nombreCliente?: StringNullableFilter<"reporteClientesCitas"> | string | null
    fechaCita?: DateTimeNullableFilter<"reporteClientesCitas"> | Date | string | null
    servicioID?: IntNullableFilter<"reporteClientesCitas"> | number | null
    citas?: XOR<CitasNullableRelationFilter, citasWhereInput> | null
    clientes?: XOR<ClientesNullableRelationFilter, clientesWhereInput> | null
    catalogo?: XOR<CatalogoNullableRelationFilter, catalogoWhereInput> | null
  }

  export type reporteClientesCitasOrderByWithRelationInput = {
    reporteID?: SortOrder
    clienteID?: SortOrderInput | SortOrder
    citaID?: SortOrderInput | SortOrder
    nombreCliente?: SortOrderInput | SortOrder
    fechaCita?: SortOrderInput | SortOrder
    servicioID?: SortOrderInput | SortOrder
    citas?: citasOrderByWithRelationInput
    clientes?: clientesOrderByWithRelationInput
    catalogo?: catalogoOrderByWithRelationInput
  }

  export type reporteClientesCitasWhereUniqueInput = Prisma.AtLeast<{
    reporteID?: number
    AND?: reporteClientesCitasWhereInput | reporteClientesCitasWhereInput[]
    OR?: reporteClientesCitasWhereInput[]
    NOT?: reporteClientesCitasWhereInput | reporteClientesCitasWhereInput[]
    clienteID?: IntNullableFilter<"reporteClientesCitas"> | number | null
    citaID?: IntNullableFilter<"reporteClientesCitas"> | number | null
    nombreCliente?: StringNullableFilter<"reporteClientesCitas"> | string | null
    fechaCita?: DateTimeNullableFilter<"reporteClientesCitas"> | Date | string | null
    servicioID?: IntNullableFilter<"reporteClientesCitas"> | number | null
    citas?: XOR<CitasNullableRelationFilter, citasWhereInput> | null
    clientes?: XOR<ClientesNullableRelationFilter, clientesWhereInput> | null
    catalogo?: XOR<CatalogoNullableRelationFilter, catalogoWhereInput> | null
  }, "reporteID">

  export type reporteClientesCitasOrderByWithAggregationInput = {
    reporteID?: SortOrder
    clienteID?: SortOrderInput | SortOrder
    citaID?: SortOrderInput | SortOrder
    nombreCliente?: SortOrderInput | SortOrder
    fechaCita?: SortOrderInput | SortOrder
    servicioID?: SortOrderInput | SortOrder
    _count?: reporteClientesCitasCountOrderByAggregateInput
    _avg?: reporteClientesCitasAvgOrderByAggregateInput
    _max?: reporteClientesCitasMaxOrderByAggregateInput
    _min?: reporteClientesCitasMinOrderByAggregateInput
    _sum?: reporteClientesCitasSumOrderByAggregateInput
  }

  export type reporteClientesCitasScalarWhereWithAggregatesInput = {
    AND?: reporteClientesCitasScalarWhereWithAggregatesInput | reporteClientesCitasScalarWhereWithAggregatesInput[]
    OR?: reporteClientesCitasScalarWhereWithAggregatesInput[]
    NOT?: reporteClientesCitasScalarWhereWithAggregatesInput | reporteClientesCitasScalarWhereWithAggregatesInput[]
    reporteID?: IntWithAggregatesFilter<"reporteClientesCitas"> | number
    clienteID?: IntNullableWithAggregatesFilter<"reporteClientesCitas"> | number | null
    citaID?: IntNullableWithAggregatesFilter<"reporteClientesCitas"> | number | null
    nombreCliente?: StringNullableWithAggregatesFilter<"reporteClientesCitas"> | string | null
    fechaCita?: DateTimeNullableWithAggregatesFilter<"reporteClientesCitas"> | Date | string | null
    servicioID?: IntNullableWithAggregatesFilter<"reporteClientesCitas"> | number | null
  }

  export type reporteHorarioEstilistasWhereInput = {
    AND?: reporteHorarioEstilistasWhereInput | reporteHorarioEstilistasWhereInput[]
    OR?: reporteHorarioEstilistasWhereInput[]
    NOT?: reporteHorarioEstilistasWhereInput | reporteHorarioEstilistasWhereInput[]
    reporteID?: IntFilter<"reporteHorarioEstilistas"> | number
    estilistaID?: IntNullableFilter<"reporteHorarioEstilistas"> | number | null
    diaSemana?: StringNullableFilter<"reporteHorarioEstilistas"> | string | null
    horaInicio?: DateTimeNullableFilter<"reporteHorarioEstilistas"> | Date | string | null
    horaFinal?: DateTimeNullableFilter<"reporteHorarioEstilistas"> | Date | string | null
    estilistas?: XOR<EstilistasNullableRelationFilter, estilistasWhereInput> | null
  }

  export type reporteHorarioEstilistasOrderByWithRelationInput = {
    reporteID?: SortOrder
    estilistaID?: SortOrderInput | SortOrder
    diaSemana?: SortOrderInput | SortOrder
    horaInicio?: SortOrderInput | SortOrder
    horaFinal?: SortOrderInput | SortOrder
    estilistas?: estilistasOrderByWithRelationInput
  }

  export type reporteHorarioEstilistasWhereUniqueInput = Prisma.AtLeast<{
    reporteID?: number
    AND?: reporteHorarioEstilistasWhereInput | reporteHorarioEstilistasWhereInput[]
    OR?: reporteHorarioEstilistasWhereInput[]
    NOT?: reporteHorarioEstilistasWhereInput | reporteHorarioEstilistasWhereInput[]
    estilistaID?: IntNullableFilter<"reporteHorarioEstilistas"> | number | null
    diaSemana?: StringNullableFilter<"reporteHorarioEstilistas"> | string | null
    horaInicio?: DateTimeNullableFilter<"reporteHorarioEstilistas"> | Date | string | null
    horaFinal?: DateTimeNullableFilter<"reporteHorarioEstilistas"> | Date | string | null
    estilistas?: XOR<EstilistasNullableRelationFilter, estilistasWhereInput> | null
  }, "reporteID">

  export type reporteHorarioEstilistasOrderByWithAggregationInput = {
    reporteID?: SortOrder
    estilistaID?: SortOrderInput | SortOrder
    diaSemana?: SortOrderInput | SortOrder
    horaInicio?: SortOrderInput | SortOrder
    horaFinal?: SortOrderInput | SortOrder
    _count?: reporteHorarioEstilistasCountOrderByAggregateInput
    _avg?: reporteHorarioEstilistasAvgOrderByAggregateInput
    _max?: reporteHorarioEstilistasMaxOrderByAggregateInput
    _min?: reporteHorarioEstilistasMinOrderByAggregateInput
    _sum?: reporteHorarioEstilistasSumOrderByAggregateInput
  }

  export type reporteHorarioEstilistasScalarWhereWithAggregatesInput = {
    AND?: reporteHorarioEstilistasScalarWhereWithAggregatesInput | reporteHorarioEstilistasScalarWhereWithAggregatesInput[]
    OR?: reporteHorarioEstilistasScalarWhereWithAggregatesInput[]
    NOT?: reporteHorarioEstilistasScalarWhereWithAggregatesInput | reporteHorarioEstilistasScalarWhereWithAggregatesInput[]
    reporteID?: IntWithAggregatesFilter<"reporteHorarioEstilistas"> | number
    estilistaID?: IntNullableWithAggregatesFilter<"reporteHorarioEstilistas"> | number | null
    diaSemana?: StringNullableWithAggregatesFilter<"reporteHorarioEstilistas"> | string | null
    horaInicio?: DateTimeNullableWithAggregatesFilter<"reporteHorarioEstilistas"> | Date | string | null
    horaFinal?: DateTimeNullableWithAggregatesFilter<"reporteHorarioEstilistas"> | Date | string | null
  }

  export type rolesWhereInput = {
    AND?: rolesWhereInput | rolesWhereInput[]
    OR?: rolesWhereInput[]
    NOT?: rolesWhereInput | rolesWhereInput[]
    rolID?: IntFilter<"roles"> | number
    nombreRol?: StringNullableFilter<"roles"> | string | null
    administradores?: AdministradoresListRelationFilter
    clientes?: ClientesListRelationFilter
    estilistas?: EstilistasListRelationFilter
  }

  export type rolesOrderByWithRelationInput = {
    rolID?: SortOrder
    nombreRol?: SortOrderInput | SortOrder
    administradores?: administradoresOrderByRelationAggregateInput
    clientes?: clientesOrderByRelationAggregateInput
    estilistas?: estilistasOrderByRelationAggregateInput
  }

  export type rolesWhereUniqueInput = Prisma.AtLeast<{
    rolID?: number
    AND?: rolesWhereInput | rolesWhereInput[]
    OR?: rolesWhereInput[]
    NOT?: rolesWhereInput | rolesWhereInput[]
    nombreRol?: StringNullableFilter<"roles"> | string | null
    administradores?: AdministradoresListRelationFilter
    clientes?: ClientesListRelationFilter
    estilistas?: EstilistasListRelationFilter
  }, "rolID">

  export type rolesOrderByWithAggregationInput = {
    rolID?: SortOrder
    nombreRol?: SortOrderInput | SortOrder
    _count?: rolesCountOrderByAggregateInput
    _avg?: rolesAvgOrderByAggregateInput
    _max?: rolesMaxOrderByAggregateInput
    _min?: rolesMinOrderByAggregateInput
    _sum?: rolesSumOrderByAggregateInput
  }

  export type rolesScalarWhereWithAggregatesInput = {
    AND?: rolesScalarWhereWithAggregatesInput | rolesScalarWhereWithAggregatesInput[]
    OR?: rolesScalarWhereWithAggregatesInput[]
    NOT?: rolesScalarWhereWithAggregatesInput | rolesScalarWhereWithAggregatesInput[]
    rolID?: IntWithAggregatesFilter<"roles"> | number
    nombreRol?: StringNullableWithAggregatesFilter<"roles"> | string | null
  }

  export type administradoresCreateInput = {
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    contrase_a?: string | null
    roles?: rolesCreateNestedOneWithoutAdministradoresInput
  }

  export type administradoresUncheckedCreateInput = {
    adminID?: number
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    contrase_a?: string | null
    rolID?: number | null
  }

  export type administradoresUpdateInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: rolesUpdateOneWithoutAdministradoresNestedInput
  }

  export type administradoresUncheckedUpdateInput = {
    adminID?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    rolID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type administradoresCreateManyInput = {
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    contrase_a?: string | null
    rolID?: number | null
  }

  export type administradoresUpdateManyMutationInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type administradoresUncheckedUpdateManyInput = {
    adminID?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    rolID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type bloqueoHorariosCreateInput = {
    dia?: string | null
    horaInicio?: Date | string | null
    horaFinal?: Date | string | null
    motivo?: string | null
    estilistas?: estilistasCreateNestedOneWithoutBloqueoHorariosInput
  }

  export type bloqueoHorariosUncheckedCreateInput = {
    bloqueoID?: number
    estilistaID?: number | null
    dia?: string | null
    horaInicio?: Date | string | null
    horaFinal?: Date | string | null
    motivo?: string | null
  }

  export type bloqueoHorariosUpdateInput = {
    dia?: NullableStringFieldUpdateOperationsInput | string | null
    horaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horaFinal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    estilistas?: estilistasUpdateOneWithoutBloqueoHorariosNestedInput
  }

  export type bloqueoHorariosUncheckedUpdateInput = {
    bloqueoID?: IntFieldUpdateOperationsInput | number
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
    dia?: NullableStringFieldUpdateOperationsInput | string | null
    horaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horaFinal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type bloqueoHorariosCreateManyInput = {
    estilistaID?: number | null
    dia?: string | null
    horaInicio?: Date | string | null
    horaFinal?: Date | string | null
    motivo?: string | null
  }

  export type bloqueoHorariosUpdateManyMutationInput = {
    dia?: NullableStringFieldUpdateOperationsInput | string | null
    horaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horaFinal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type bloqueoHorariosUncheckedUpdateManyInput = {
    bloqueoID?: IntFieldUpdateOperationsInput | number
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
    dia?: NullableStringFieldUpdateOperationsInput | string | null
    horaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horaFinal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type catalogoCreateInput = {
    nombreServicio?: string | null
    descripcion?: string | null
    precio?: number | null
    citas?: citasCreateNestedManyWithoutCatalogoInput
    detalleServicio?: detalleServicioCreateNestedManyWithoutCatalogoInput
    historialClientes?: historialClientesCreateNestedManyWithoutCatalogoInput
    recompensas?: recompensasCreateNestedManyWithoutCatalogoInput
    reporteClientesCitas?: reporteClientesCitasCreateNestedManyWithoutCatalogoInput
  }

  export type catalogoUncheckedCreateInput = {
    servicioID?: number
    nombreServicio?: string | null
    descripcion?: string | null
    precio?: number | null
    citas?: citasUncheckedCreateNestedManyWithoutCatalogoInput
    detalleServicio?: detalleServicioUncheckedCreateNestedManyWithoutCatalogoInput
    historialClientes?: historialClientesUncheckedCreateNestedManyWithoutCatalogoInput
    recompensas?: recompensasUncheckedCreateNestedManyWithoutCatalogoInput
    reporteClientesCitas?: reporteClientesCitasUncheckedCreateNestedManyWithoutCatalogoInput
  }

  export type catalogoUpdateInput = {
    nombreServicio?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: NullableIntFieldUpdateOperationsInput | number | null
    citas?: citasUpdateManyWithoutCatalogoNestedInput
    detalleServicio?: detalleServicioUpdateManyWithoutCatalogoNestedInput
    historialClientes?: historialClientesUpdateManyWithoutCatalogoNestedInput
    recompensas?: recompensasUpdateManyWithoutCatalogoNestedInput
    reporteClientesCitas?: reporteClientesCitasUpdateManyWithoutCatalogoNestedInput
  }

  export type catalogoUncheckedUpdateInput = {
    servicioID?: IntFieldUpdateOperationsInput | number
    nombreServicio?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: NullableIntFieldUpdateOperationsInput | number | null
    citas?: citasUncheckedUpdateManyWithoutCatalogoNestedInput
    detalleServicio?: detalleServicioUncheckedUpdateManyWithoutCatalogoNestedInput
    historialClientes?: historialClientesUncheckedUpdateManyWithoutCatalogoNestedInput
    recompensas?: recompensasUncheckedUpdateManyWithoutCatalogoNestedInput
    reporteClientesCitas?: reporteClientesCitasUncheckedUpdateManyWithoutCatalogoNestedInput
  }

  export type catalogoCreateManyInput = {
    nombreServicio?: string | null
    descripcion?: string | null
    precio?: number | null
  }

  export type catalogoUpdateManyMutationInput = {
    nombreServicio?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type catalogoUncheckedUpdateManyInput = {
    servicioID?: IntFieldUpdateOperationsInput | number
    nombreServicio?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type citasCreateInput = {
    fechaCita?: Date | string | null
    comentarios?: string | null
    clientes?: clientesCreateNestedOneWithoutCitasInput
    estilistas?: estilistasCreateNestedOneWithoutCitasInput
    galeriaEstilos?: galeriaEstilosCreateNestedOneWithoutCitasInput
    catalogo?: catalogoCreateNestedOneWithoutCitasInput
    citasReagendadas?: citasReagendadasCreateNestedManyWithoutCitasInput
    historialCitas?: historialCitasCreateNestedManyWithoutCitasInput
    reporteCitasPendientes?: reporteCitasPendientesCreateNestedManyWithoutCitasInput
    reporteClientesCitas?: reporteClientesCitasCreateNestedManyWithoutCitasInput
  }

  export type citasUncheckedCreateInput = {
    citaID?: number
    clienteID?: number | null
    estilistaID?: number | null
    servicioID?: number | null
    fechaCita?: Date | string | null
    estiloID?: number | null
    comentarios?: string | null
    citasReagendadas?: citasReagendadasUncheckedCreateNestedManyWithoutCitasInput
    historialCitas?: historialCitasUncheckedCreateNestedManyWithoutCitasInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedCreateNestedManyWithoutCitasInput
    reporteClientesCitas?: reporteClientesCitasUncheckedCreateNestedManyWithoutCitasInput
  }

  export type citasUpdateInput = {
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    clientes?: clientesUpdateOneWithoutCitasNestedInput
    estilistas?: estilistasUpdateOneWithoutCitasNestedInput
    galeriaEstilos?: galeriaEstilosUpdateOneWithoutCitasNestedInput
    catalogo?: catalogoUpdateOneWithoutCitasNestedInput
    citasReagendadas?: citasReagendadasUpdateManyWithoutCitasNestedInput
    historialCitas?: historialCitasUpdateManyWithoutCitasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUpdateManyWithoutCitasNestedInput
    reporteClientesCitas?: reporteClientesCitasUpdateManyWithoutCitasNestedInput
  }

  export type citasUncheckedUpdateInput = {
    citaID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estiloID?: NullableIntFieldUpdateOperationsInput | number | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    citasReagendadas?: citasReagendadasUncheckedUpdateManyWithoutCitasNestedInput
    historialCitas?: historialCitasUncheckedUpdateManyWithoutCitasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedUpdateManyWithoutCitasNestedInput
    reporteClientesCitas?: reporteClientesCitasUncheckedUpdateManyWithoutCitasNestedInput
  }

  export type citasCreateManyInput = {
    clienteID?: number | null
    estilistaID?: number | null
    servicioID?: number | null
    fechaCita?: Date | string | null
    estiloID?: number | null
    comentarios?: string | null
  }

  export type citasUpdateManyMutationInput = {
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type citasUncheckedUpdateManyInput = {
    citaID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estiloID?: NullableIntFieldUpdateOperationsInput | number | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type citasReagendadasCreateInput = {
    idCitaNueva?: number | null
    fechaNuevaCita?: Date | string | null
    motivo?: string | null
    citas?: citasCreateNestedOneWithoutCitasReagendadasInput
  }

  export type citasReagendadasUncheckedCreateInput = {
    reagendadaID?: number
    citaID?: number | null
    idCitaNueva?: number | null
    fechaNuevaCita?: Date | string | null
    motivo?: string | null
  }

  export type citasReagendadasUpdateInput = {
    idCitaNueva?: NullableIntFieldUpdateOperationsInput | number | null
    fechaNuevaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    citas?: citasUpdateOneWithoutCitasReagendadasNestedInput
  }

  export type citasReagendadasUncheckedUpdateInput = {
    reagendadaID?: IntFieldUpdateOperationsInput | number
    citaID?: NullableIntFieldUpdateOperationsInput | number | null
    idCitaNueva?: NullableIntFieldUpdateOperationsInput | number | null
    fechaNuevaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type citasReagendadasCreateManyInput = {
    citaID?: number | null
    idCitaNueva?: number | null
    fechaNuevaCita?: Date | string | null
    motivo?: string | null
  }

  export type citasReagendadasUpdateManyMutationInput = {
    idCitaNueva?: NullableIntFieldUpdateOperationsInput | number | null
    fechaNuevaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type citasReagendadasUncheckedUpdateManyInput = {
    reagendadaID?: IntFieldUpdateOperationsInput | number
    citaID?: NullableIntFieldUpdateOperationsInput | number | null
    idCitaNueva?: NullableIntFieldUpdateOperationsInput | number | null
    fechaNuevaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type clientesCreateInput = {
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    puntosGanados?: number | null
    puntosCanjeados?: number | null
    contrase_a?: string | null
    estado?: string | null
    citas?: citasCreateNestedManyWithoutClientesInput
    roles?: rolesCreateNestedOneWithoutClientesInput
    historialCitas?: historialCitasCreateNestedManyWithoutClientesInput
    historialClientes?: historialClientesCreateNestedManyWithoutClientesInput
    historialCuenta?: historialCuentaCreateNestedManyWithoutClientesInput
    historialGastoPuntos?: historialGastoPuntosCreateNestedManyWithoutClientesInput
    puntosClientes?: puntosClientesCreateNestedManyWithoutClientesInput
    reporteCitasPendientes?: reporteCitasPendientesCreateNestedManyWithoutClientesInput
    reporteClientesCitas?: reporteClientesCitasCreateNestedManyWithoutClientesInput
  }

  export type clientesUncheckedCreateInput = {
    clienteID?: number
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    puntosGanados?: number | null
    puntosCanjeados?: number | null
    contrase_a?: string | null
    rolID?: number | null
    estado?: string | null
    citas?: citasUncheckedCreateNestedManyWithoutClientesInput
    historialCitas?: historialCitasUncheckedCreateNestedManyWithoutClientesInput
    historialClientes?: historialClientesUncheckedCreateNestedManyWithoutClientesInput
    historialCuenta?: historialCuentaUncheckedCreateNestedManyWithoutClientesInput
    historialGastoPuntos?: historialGastoPuntosUncheckedCreateNestedManyWithoutClientesInput
    puntosClientes?: puntosClientesUncheckedCreateNestedManyWithoutClientesInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedCreateNestedManyWithoutClientesInput
    reporteClientesCitas?: reporteClientesCitasUncheckedCreateNestedManyWithoutClientesInput
  }

  export type clientesUpdateInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    puntosGanados?: NullableIntFieldUpdateOperationsInput | number | null
    puntosCanjeados?: NullableIntFieldUpdateOperationsInput | number | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    citas?: citasUpdateManyWithoutClientesNestedInput
    roles?: rolesUpdateOneWithoutClientesNestedInput
    historialCitas?: historialCitasUpdateManyWithoutClientesNestedInput
    historialClientes?: historialClientesUpdateManyWithoutClientesNestedInput
    historialCuenta?: historialCuentaUpdateManyWithoutClientesNestedInput
    historialGastoPuntos?: historialGastoPuntosUpdateManyWithoutClientesNestedInput
    puntosClientes?: puntosClientesUpdateManyWithoutClientesNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUpdateManyWithoutClientesNestedInput
    reporteClientesCitas?: reporteClientesCitasUpdateManyWithoutClientesNestedInput
  }

  export type clientesUncheckedUpdateInput = {
    clienteID?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    puntosGanados?: NullableIntFieldUpdateOperationsInput | number | null
    puntosCanjeados?: NullableIntFieldUpdateOperationsInput | number | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    rolID?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    citas?: citasUncheckedUpdateManyWithoutClientesNestedInput
    historialCitas?: historialCitasUncheckedUpdateManyWithoutClientesNestedInput
    historialClientes?: historialClientesUncheckedUpdateManyWithoutClientesNestedInput
    historialCuenta?: historialCuentaUncheckedUpdateManyWithoutClientesNestedInput
    historialGastoPuntos?: historialGastoPuntosUncheckedUpdateManyWithoutClientesNestedInput
    puntosClientes?: puntosClientesUncheckedUpdateManyWithoutClientesNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedUpdateManyWithoutClientesNestedInput
    reporteClientesCitas?: reporteClientesCitasUncheckedUpdateManyWithoutClientesNestedInput
  }

  export type clientesCreateManyInput = {
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    puntosGanados?: number | null
    puntosCanjeados?: number | null
    contrase_a?: string | null
    rolID?: number | null
    estado?: string | null
  }

  export type clientesUpdateManyMutationInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    puntosGanados?: NullableIntFieldUpdateOperationsInput | number | null
    puntosCanjeados?: NullableIntFieldUpdateOperationsInput | number | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type clientesUncheckedUpdateManyInput = {
    clienteID?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    puntosGanados?: NullableIntFieldUpdateOperationsInput | number | null
    puntosCanjeados?: NullableIntFieldUpdateOperationsInput | number | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    rolID?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type detalleServicioCreateInput = {
    tiempoEstimado?: Date | string | null
    catalogo?: catalogoCreateNestedOneWithoutDetalleServicioInput
  }

  export type detalleServicioUncheckedCreateInput = {
    detalleID?: number
    servicioID?: number | null
    tiempoEstimado?: Date | string | null
  }

  export type detalleServicioUpdateInput = {
    tiempoEstimado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    catalogo?: catalogoUpdateOneWithoutDetalleServicioNestedInput
  }

  export type detalleServicioUncheckedUpdateInput = {
    detalleID?: IntFieldUpdateOperationsInput | number
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
    tiempoEstimado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type detalleServicioCreateManyInput = {
    servicioID?: number | null
    tiempoEstimado?: Date | string | null
  }

  export type detalleServicioUpdateManyMutationInput = {
    tiempoEstimado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type detalleServicioUncheckedUpdateManyInput = {
    detalleID?: IntFieldUpdateOperationsInput | number
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
    tiempoEstimado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type disponibilidadTiempoRealCreateInput = {
    diaSemana?: string | null
    horaInicio?: Date | string | null
    horaFinal?: Date | string | null
    estilistas?: estilistasCreateNestedOneWithoutDisponibilidadTiempoRealInput
  }

  export type disponibilidadTiempoRealUncheckedCreateInput = {
    disponibilidadID?: number
    estilistaID?: number | null
    diaSemana?: string | null
    horaInicio?: Date | string | null
    horaFinal?: Date | string | null
  }

  export type disponibilidadTiempoRealUpdateInput = {
    diaSemana?: NullableStringFieldUpdateOperationsInput | string | null
    horaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horaFinal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estilistas?: estilistasUpdateOneWithoutDisponibilidadTiempoRealNestedInput
  }

  export type disponibilidadTiempoRealUncheckedUpdateInput = {
    disponibilidadID?: IntFieldUpdateOperationsInput | number
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
    diaSemana?: NullableStringFieldUpdateOperationsInput | string | null
    horaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horaFinal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type disponibilidadTiempoRealCreateManyInput = {
    estilistaID?: number | null
    diaSemana?: string | null
    horaInicio?: Date | string | null
    horaFinal?: Date | string | null
  }

  export type disponibilidadTiempoRealUpdateManyMutationInput = {
    diaSemana?: NullableStringFieldUpdateOperationsInput | string | null
    horaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horaFinal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type disponibilidadTiempoRealUncheckedUpdateManyInput = {
    disponibilidadID?: IntFieldUpdateOperationsInput | number
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
    diaSemana?: NullableStringFieldUpdateOperationsInput | string | null
    horaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horaFinal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type estilistasCreateInput = {
    nombre?: string | null
    apellidos?: string | null
    telefono?: string | null
    direccion?: string | null
    fechaIngreso?: Date | string | null
    fechaSalida?: Date | string | null
    correo?: string | null
    contrase_a?: string | null
    estado?: string | null
    bloqueoHorarios?: bloqueoHorariosCreateNestedManyWithoutEstilistasInput
    citas?: citasCreateNestedManyWithoutEstilistasInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealCreateNestedManyWithoutEstilistasInput
    roles?: rolesCreateNestedOneWithoutEstilistasInput
    historialCitas?: historialCitasCreateNestedManyWithoutEstilistasInput
    reporteCitasPendientes?: reporteCitasPendientesCreateNestedManyWithoutEstilistasInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasCreateNestedManyWithoutEstilistasInput
  }

  export type estilistasUncheckedCreateInput = {
    estilistaID?: number
    nombre?: string | null
    apellidos?: string | null
    telefono?: string | null
    direccion?: string | null
    fechaIngreso?: Date | string | null
    fechaSalida?: Date | string | null
    correo?: string | null
    contrase_a?: string | null
    rolID?: number | null
    estado?: string | null
    bloqueoHorarios?: bloqueoHorariosUncheckedCreateNestedManyWithoutEstilistasInput
    citas?: citasUncheckedCreateNestedManyWithoutEstilistasInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealUncheckedCreateNestedManyWithoutEstilistasInput
    historialCitas?: historialCitasUncheckedCreateNestedManyWithoutEstilistasInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedCreateNestedManyWithoutEstilistasInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasUncheckedCreateNestedManyWithoutEstilistasInput
  }

  export type estilistasUpdateInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaIngreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    bloqueoHorarios?: bloqueoHorariosUpdateManyWithoutEstilistasNestedInput
    citas?: citasUpdateManyWithoutEstilistasNestedInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealUpdateManyWithoutEstilistasNestedInput
    roles?: rolesUpdateOneWithoutEstilistasNestedInput
    historialCitas?: historialCitasUpdateManyWithoutEstilistasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUpdateManyWithoutEstilistasNestedInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasUpdateManyWithoutEstilistasNestedInput
  }

  export type estilistasUncheckedUpdateInput = {
    estilistaID?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaIngreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    rolID?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    bloqueoHorarios?: bloqueoHorariosUncheckedUpdateManyWithoutEstilistasNestedInput
    citas?: citasUncheckedUpdateManyWithoutEstilistasNestedInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealUncheckedUpdateManyWithoutEstilistasNestedInput
    historialCitas?: historialCitasUncheckedUpdateManyWithoutEstilistasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedUpdateManyWithoutEstilistasNestedInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasUncheckedUpdateManyWithoutEstilistasNestedInput
  }

  export type estilistasCreateManyInput = {
    nombre?: string | null
    apellidos?: string | null
    telefono?: string | null
    direccion?: string | null
    fechaIngreso?: Date | string | null
    fechaSalida?: Date | string | null
    correo?: string | null
    contrase_a?: string | null
    rolID?: number | null
    estado?: string | null
  }

  export type estilistasUpdateManyMutationInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaIngreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type estilistasUncheckedUpdateManyInput = {
    estilistaID?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaIngreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    rolID?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type galeriaEstilosCreateInput = {
    nombreEstilo?: string | null
    rutaImagen?: string | null
    citas?: citasCreateNestedManyWithoutGaleriaEstilosInput
  }

  export type galeriaEstilosUncheckedCreateInput = {
    estiloID?: number
    nombreEstilo?: string | null
    rutaImagen?: string | null
    citas?: citasUncheckedCreateNestedManyWithoutGaleriaEstilosInput
  }

  export type galeriaEstilosUpdateInput = {
    nombreEstilo?: NullableStringFieldUpdateOperationsInput | string | null
    rutaImagen?: NullableStringFieldUpdateOperationsInput | string | null
    citas?: citasUpdateManyWithoutGaleriaEstilosNestedInput
  }

  export type galeriaEstilosUncheckedUpdateInput = {
    estiloID?: IntFieldUpdateOperationsInput | number
    nombreEstilo?: NullableStringFieldUpdateOperationsInput | string | null
    rutaImagen?: NullableStringFieldUpdateOperationsInput | string | null
    citas?: citasUncheckedUpdateManyWithoutGaleriaEstilosNestedInput
  }

  export type galeriaEstilosCreateManyInput = {
    nombreEstilo?: string | null
    rutaImagen?: string | null
  }

  export type galeriaEstilosUpdateManyMutationInput = {
    nombreEstilo?: NullableStringFieldUpdateOperationsInput | string | null
    rutaImagen?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type galeriaEstilosUncheckedUpdateManyInput = {
    estiloID?: IntFieldUpdateOperationsInput | number
    nombreEstilo?: NullableStringFieldUpdateOperationsInput | string | null
    rutaImagen?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type historialCitasCreateInput = {
    fechaCita?: Date | string | null
    servicioID?: number | null
    citas?: citasCreateNestedOneWithoutHistorialCitasInput
    clientes?: clientesCreateNestedOneWithoutHistorialCitasInput
    estilistas?: estilistasCreateNestedOneWithoutHistorialCitasInput
  }

  export type historialCitasUncheckedCreateInput = {
    historialID?: number
    citaID?: number | null
    clienteID?: number | null
    estilistaID?: number | null
    fechaCita?: Date | string | null
    servicioID?: number | null
  }

  export type historialCitasUpdateInput = {
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
    citas?: citasUpdateOneWithoutHistorialCitasNestedInput
    clientes?: clientesUpdateOneWithoutHistorialCitasNestedInput
    estilistas?: estilistasUpdateOneWithoutHistorialCitasNestedInput
  }

  export type historialCitasUncheckedUpdateInput = {
    historialID?: IntFieldUpdateOperationsInput | number
    citaID?: NullableIntFieldUpdateOperationsInput | number | null
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type historialCitasCreateManyInput = {
    citaID?: number | null
    clienteID?: number | null
    estilistaID?: number | null
    fechaCita?: Date | string | null
    servicioID?: number | null
  }

  export type historialCitasUpdateManyMutationInput = {
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type historialCitasUncheckedUpdateManyInput = {
    historialID?: IntFieldUpdateOperationsInput | number
    citaID?: NullableIntFieldUpdateOperationsInput | number | null
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type historialClientesCreateInput = {
    nombreCliente?: string | null
    fechaRegistro?: Date | string | null
    clientes?: clientesCreateNestedOneWithoutHistorialClientesInput
    catalogo?: catalogoCreateNestedOneWithoutHistorialClientesInput
  }

  export type historialClientesUncheckedCreateInput = {
    historialID?: number
    clienteID?: number | null
    nombreCliente?: string | null
    fechaRegistro?: Date | string | null
    ultimoServicioID?: number | null
  }

  export type historialClientesUpdateInput = {
    nombreCliente?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRegistro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientes?: clientesUpdateOneWithoutHistorialClientesNestedInput
    catalogo?: catalogoUpdateOneWithoutHistorialClientesNestedInput
  }

  export type historialClientesUncheckedUpdateInput = {
    historialID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    nombreCliente?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRegistro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ultimoServicioID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type historialClientesCreateManyInput = {
    clienteID?: number | null
    nombreCliente?: string | null
    fechaRegistro?: Date | string | null
    ultimoServicioID?: number | null
  }

  export type historialClientesUpdateManyMutationInput = {
    nombreCliente?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRegistro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type historialClientesUncheckedUpdateManyInput = {
    historialID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    nombreCliente?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRegistro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ultimoServicioID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type historialCuentaCreateInput = {
    serviciosUtilizados?: number | null
    ultimaConexion?: Date | string | null
    clientes?: clientesCreateNestedOneWithoutHistorialCuentaInput
  }

  export type historialCuentaUncheckedCreateInput = {
    historialID?: number
    clienteID?: number | null
    serviciosUtilizados?: number | null
    ultimaConexion?: Date | string | null
  }

  export type historialCuentaUpdateInput = {
    serviciosUtilizados?: NullableIntFieldUpdateOperationsInput | number | null
    ultimaConexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientes?: clientesUpdateOneWithoutHistorialCuentaNestedInput
  }

  export type historialCuentaUncheckedUpdateInput = {
    historialID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    serviciosUtilizados?: NullableIntFieldUpdateOperationsInput | number | null
    ultimaConexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type historialCuentaCreateManyInput = {
    clienteID?: number | null
    serviciosUtilizados?: number | null
    ultimaConexion?: Date | string | null
  }

  export type historialCuentaUpdateManyMutationInput = {
    serviciosUtilizados?: NullableIntFieldUpdateOperationsInput | number | null
    ultimaConexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type historialCuentaUncheckedUpdateManyInput = {
    historialID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    serviciosUtilizados?: NullableIntFieldUpdateOperationsInput | number | null
    ultimaConexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type historialGastoPuntosCreateInput = {
    puntosGastados?: number | null
    fecha?: Date | string | null
    descripcionGasto?: string | null
    clientes?: clientesCreateNestedOneWithoutHistorialGastoPuntosInput
  }

  export type historialGastoPuntosUncheckedCreateInput = {
    gastoID?: number
    clienteID?: number | null
    puntosGastados?: number | null
    fecha?: Date | string | null
    descripcionGasto?: string | null
  }

  export type historialGastoPuntosUpdateInput = {
    puntosGastados?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descripcionGasto?: NullableStringFieldUpdateOperationsInput | string | null
    clientes?: clientesUpdateOneWithoutHistorialGastoPuntosNestedInput
  }

  export type historialGastoPuntosUncheckedUpdateInput = {
    gastoID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    puntosGastados?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descripcionGasto?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type historialGastoPuntosCreateManyInput = {
    clienteID?: number | null
    puntosGastados?: number | null
    fecha?: Date | string | null
    descripcionGasto?: string | null
  }

  export type historialGastoPuntosUpdateManyMutationInput = {
    puntosGastados?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descripcionGasto?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type historialGastoPuntosUncheckedUpdateManyInput = {
    gastoID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    puntosGastados?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descripcionGasto?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type puntosClientesCreateInput = {
    saldoPuntos?: number | null
    clientes?: clientesCreateNestedOneWithoutPuntosClientesInput
  }

  export type puntosClientesUncheckedCreateInput = {
    puntosID?: number
    clienteID?: number | null
    saldoPuntos?: number | null
  }

  export type puntosClientesUpdateInput = {
    saldoPuntos?: NullableIntFieldUpdateOperationsInput | number | null
    clientes?: clientesUpdateOneWithoutPuntosClientesNestedInput
  }

  export type puntosClientesUncheckedUpdateInput = {
    puntosID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    saldoPuntos?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type puntosClientesCreateManyInput = {
    clienteID?: number | null
    saldoPuntos?: number | null
  }

  export type puntosClientesUpdateManyMutationInput = {
    saldoPuntos?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type puntosClientesUncheckedUpdateManyInput = {
    puntosID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    saldoPuntos?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type recompensasCreateInput = {
    puntosRecompensa?: number | null
    catalogo?: catalogoCreateNestedOneWithoutRecompensasInput
  }

  export type recompensasUncheckedCreateInput = {
    recompensaID?: number
    servicioID?: number | null
    puntosRecompensa?: number | null
  }

  export type recompensasUpdateInput = {
    puntosRecompensa?: NullableIntFieldUpdateOperationsInput | number | null
    catalogo?: catalogoUpdateOneWithoutRecompensasNestedInput
  }

  export type recompensasUncheckedUpdateInput = {
    recompensaID?: IntFieldUpdateOperationsInput | number
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
    puntosRecompensa?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type recompensasCreateManyInput = {
    servicioID?: number | null
    puntosRecompensa?: number | null
  }

  export type recompensasUpdateManyMutationInput = {
    puntosRecompensa?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type recompensasUncheckedUpdateManyInput = {
    recompensaID?: IntFieldUpdateOperationsInput | number
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
    puntosRecompensa?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type reporteCitasPendientesCreateInput = {
    fechaCita?: Date | string | null
    citas?: citasCreateNestedOneWithoutReporteCitasPendientesInput
    clientes?: clientesCreateNestedOneWithoutReporteCitasPendientesInput
    estilistas?: estilistasCreateNestedOneWithoutReporteCitasPendientesInput
  }

  export type reporteCitasPendientesUncheckedCreateInput = {
    reporteID?: number
    citaID?: number | null
    clienteID?: number | null
    fechaCita?: Date | string | null
    estilistaID?: number | null
  }

  export type reporteCitasPendientesUpdateInput = {
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    citas?: citasUpdateOneWithoutReporteCitasPendientesNestedInput
    clientes?: clientesUpdateOneWithoutReporteCitasPendientesNestedInput
    estilistas?: estilistasUpdateOneWithoutReporteCitasPendientesNestedInput
  }

  export type reporteCitasPendientesUncheckedUpdateInput = {
    reporteID?: IntFieldUpdateOperationsInput | number
    citaID?: NullableIntFieldUpdateOperationsInput | number | null
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type reporteCitasPendientesCreateManyInput = {
    citaID?: number | null
    clienteID?: number | null
    fechaCita?: Date | string | null
    estilistaID?: number | null
  }

  export type reporteCitasPendientesUpdateManyMutationInput = {
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reporteCitasPendientesUncheckedUpdateManyInput = {
    reporteID?: IntFieldUpdateOperationsInput | number
    citaID?: NullableIntFieldUpdateOperationsInput | number | null
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type reporteClientesCitasCreateInput = {
    nombreCliente?: string | null
    fechaCita?: Date | string | null
    citas?: citasCreateNestedOneWithoutReporteClientesCitasInput
    clientes?: clientesCreateNestedOneWithoutReporteClientesCitasInput
    catalogo?: catalogoCreateNestedOneWithoutReporteClientesCitasInput
  }

  export type reporteClientesCitasUncheckedCreateInput = {
    reporteID?: number
    clienteID?: number | null
    citaID?: number | null
    nombreCliente?: string | null
    fechaCita?: Date | string | null
    servicioID?: number | null
  }

  export type reporteClientesCitasUpdateInput = {
    nombreCliente?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    citas?: citasUpdateOneWithoutReporteClientesCitasNestedInput
    clientes?: clientesUpdateOneWithoutReporteClientesCitasNestedInput
    catalogo?: catalogoUpdateOneWithoutReporteClientesCitasNestedInput
  }

  export type reporteClientesCitasUncheckedUpdateInput = {
    reporteID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    citaID?: NullableIntFieldUpdateOperationsInput | number | null
    nombreCliente?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type reporteClientesCitasCreateManyInput = {
    clienteID?: number | null
    citaID?: number | null
    nombreCliente?: string | null
    fechaCita?: Date | string | null
    servicioID?: number | null
  }

  export type reporteClientesCitasUpdateManyMutationInput = {
    nombreCliente?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reporteClientesCitasUncheckedUpdateManyInput = {
    reporteID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    citaID?: NullableIntFieldUpdateOperationsInput | number | null
    nombreCliente?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type reporteHorarioEstilistasCreateInput = {
    diaSemana?: string | null
    horaInicio?: Date | string | null
    horaFinal?: Date | string | null
    estilistas?: estilistasCreateNestedOneWithoutReporteHorarioEstilistasInput
  }

  export type reporteHorarioEstilistasUncheckedCreateInput = {
    reporteID?: number
    estilistaID?: number | null
    diaSemana?: string | null
    horaInicio?: Date | string | null
    horaFinal?: Date | string | null
  }

  export type reporteHorarioEstilistasUpdateInput = {
    diaSemana?: NullableStringFieldUpdateOperationsInput | string | null
    horaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horaFinal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estilistas?: estilistasUpdateOneWithoutReporteHorarioEstilistasNestedInput
  }

  export type reporteHorarioEstilistasUncheckedUpdateInput = {
    reporteID?: IntFieldUpdateOperationsInput | number
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
    diaSemana?: NullableStringFieldUpdateOperationsInput | string | null
    horaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horaFinal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reporteHorarioEstilistasCreateManyInput = {
    estilistaID?: number | null
    diaSemana?: string | null
    horaInicio?: Date | string | null
    horaFinal?: Date | string | null
  }

  export type reporteHorarioEstilistasUpdateManyMutationInput = {
    diaSemana?: NullableStringFieldUpdateOperationsInput | string | null
    horaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horaFinal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reporteHorarioEstilistasUncheckedUpdateManyInput = {
    reporteID?: IntFieldUpdateOperationsInput | number
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
    diaSemana?: NullableStringFieldUpdateOperationsInput | string | null
    horaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horaFinal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type rolesCreateInput = {
    nombreRol?: string | null
    administradores?: administradoresCreateNestedManyWithoutRolesInput
    clientes?: clientesCreateNestedManyWithoutRolesInput
    estilistas?: estilistasCreateNestedManyWithoutRolesInput
  }

  export type rolesUncheckedCreateInput = {
    rolID?: number
    nombreRol?: string | null
    administradores?: administradoresUncheckedCreateNestedManyWithoutRolesInput
    clientes?: clientesUncheckedCreateNestedManyWithoutRolesInput
    estilistas?: estilistasUncheckedCreateNestedManyWithoutRolesInput
  }

  export type rolesUpdateInput = {
    nombreRol?: NullableStringFieldUpdateOperationsInput | string | null
    administradores?: administradoresUpdateManyWithoutRolesNestedInput
    clientes?: clientesUpdateManyWithoutRolesNestedInput
    estilistas?: estilistasUpdateManyWithoutRolesNestedInput
  }

  export type rolesUncheckedUpdateInput = {
    rolID?: IntFieldUpdateOperationsInput | number
    nombreRol?: NullableStringFieldUpdateOperationsInput | string | null
    administradores?: administradoresUncheckedUpdateManyWithoutRolesNestedInput
    clientes?: clientesUncheckedUpdateManyWithoutRolesNestedInput
    estilistas?: estilistasUncheckedUpdateManyWithoutRolesNestedInput
  }

  export type rolesCreateManyInput = {
    nombreRol?: string | null
  }

  export type rolesUpdateManyMutationInput = {
    nombreRol?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type rolesUncheckedUpdateManyInput = {
    rolID?: IntFieldUpdateOperationsInput | number
    nombreRol?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type RolesNullableRelationFilter = {
    is?: rolesWhereInput | null
    isNot?: rolesWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type administradoresCountOrderByAggregateInput = {
    adminID?: SortOrder
    nombre?: SortOrder
    apellidos?: SortOrder
    correo?: SortOrder
    contrase_a?: SortOrder
    rolID?: SortOrder
  }

  export type administradoresAvgOrderByAggregateInput = {
    adminID?: SortOrder
    rolID?: SortOrder
  }

  export type administradoresMaxOrderByAggregateInput = {
    adminID?: SortOrder
    nombre?: SortOrder
    apellidos?: SortOrder
    correo?: SortOrder
    contrase_a?: SortOrder
    rolID?: SortOrder
  }

  export type administradoresMinOrderByAggregateInput = {
    adminID?: SortOrder
    nombre?: SortOrder
    apellidos?: SortOrder
    correo?: SortOrder
    contrase_a?: SortOrder
    rolID?: SortOrder
  }

  export type administradoresSumOrderByAggregateInput = {
    adminID?: SortOrder
    rolID?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type EstilistasNullableRelationFilter = {
    is?: estilistasWhereInput | null
    isNot?: estilistasWhereInput | null
  }

  export type bloqueoHorariosCountOrderByAggregateInput = {
    bloqueoID?: SortOrder
    estilistaID?: SortOrder
    dia?: SortOrder
    horaInicio?: SortOrder
    horaFinal?: SortOrder
    motivo?: SortOrder
  }

  export type bloqueoHorariosAvgOrderByAggregateInput = {
    bloqueoID?: SortOrder
    estilistaID?: SortOrder
  }

  export type bloqueoHorariosMaxOrderByAggregateInput = {
    bloqueoID?: SortOrder
    estilistaID?: SortOrder
    dia?: SortOrder
    horaInicio?: SortOrder
    horaFinal?: SortOrder
    motivo?: SortOrder
  }

  export type bloqueoHorariosMinOrderByAggregateInput = {
    bloqueoID?: SortOrder
    estilistaID?: SortOrder
    dia?: SortOrder
    horaInicio?: SortOrder
    horaFinal?: SortOrder
    motivo?: SortOrder
  }

  export type bloqueoHorariosSumOrderByAggregateInput = {
    bloqueoID?: SortOrder
    estilistaID?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type CitasListRelationFilter = {
    every?: citasWhereInput
    some?: citasWhereInput
    none?: citasWhereInput
  }

  export type DetalleServicioListRelationFilter = {
    every?: detalleServicioWhereInput
    some?: detalleServicioWhereInput
    none?: detalleServicioWhereInput
  }

  export type HistorialClientesListRelationFilter = {
    every?: historialClientesWhereInput
    some?: historialClientesWhereInput
    none?: historialClientesWhereInput
  }

  export type RecompensasListRelationFilter = {
    every?: recompensasWhereInput
    some?: recompensasWhereInput
    none?: recompensasWhereInput
  }

  export type ReporteClientesCitasListRelationFilter = {
    every?: reporteClientesCitasWhereInput
    some?: reporteClientesCitasWhereInput
    none?: reporteClientesCitasWhereInput
  }

  export type citasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type detalleServicioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type historialClientesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type recompensasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type reporteClientesCitasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type catalogoCountOrderByAggregateInput = {
    servicioID?: SortOrder
    nombreServicio?: SortOrder
    descripcion?: SortOrder
    precio?: SortOrder
  }

  export type catalogoAvgOrderByAggregateInput = {
    servicioID?: SortOrder
    precio?: SortOrder
  }

  export type catalogoMaxOrderByAggregateInput = {
    servicioID?: SortOrder
    nombreServicio?: SortOrder
    descripcion?: SortOrder
    precio?: SortOrder
  }

  export type catalogoMinOrderByAggregateInput = {
    servicioID?: SortOrder
    nombreServicio?: SortOrder
    descripcion?: SortOrder
    precio?: SortOrder
  }

  export type catalogoSumOrderByAggregateInput = {
    servicioID?: SortOrder
    precio?: SortOrder
  }

  export type ClientesNullableRelationFilter = {
    is?: clientesWhereInput | null
    isNot?: clientesWhereInput | null
  }

  export type GaleriaEstilosNullableRelationFilter = {
    is?: galeriaEstilosWhereInput | null
    isNot?: galeriaEstilosWhereInput | null
  }

  export type CatalogoNullableRelationFilter = {
    is?: catalogoWhereInput | null
    isNot?: catalogoWhereInput | null
  }

  export type CitasReagendadasListRelationFilter = {
    every?: citasReagendadasWhereInput
    some?: citasReagendadasWhereInput
    none?: citasReagendadasWhereInput
  }

  export type HistorialCitasListRelationFilter = {
    every?: historialCitasWhereInput
    some?: historialCitasWhereInput
    none?: historialCitasWhereInput
  }

  export type ReporteCitasPendientesListRelationFilter = {
    every?: reporteCitasPendientesWhereInput
    some?: reporteCitasPendientesWhereInput
    none?: reporteCitasPendientesWhereInput
  }

  export type citasReagendadasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type historialCitasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type reporteCitasPendientesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type citasCountOrderByAggregateInput = {
    citaID?: SortOrder
    clienteID?: SortOrder
    estilistaID?: SortOrder
    servicioID?: SortOrder
    fechaCita?: SortOrder
    estiloID?: SortOrder
    comentarios?: SortOrder
  }

  export type citasAvgOrderByAggregateInput = {
    citaID?: SortOrder
    clienteID?: SortOrder
    estilistaID?: SortOrder
    servicioID?: SortOrder
    estiloID?: SortOrder
  }

  export type citasMaxOrderByAggregateInput = {
    citaID?: SortOrder
    clienteID?: SortOrder
    estilistaID?: SortOrder
    servicioID?: SortOrder
    fechaCita?: SortOrder
    estiloID?: SortOrder
    comentarios?: SortOrder
  }

  export type citasMinOrderByAggregateInput = {
    citaID?: SortOrder
    clienteID?: SortOrder
    estilistaID?: SortOrder
    servicioID?: SortOrder
    fechaCita?: SortOrder
    estiloID?: SortOrder
    comentarios?: SortOrder
  }

  export type citasSumOrderByAggregateInput = {
    citaID?: SortOrder
    clienteID?: SortOrder
    estilistaID?: SortOrder
    servicioID?: SortOrder
    estiloID?: SortOrder
  }

  export type CitasNullableRelationFilter = {
    is?: citasWhereInput | null
    isNot?: citasWhereInput | null
  }

  export type citasReagendadasCountOrderByAggregateInput = {
    reagendadaID?: SortOrder
    citaID?: SortOrder
    idCitaNueva?: SortOrder
    fechaNuevaCita?: SortOrder
    motivo?: SortOrder
  }

  export type citasReagendadasAvgOrderByAggregateInput = {
    reagendadaID?: SortOrder
    citaID?: SortOrder
    idCitaNueva?: SortOrder
  }

  export type citasReagendadasMaxOrderByAggregateInput = {
    reagendadaID?: SortOrder
    citaID?: SortOrder
    idCitaNueva?: SortOrder
    fechaNuevaCita?: SortOrder
    motivo?: SortOrder
  }

  export type citasReagendadasMinOrderByAggregateInput = {
    reagendadaID?: SortOrder
    citaID?: SortOrder
    idCitaNueva?: SortOrder
    fechaNuevaCita?: SortOrder
    motivo?: SortOrder
  }

  export type citasReagendadasSumOrderByAggregateInput = {
    reagendadaID?: SortOrder
    citaID?: SortOrder
    idCitaNueva?: SortOrder
  }

  export type HistorialCuentaListRelationFilter = {
    every?: historialCuentaWhereInput
    some?: historialCuentaWhereInput
    none?: historialCuentaWhereInput
  }

  export type HistorialGastoPuntosListRelationFilter = {
    every?: historialGastoPuntosWhereInput
    some?: historialGastoPuntosWhereInput
    none?: historialGastoPuntosWhereInput
  }

  export type PuntosClientesListRelationFilter = {
    every?: puntosClientesWhereInput
    some?: puntosClientesWhereInput
    none?: puntosClientesWhereInput
  }

  export type historialCuentaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type historialGastoPuntosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type puntosClientesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type clientesCountOrderByAggregateInput = {
    clienteID?: SortOrder
    nombre?: SortOrder
    apellidos?: SortOrder
    correo?: SortOrder
    telefono?: SortOrder
    direccion?: SortOrder
    puntosGanados?: SortOrder
    puntosCanjeados?: SortOrder
    contrase_a?: SortOrder
    rolID?: SortOrder
    estado?: SortOrder
  }

  export type clientesAvgOrderByAggregateInput = {
    clienteID?: SortOrder
    puntosGanados?: SortOrder
    puntosCanjeados?: SortOrder
    rolID?: SortOrder
  }

  export type clientesMaxOrderByAggregateInput = {
    clienteID?: SortOrder
    nombre?: SortOrder
    apellidos?: SortOrder
    correo?: SortOrder
    telefono?: SortOrder
    direccion?: SortOrder
    puntosGanados?: SortOrder
    puntosCanjeados?: SortOrder
    contrase_a?: SortOrder
    rolID?: SortOrder
    estado?: SortOrder
  }

  export type clientesMinOrderByAggregateInput = {
    clienteID?: SortOrder
    nombre?: SortOrder
    apellidos?: SortOrder
    correo?: SortOrder
    telefono?: SortOrder
    direccion?: SortOrder
    puntosGanados?: SortOrder
    puntosCanjeados?: SortOrder
    contrase_a?: SortOrder
    rolID?: SortOrder
    estado?: SortOrder
  }

  export type clientesSumOrderByAggregateInput = {
    clienteID?: SortOrder
    puntosGanados?: SortOrder
    puntosCanjeados?: SortOrder
    rolID?: SortOrder
  }

  export type detalleServicioCountOrderByAggregateInput = {
    detalleID?: SortOrder
    servicioID?: SortOrder
    tiempoEstimado?: SortOrder
  }

  export type detalleServicioAvgOrderByAggregateInput = {
    detalleID?: SortOrder
    servicioID?: SortOrder
  }

  export type detalleServicioMaxOrderByAggregateInput = {
    detalleID?: SortOrder
    servicioID?: SortOrder
    tiempoEstimado?: SortOrder
  }

  export type detalleServicioMinOrderByAggregateInput = {
    detalleID?: SortOrder
    servicioID?: SortOrder
    tiempoEstimado?: SortOrder
  }

  export type detalleServicioSumOrderByAggregateInput = {
    detalleID?: SortOrder
    servicioID?: SortOrder
  }

  export type disponibilidadTiempoRealCountOrderByAggregateInput = {
    disponibilidadID?: SortOrder
    estilistaID?: SortOrder
    diaSemana?: SortOrder
    horaInicio?: SortOrder
    horaFinal?: SortOrder
  }

  export type disponibilidadTiempoRealAvgOrderByAggregateInput = {
    disponibilidadID?: SortOrder
    estilistaID?: SortOrder
  }

  export type disponibilidadTiempoRealMaxOrderByAggregateInput = {
    disponibilidadID?: SortOrder
    estilistaID?: SortOrder
    diaSemana?: SortOrder
    horaInicio?: SortOrder
    horaFinal?: SortOrder
  }

  export type disponibilidadTiempoRealMinOrderByAggregateInput = {
    disponibilidadID?: SortOrder
    estilistaID?: SortOrder
    diaSemana?: SortOrder
    horaInicio?: SortOrder
    horaFinal?: SortOrder
  }

  export type disponibilidadTiempoRealSumOrderByAggregateInput = {
    disponibilidadID?: SortOrder
    estilistaID?: SortOrder
  }

  export type BloqueoHorariosListRelationFilter = {
    every?: bloqueoHorariosWhereInput
    some?: bloqueoHorariosWhereInput
    none?: bloqueoHorariosWhereInput
  }

  export type DisponibilidadTiempoRealListRelationFilter = {
    every?: disponibilidadTiempoRealWhereInput
    some?: disponibilidadTiempoRealWhereInput
    none?: disponibilidadTiempoRealWhereInput
  }

  export type ReporteHorarioEstilistasListRelationFilter = {
    every?: reporteHorarioEstilistasWhereInput
    some?: reporteHorarioEstilistasWhereInput
    none?: reporteHorarioEstilistasWhereInput
  }

  export type bloqueoHorariosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type disponibilidadTiempoRealOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type reporteHorarioEstilistasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type estilistasCountOrderByAggregateInput = {
    estilistaID?: SortOrder
    nombre?: SortOrder
    apellidos?: SortOrder
    telefono?: SortOrder
    direccion?: SortOrder
    fechaIngreso?: SortOrder
    fechaSalida?: SortOrder
    correo?: SortOrder
    contrase_a?: SortOrder
    rolID?: SortOrder
    estado?: SortOrder
  }

  export type estilistasAvgOrderByAggregateInput = {
    estilistaID?: SortOrder
    rolID?: SortOrder
  }

  export type estilistasMaxOrderByAggregateInput = {
    estilistaID?: SortOrder
    nombre?: SortOrder
    apellidos?: SortOrder
    telefono?: SortOrder
    direccion?: SortOrder
    fechaIngreso?: SortOrder
    fechaSalida?: SortOrder
    correo?: SortOrder
    contrase_a?: SortOrder
    rolID?: SortOrder
    estado?: SortOrder
  }

  export type estilistasMinOrderByAggregateInput = {
    estilistaID?: SortOrder
    nombre?: SortOrder
    apellidos?: SortOrder
    telefono?: SortOrder
    direccion?: SortOrder
    fechaIngreso?: SortOrder
    fechaSalida?: SortOrder
    correo?: SortOrder
    contrase_a?: SortOrder
    rolID?: SortOrder
    estado?: SortOrder
  }

  export type estilistasSumOrderByAggregateInput = {
    estilistaID?: SortOrder
    rolID?: SortOrder
  }

  export type galeriaEstilosCountOrderByAggregateInput = {
    estiloID?: SortOrder
    nombreEstilo?: SortOrder
    rutaImagen?: SortOrder
  }

  export type galeriaEstilosAvgOrderByAggregateInput = {
    estiloID?: SortOrder
  }

  export type galeriaEstilosMaxOrderByAggregateInput = {
    estiloID?: SortOrder
    nombreEstilo?: SortOrder
    rutaImagen?: SortOrder
  }

  export type galeriaEstilosMinOrderByAggregateInput = {
    estiloID?: SortOrder
    nombreEstilo?: SortOrder
    rutaImagen?: SortOrder
  }

  export type galeriaEstilosSumOrderByAggregateInput = {
    estiloID?: SortOrder
  }

  export type historialCitasCountOrderByAggregateInput = {
    historialID?: SortOrder
    citaID?: SortOrder
    clienteID?: SortOrder
    estilistaID?: SortOrder
    fechaCita?: SortOrder
    servicioID?: SortOrder
  }

  export type historialCitasAvgOrderByAggregateInput = {
    historialID?: SortOrder
    citaID?: SortOrder
    clienteID?: SortOrder
    estilistaID?: SortOrder
    servicioID?: SortOrder
  }

  export type historialCitasMaxOrderByAggregateInput = {
    historialID?: SortOrder
    citaID?: SortOrder
    clienteID?: SortOrder
    estilistaID?: SortOrder
    fechaCita?: SortOrder
    servicioID?: SortOrder
  }

  export type historialCitasMinOrderByAggregateInput = {
    historialID?: SortOrder
    citaID?: SortOrder
    clienteID?: SortOrder
    estilistaID?: SortOrder
    fechaCita?: SortOrder
    servicioID?: SortOrder
  }

  export type historialCitasSumOrderByAggregateInput = {
    historialID?: SortOrder
    citaID?: SortOrder
    clienteID?: SortOrder
    estilistaID?: SortOrder
    servicioID?: SortOrder
  }

  export type historialClientesCountOrderByAggregateInput = {
    historialID?: SortOrder
    clienteID?: SortOrder
    nombreCliente?: SortOrder
    fechaRegistro?: SortOrder
    ultimoServicioID?: SortOrder
  }

  export type historialClientesAvgOrderByAggregateInput = {
    historialID?: SortOrder
    clienteID?: SortOrder
    ultimoServicioID?: SortOrder
  }

  export type historialClientesMaxOrderByAggregateInput = {
    historialID?: SortOrder
    clienteID?: SortOrder
    nombreCliente?: SortOrder
    fechaRegistro?: SortOrder
    ultimoServicioID?: SortOrder
  }

  export type historialClientesMinOrderByAggregateInput = {
    historialID?: SortOrder
    clienteID?: SortOrder
    nombreCliente?: SortOrder
    fechaRegistro?: SortOrder
    ultimoServicioID?: SortOrder
  }

  export type historialClientesSumOrderByAggregateInput = {
    historialID?: SortOrder
    clienteID?: SortOrder
    ultimoServicioID?: SortOrder
  }

  export type historialCuentaCountOrderByAggregateInput = {
    historialID?: SortOrder
    clienteID?: SortOrder
    serviciosUtilizados?: SortOrder
    ultimaConexion?: SortOrder
  }

  export type historialCuentaAvgOrderByAggregateInput = {
    historialID?: SortOrder
    clienteID?: SortOrder
    serviciosUtilizados?: SortOrder
  }

  export type historialCuentaMaxOrderByAggregateInput = {
    historialID?: SortOrder
    clienteID?: SortOrder
    serviciosUtilizados?: SortOrder
    ultimaConexion?: SortOrder
  }

  export type historialCuentaMinOrderByAggregateInput = {
    historialID?: SortOrder
    clienteID?: SortOrder
    serviciosUtilizados?: SortOrder
    ultimaConexion?: SortOrder
  }

  export type historialCuentaSumOrderByAggregateInput = {
    historialID?: SortOrder
    clienteID?: SortOrder
    serviciosUtilizados?: SortOrder
  }

  export type historialGastoPuntosCountOrderByAggregateInput = {
    gastoID?: SortOrder
    clienteID?: SortOrder
    puntosGastados?: SortOrder
    fecha?: SortOrder
    descripcionGasto?: SortOrder
  }

  export type historialGastoPuntosAvgOrderByAggregateInput = {
    gastoID?: SortOrder
    clienteID?: SortOrder
    puntosGastados?: SortOrder
  }

  export type historialGastoPuntosMaxOrderByAggregateInput = {
    gastoID?: SortOrder
    clienteID?: SortOrder
    puntosGastados?: SortOrder
    fecha?: SortOrder
    descripcionGasto?: SortOrder
  }

  export type historialGastoPuntosMinOrderByAggregateInput = {
    gastoID?: SortOrder
    clienteID?: SortOrder
    puntosGastados?: SortOrder
    fecha?: SortOrder
    descripcionGasto?: SortOrder
  }

  export type historialGastoPuntosSumOrderByAggregateInput = {
    gastoID?: SortOrder
    clienteID?: SortOrder
    puntosGastados?: SortOrder
  }

  export type puntosClientesCountOrderByAggregateInput = {
    puntosID?: SortOrder
    clienteID?: SortOrder
    saldoPuntos?: SortOrder
  }

  export type puntosClientesAvgOrderByAggregateInput = {
    puntosID?: SortOrder
    clienteID?: SortOrder
    saldoPuntos?: SortOrder
  }

  export type puntosClientesMaxOrderByAggregateInput = {
    puntosID?: SortOrder
    clienteID?: SortOrder
    saldoPuntos?: SortOrder
  }

  export type puntosClientesMinOrderByAggregateInput = {
    puntosID?: SortOrder
    clienteID?: SortOrder
    saldoPuntos?: SortOrder
  }

  export type puntosClientesSumOrderByAggregateInput = {
    puntosID?: SortOrder
    clienteID?: SortOrder
    saldoPuntos?: SortOrder
  }

  export type recompensasCountOrderByAggregateInput = {
    recompensaID?: SortOrder
    servicioID?: SortOrder
    puntosRecompensa?: SortOrder
  }

  export type recompensasAvgOrderByAggregateInput = {
    recompensaID?: SortOrder
    servicioID?: SortOrder
    puntosRecompensa?: SortOrder
  }

  export type recompensasMaxOrderByAggregateInput = {
    recompensaID?: SortOrder
    servicioID?: SortOrder
    puntosRecompensa?: SortOrder
  }

  export type recompensasMinOrderByAggregateInput = {
    recompensaID?: SortOrder
    servicioID?: SortOrder
    puntosRecompensa?: SortOrder
  }

  export type recompensasSumOrderByAggregateInput = {
    recompensaID?: SortOrder
    servicioID?: SortOrder
    puntosRecompensa?: SortOrder
  }

  export type reporteCitasPendientesCountOrderByAggregateInput = {
    reporteID?: SortOrder
    citaID?: SortOrder
    clienteID?: SortOrder
    fechaCita?: SortOrder
    estilistaID?: SortOrder
  }

  export type reporteCitasPendientesAvgOrderByAggregateInput = {
    reporteID?: SortOrder
    citaID?: SortOrder
    clienteID?: SortOrder
    estilistaID?: SortOrder
  }

  export type reporteCitasPendientesMaxOrderByAggregateInput = {
    reporteID?: SortOrder
    citaID?: SortOrder
    clienteID?: SortOrder
    fechaCita?: SortOrder
    estilistaID?: SortOrder
  }

  export type reporteCitasPendientesMinOrderByAggregateInput = {
    reporteID?: SortOrder
    citaID?: SortOrder
    clienteID?: SortOrder
    fechaCita?: SortOrder
    estilistaID?: SortOrder
  }

  export type reporteCitasPendientesSumOrderByAggregateInput = {
    reporteID?: SortOrder
    citaID?: SortOrder
    clienteID?: SortOrder
    estilistaID?: SortOrder
  }

  export type reporteClientesCitasCountOrderByAggregateInput = {
    reporteID?: SortOrder
    clienteID?: SortOrder
    citaID?: SortOrder
    nombreCliente?: SortOrder
    fechaCita?: SortOrder
    servicioID?: SortOrder
  }

  export type reporteClientesCitasAvgOrderByAggregateInput = {
    reporteID?: SortOrder
    clienteID?: SortOrder
    citaID?: SortOrder
    servicioID?: SortOrder
  }

  export type reporteClientesCitasMaxOrderByAggregateInput = {
    reporteID?: SortOrder
    clienteID?: SortOrder
    citaID?: SortOrder
    nombreCliente?: SortOrder
    fechaCita?: SortOrder
    servicioID?: SortOrder
  }

  export type reporteClientesCitasMinOrderByAggregateInput = {
    reporteID?: SortOrder
    clienteID?: SortOrder
    citaID?: SortOrder
    nombreCliente?: SortOrder
    fechaCita?: SortOrder
    servicioID?: SortOrder
  }

  export type reporteClientesCitasSumOrderByAggregateInput = {
    reporteID?: SortOrder
    clienteID?: SortOrder
    citaID?: SortOrder
    servicioID?: SortOrder
  }

  export type reporteHorarioEstilistasCountOrderByAggregateInput = {
    reporteID?: SortOrder
    estilistaID?: SortOrder
    diaSemana?: SortOrder
    horaInicio?: SortOrder
    horaFinal?: SortOrder
  }

  export type reporteHorarioEstilistasAvgOrderByAggregateInput = {
    reporteID?: SortOrder
    estilistaID?: SortOrder
  }

  export type reporteHorarioEstilistasMaxOrderByAggregateInput = {
    reporteID?: SortOrder
    estilistaID?: SortOrder
    diaSemana?: SortOrder
    horaInicio?: SortOrder
    horaFinal?: SortOrder
  }

  export type reporteHorarioEstilistasMinOrderByAggregateInput = {
    reporteID?: SortOrder
    estilistaID?: SortOrder
    diaSemana?: SortOrder
    horaInicio?: SortOrder
    horaFinal?: SortOrder
  }

  export type reporteHorarioEstilistasSumOrderByAggregateInput = {
    reporteID?: SortOrder
    estilistaID?: SortOrder
  }

  export type AdministradoresListRelationFilter = {
    every?: administradoresWhereInput
    some?: administradoresWhereInput
    none?: administradoresWhereInput
  }

  export type ClientesListRelationFilter = {
    every?: clientesWhereInput
    some?: clientesWhereInput
    none?: clientesWhereInput
  }

  export type EstilistasListRelationFilter = {
    every?: estilistasWhereInput
    some?: estilistasWhereInput
    none?: estilistasWhereInput
  }

  export type administradoresOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type clientesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type estilistasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type rolesCountOrderByAggregateInput = {
    rolID?: SortOrder
    nombreRol?: SortOrder
  }

  export type rolesAvgOrderByAggregateInput = {
    rolID?: SortOrder
  }

  export type rolesMaxOrderByAggregateInput = {
    rolID?: SortOrder
    nombreRol?: SortOrder
  }

  export type rolesMinOrderByAggregateInput = {
    rolID?: SortOrder
    nombreRol?: SortOrder
  }

  export type rolesSumOrderByAggregateInput = {
    rolID?: SortOrder
  }

  export type rolesCreateNestedOneWithoutAdministradoresInput = {
    create?: XOR<rolesCreateWithoutAdministradoresInput, rolesUncheckedCreateWithoutAdministradoresInput>
    connectOrCreate?: rolesCreateOrConnectWithoutAdministradoresInput
    connect?: rolesWhereUniqueInput
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type rolesUpdateOneWithoutAdministradoresNestedInput = {
    create?: XOR<rolesCreateWithoutAdministradoresInput, rolesUncheckedCreateWithoutAdministradoresInput>
    connectOrCreate?: rolesCreateOrConnectWithoutAdministradoresInput
    upsert?: rolesUpsertWithoutAdministradoresInput
    disconnect?: rolesWhereInput | boolean
    delete?: rolesWhereInput | boolean
    connect?: rolesWhereUniqueInput
    update?: XOR<XOR<rolesUpdateToOneWithWhereWithoutAdministradoresInput, rolesUpdateWithoutAdministradoresInput>, rolesUncheckedUpdateWithoutAdministradoresInput>
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type estilistasCreateNestedOneWithoutBloqueoHorariosInput = {
    create?: XOR<estilistasCreateWithoutBloqueoHorariosInput, estilistasUncheckedCreateWithoutBloqueoHorariosInput>
    connectOrCreate?: estilistasCreateOrConnectWithoutBloqueoHorariosInput
    connect?: estilistasWhereUniqueInput
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type estilistasUpdateOneWithoutBloqueoHorariosNestedInput = {
    create?: XOR<estilistasCreateWithoutBloqueoHorariosInput, estilistasUncheckedCreateWithoutBloqueoHorariosInput>
    connectOrCreate?: estilistasCreateOrConnectWithoutBloqueoHorariosInput
    upsert?: estilistasUpsertWithoutBloqueoHorariosInput
    disconnect?: estilistasWhereInput | boolean
    delete?: estilistasWhereInput | boolean
    connect?: estilistasWhereUniqueInput
    update?: XOR<XOR<estilistasUpdateToOneWithWhereWithoutBloqueoHorariosInput, estilistasUpdateWithoutBloqueoHorariosInput>, estilistasUncheckedUpdateWithoutBloqueoHorariosInput>
  }

  export type citasCreateNestedManyWithoutCatalogoInput = {
    create?: XOR<citasCreateWithoutCatalogoInput, citasUncheckedCreateWithoutCatalogoInput> | citasCreateWithoutCatalogoInput[] | citasUncheckedCreateWithoutCatalogoInput[]
    connectOrCreate?: citasCreateOrConnectWithoutCatalogoInput | citasCreateOrConnectWithoutCatalogoInput[]
    createMany?: citasCreateManyCatalogoInputEnvelope
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
  }

  export type detalleServicioCreateNestedManyWithoutCatalogoInput = {
    create?: XOR<detalleServicioCreateWithoutCatalogoInput, detalleServicioUncheckedCreateWithoutCatalogoInput> | detalleServicioCreateWithoutCatalogoInput[] | detalleServicioUncheckedCreateWithoutCatalogoInput[]
    connectOrCreate?: detalleServicioCreateOrConnectWithoutCatalogoInput | detalleServicioCreateOrConnectWithoutCatalogoInput[]
    createMany?: detalleServicioCreateManyCatalogoInputEnvelope
    connect?: detalleServicioWhereUniqueInput | detalleServicioWhereUniqueInput[]
  }

  export type historialClientesCreateNestedManyWithoutCatalogoInput = {
    create?: XOR<historialClientesCreateWithoutCatalogoInput, historialClientesUncheckedCreateWithoutCatalogoInput> | historialClientesCreateWithoutCatalogoInput[] | historialClientesUncheckedCreateWithoutCatalogoInput[]
    connectOrCreate?: historialClientesCreateOrConnectWithoutCatalogoInput | historialClientesCreateOrConnectWithoutCatalogoInput[]
    createMany?: historialClientesCreateManyCatalogoInputEnvelope
    connect?: historialClientesWhereUniqueInput | historialClientesWhereUniqueInput[]
  }

  export type recompensasCreateNestedManyWithoutCatalogoInput = {
    create?: XOR<recompensasCreateWithoutCatalogoInput, recompensasUncheckedCreateWithoutCatalogoInput> | recompensasCreateWithoutCatalogoInput[] | recompensasUncheckedCreateWithoutCatalogoInput[]
    connectOrCreate?: recompensasCreateOrConnectWithoutCatalogoInput | recompensasCreateOrConnectWithoutCatalogoInput[]
    createMany?: recompensasCreateManyCatalogoInputEnvelope
    connect?: recompensasWhereUniqueInput | recompensasWhereUniqueInput[]
  }

  export type reporteClientesCitasCreateNestedManyWithoutCatalogoInput = {
    create?: XOR<reporteClientesCitasCreateWithoutCatalogoInput, reporteClientesCitasUncheckedCreateWithoutCatalogoInput> | reporteClientesCitasCreateWithoutCatalogoInput[] | reporteClientesCitasUncheckedCreateWithoutCatalogoInput[]
    connectOrCreate?: reporteClientesCitasCreateOrConnectWithoutCatalogoInput | reporteClientesCitasCreateOrConnectWithoutCatalogoInput[]
    createMany?: reporteClientesCitasCreateManyCatalogoInputEnvelope
    connect?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
  }

  export type citasUncheckedCreateNestedManyWithoutCatalogoInput = {
    create?: XOR<citasCreateWithoutCatalogoInput, citasUncheckedCreateWithoutCatalogoInput> | citasCreateWithoutCatalogoInput[] | citasUncheckedCreateWithoutCatalogoInput[]
    connectOrCreate?: citasCreateOrConnectWithoutCatalogoInput | citasCreateOrConnectWithoutCatalogoInput[]
    createMany?: citasCreateManyCatalogoInputEnvelope
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
  }

  export type detalleServicioUncheckedCreateNestedManyWithoutCatalogoInput = {
    create?: XOR<detalleServicioCreateWithoutCatalogoInput, detalleServicioUncheckedCreateWithoutCatalogoInput> | detalleServicioCreateWithoutCatalogoInput[] | detalleServicioUncheckedCreateWithoutCatalogoInput[]
    connectOrCreate?: detalleServicioCreateOrConnectWithoutCatalogoInput | detalleServicioCreateOrConnectWithoutCatalogoInput[]
    createMany?: detalleServicioCreateManyCatalogoInputEnvelope
    connect?: detalleServicioWhereUniqueInput | detalleServicioWhereUniqueInput[]
  }

  export type historialClientesUncheckedCreateNestedManyWithoutCatalogoInput = {
    create?: XOR<historialClientesCreateWithoutCatalogoInput, historialClientesUncheckedCreateWithoutCatalogoInput> | historialClientesCreateWithoutCatalogoInput[] | historialClientesUncheckedCreateWithoutCatalogoInput[]
    connectOrCreate?: historialClientesCreateOrConnectWithoutCatalogoInput | historialClientesCreateOrConnectWithoutCatalogoInput[]
    createMany?: historialClientesCreateManyCatalogoInputEnvelope
    connect?: historialClientesWhereUniqueInput | historialClientesWhereUniqueInput[]
  }

  export type recompensasUncheckedCreateNestedManyWithoutCatalogoInput = {
    create?: XOR<recompensasCreateWithoutCatalogoInput, recompensasUncheckedCreateWithoutCatalogoInput> | recompensasCreateWithoutCatalogoInput[] | recompensasUncheckedCreateWithoutCatalogoInput[]
    connectOrCreate?: recompensasCreateOrConnectWithoutCatalogoInput | recompensasCreateOrConnectWithoutCatalogoInput[]
    createMany?: recompensasCreateManyCatalogoInputEnvelope
    connect?: recompensasWhereUniqueInput | recompensasWhereUniqueInput[]
  }

  export type reporteClientesCitasUncheckedCreateNestedManyWithoutCatalogoInput = {
    create?: XOR<reporteClientesCitasCreateWithoutCatalogoInput, reporteClientesCitasUncheckedCreateWithoutCatalogoInput> | reporteClientesCitasCreateWithoutCatalogoInput[] | reporteClientesCitasUncheckedCreateWithoutCatalogoInput[]
    connectOrCreate?: reporteClientesCitasCreateOrConnectWithoutCatalogoInput | reporteClientesCitasCreateOrConnectWithoutCatalogoInput[]
    createMany?: reporteClientesCitasCreateManyCatalogoInputEnvelope
    connect?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
  }

  export type citasUpdateManyWithoutCatalogoNestedInput = {
    create?: XOR<citasCreateWithoutCatalogoInput, citasUncheckedCreateWithoutCatalogoInput> | citasCreateWithoutCatalogoInput[] | citasUncheckedCreateWithoutCatalogoInput[]
    connectOrCreate?: citasCreateOrConnectWithoutCatalogoInput | citasCreateOrConnectWithoutCatalogoInput[]
    upsert?: citasUpsertWithWhereUniqueWithoutCatalogoInput | citasUpsertWithWhereUniqueWithoutCatalogoInput[]
    createMany?: citasCreateManyCatalogoInputEnvelope
    set?: citasWhereUniqueInput | citasWhereUniqueInput[]
    disconnect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    delete?: citasWhereUniqueInput | citasWhereUniqueInput[]
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    update?: citasUpdateWithWhereUniqueWithoutCatalogoInput | citasUpdateWithWhereUniqueWithoutCatalogoInput[]
    updateMany?: citasUpdateManyWithWhereWithoutCatalogoInput | citasUpdateManyWithWhereWithoutCatalogoInput[]
    deleteMany?: citasScalarWhereInput | citasScalarWhereInput[]
  }

  export type detalleServicioUpdateManyWithoutCatalogoNestedInput = {
    create?: XOR<detalleServicioCreateWithoutCatalogoInput, detalleServicioUncheckedCreateWithoutCatalogoInput> | detalleServicioCreateWithoutCatalogoInput[] | detalleServicioUncheckedCreateWithoutCatalogoInput[]
    connectOrCreate?: detalleServicioCreateOrConnectWithoutCatalogoInput | detalleServicioCreateOrConnectWithoutCatalogoInput[]
    upsert?: detalleServicioUpsertWithWhereUniqueWithoutCatalogoInput | detalleServicioUpsertWithWhereUniqueWithoutCatalogoInput[]
    createMany?: detalleServicioCreateManyCatalogoInputEnvelope
    set?: detalleServicioWhereUniqueInput | detalleServicioWhereUniqueInput[]
    disconnect?: detalleServicioWhereUniqueInput | detalleServicioWhereUniqueInput[]
    delete?: detalleServicioWhereUniqueInput | detalleServicioWhereUniqueInput[]
    connect?: detalleServicioWhereUniqueInput | detalleServicioWhereUniqueInput[]
    update?: detalleServicioUpdateWithWhereUniqueWithoutCatalogoInput | detalleServicioUpdateWithWhereUniqueWithoutCatalogoInput[]
    updateMany?: detalleServicioUpdateManyWithWhereWithoutCatalogoInput | detalleServicioUpdateManyWithWhereWithoutCatalogoInput[]
    deleteMany?: detalleServicioScalarWhereInput | detalleServicioScalarWhereInput[]
  }

  export type historialClientesUpdateManyWithoutCatalogoNestedInput = {
    create?: XOR<historialClientesCreateWithoutCatalogoInput, historialClientesUncheckedCreateWithoutCatalogoInput> | historialClientesCreateWithoutCatalogoInput[] | historialClientesUncheckedCreateWithoutCatalogoInput[]
    connectOrCreate?: historialClientesCreateOrConnectWithoutCatalogoInput | historialClientesCreateOrConnectWithoutCatalogoInput[]
    upsert?: historialClientesUpsertWithWhereUniqueWithoutCatalogoInput | historialClientesUpsertWithWhereUniqueWithoutCatalogoInput[]
    createMany?: historialClientesCreateManyCatalogoInputEnvelope
    set?: historialClientesWhereUniqueInput | historialClientesWhereUniqueInput[]
    disconnect?: historialClientesWhereUniqueInput | historialClientesWhereUniqueInput[]
    delete?: historialClientesWhereUniqueInput | historialClientesWhereUniqueInput[]
    connect?: historialClientesWhereUniqueInput | historialClientesWhereUniqueInput[]
    update?: historialClientesUpdateWithWhereUniqueWithoutCatalogoInput | historialClientesUpdateWithWhereUniqueWithoutCatalogoInput[]
    updateMany?: historialClientesUpdateManyWithWhereWithoutCatalogoInput | historialClientesUpdateManyWithWhereWithoutCatalogoInput[]
    deleteMany?: historialClientesScalarWhereInput | historialClientesScalarWhereInput[]
  }

  export type recompensasUpdateManyWithoutCatalogoNestedInput = {
    create?: XOR<recompensasCreateWithoutCatalogoInput, recompensasUncheckedCreateWithoutCatalogoInput> | recompensasCreateWithoutCatalogoInput[] | recompensasUncheckedCreateWithoutCatalogoInput[]
    connectOrCreate?: recompensasCreateOrConnectWithoutCatalogoInput | recompensasCreateOrConnectWithoutCatalogoInput[]
    upsert?: recompensasUpsertWithWhereUniqueWithoutCatalogoInput | recompensasUpsertWithWhereUniqueWithoutCatalogoInput[]
    createMany?: recompensasCreateManyCatalogoInputEnvelope
    set?: recompensasWhereUniqueInput | recompensasWhereUniqueInput[]
    disconnect?: recompensasWhereUniqueInput | recompensasWhereUniqueInput[]
    delete?: recompensasWhereUniqueInput | recompensasWhereUniqueInput[]
    connect?: recompensasWhereUniqueInput | recompensasWhereUniqueInput[]
    update?: recompensasUpdateWithWhereUniqueWithoutCatalogoInput | recompensasUpdateWithWhereUniqueWithoutCatalogoInput[]
    updateMany?: recompensasUpdateManyWithWhereWithoutCatalogoInput | recompensasUpdateManyWithWhereWithoutCatalogoInput[]
    deleteMany?: recompensasScalarWhereInput | recompensasScalarWhereInput[]
  }

  export type reporteClientesCitasUpdateManyWithoutCatalogoNestedInput = {
    create?: XOR<reporteClientesCitasCreateWithoutCatalogoInput, reporteClientesCitasUncheckedCreateWithoutCatalogoInput> | reporteClientesCitasCreateWithoutCatalogoInput[] | reporteClientesCitasUncheckedCreateWithoutCatalogoInput[]
    connectOrCreate?: reporteClientesCitasCreateOrConnectWithoutCatalogoInput | reporteClientesCitasCreateOrConnectWithoutCatalogoInput[]
    upsert?: reporteClientesCitasUpsertWithWhereUniqueWithoutCatalogoInput | reporteClientesCitasUpsertWithWhereUniqueWithoutCatalogoInput[]
    createMany?: reporteClientesCitasCreateManyCatalogoInputEnvelope
    set?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
    disconnect?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
    delete?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
    connect?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
    update?: reporteClientesCitasUpdateWithWhereUniqueWithoutCatalogoInput | reporteClientesCitasUpdateWithWhereUniqueWithoutCatalogoInput[]
    updateMany?: reporteClientesCitasUpdateManyWithWhereWithoutCatalogoInput | reporteClientesCitasUpdateManyWithWhereWithoutCatalogoInput[]
    deleteMany?: reporteClientesCitasScalarWhereInput | reporteClientesCitasScalarWhereInput[]
  }

  export type citasUncheckedUpdateManyWithoutCatalogoNestedInput = {
    create?: XOR<citasCreateWithoutCatalogoInput, citasUncheckedCreateWithoutCatalogoInput> | citasCreateWithoutCatalogoInput[] | citasUncheckedCreateWithoutCatalogoInput[]
    connectOrCreate?: citasCreateOrConnectWithoutCatalogoInput | citasCreateOrConnectWithoutCatalogoInput[]
    upsert?: citasUpsertWithWhereUniqueWithoutCatalogoInput | citasUpsertWithWhereUniqueWithoutCatalogoInput[]
    createMany?: citasCreateManyCatalogoInputEnvelope
    set?: citasWhereUniqueInput | citasWhereUniqueInput[]
    disconnect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    delete?: citasWhereUniqueInput | citasWhereUniqueInput[]
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    update?: citasUpdateWithWhereUniqueWithoutCatalogoInput | citasUpdateWithWhereUniqueWithoutCatalogoInput[]
    updateMany?: citasUpdateManyWithWhereWithoutCatalogoInput | citasUpdateManyWithWhereWithoutCatalogoInput[]
    deleteMany?: citasScalarWhereInput | citasScalarWhereInput[]
  }

  export type detalleServicioUncheckedUpdateManyWithoutCatalogoNestedInput = {
    create?: XOR<detalleServicioCreateWithoutCatalogoInput, detalleServicioUncheckedCreateWithoutCatalogoInput> | detalleServicioCreateWithoutCatalogoInput[] | detalleServicioUncheckedCreateWithoutCatalogoInput[]
    connectOrCreate?: detalleServicioCreateOrConnectWithoutCatalogoInput | detalleServicioCreateOrConnectWithoutCatalogoInput[]
    upsert?: detalleServicioUpsertWithWhereUniqueWithoutCatalogoInput | detalleServicioUpsertWithWhereUniqueWithoutCatalogoInput[]
    createMany?: detalleServicioCreateManyCatalogoInputEnvelope
    set?: detalleServicioWhereUniqueInput | detalleServicioWhereUniqueInput[]
    disconnect?: detalleServicioWhereUniqueInput | detalleServicioWhereUniqueInput[]
    delete?: detalleServicioWhereUniqueInput | detalleServicioWhereUniqueInput[]
    connect?: detalleServicioWhereUniqueInput | detalleServicioWhereUniqueInput[]
    update?: detalleServicioUpdateWithWhereUniqueWithoutCatalogoInput | detalleServicioUpdateWithWhereUniqueWithoutCatalogoInput[]
    updateMany?: detalleServicioUpdateManyWithWhereWithoutCatalogoInput | detalleServicioUpdateManyWithWhereWithoutCatalogoInput[]
    deleteMany?: detalleServicioScalarWhereInput | detalleServicioScalarWhereInput[]
  }

  export type historialClientesUncheckedUpdateManyWithoutCatalogoNestedInput = {
    create?: XOR<historialClientesCreateWithoutCatalogoInput, historialClientesUncheckedCreateWithoutCatalogoInput> | historialClientesCreateWithoutCatalogoInput[] | historialClientesUncheckedCreateWithoutCatalogoInput[]
    connectOrCreate?: historialClientesCreateOrConnectWithoutCatalogoInput | historialClientesCreateOrConnectWithoutCatalogoInput[]
    upsert?: historialClientesUpsertWithWhereUniqueWithoutCatalogoInput | historialClientesUpsertWithWhereUniqueWithoutCatalogoInput[]
    createMany?: historialClientesCreateManyCatalogoInputEnvelope
    set?: historialClientesWhereUniqueInput | historialClientesWhereUniqueInput[]
    disconnect?: historialClientesWhereUniqueInput | historialClientesWhereUniqueInput[]
    delete?: historialClientesWhereUniqueInput | historialClientesWhereUniqueInput[]
    connect?: historialClientesWhereUniqueInput | historialClientesWhereUniqueInput[]
    update?: historialClientesUpdateWithWhereUniqueWithoutCatalogoInput | historialClientesUpdateWithWhereUniqueWithoutCatalogoInput[]
    updateMany?: historialClientesUpdateManyWithWhereWithoutCatalogoInput | historialClientesUpdateManyWithWhereWithoutCatalogoInput[]
    deleteMany?: historialClientesScalarWhereInput | historialClientesScalarWhereInput[]
  }

  export type recompensasUncheckedUpdateManyWithoutCatalogoNestedInput = {
    create?: XOR<recompensasCreateWithoutCatalogoInput, recompensasUncheckedCreateWithoutCatalogoInput> | recompensasCreateWithoutCatalogoInput[] | recompensasUncheckedCreateWithoutCatalogoInput[]
    connectOrCreate?: recompensasCreateOrConnectWithoutCatalogoInput | recompensasCreateOrConnectWithoutCatalogoInput[]
    upsert?: recompensasUpsertWithWhereUniqueWithoutCatalogoInput | recompensasUpsertWithWhereUniqueWithoutCatalogoInput[]
    createMany?: recompensasCreateManyCatalogoInputEnvelope
    set?: recompensasWhereUniqueInput | recompensasWhereUniqueInput[]
    disconnect?: recompensasWhereUniqueInput | recompensasWhereUniqueInput[]
    delete?: recompensasWhereUniqueInput | recompensasWhereUniqueInput[]
    connect?: recompensasWhereUniqueInput | recompensasWhereUniqueInput[]
    update?: recompensasUpdateWithWhereUniqueWithoutCatalogoInput | recompensasUpdateWithWhereUniqueWithoutCatalogoInput[]
    updateMany?: recompensasUpdateManyWithWhereWithoutCatalogoInput | recompensasUpdateManyWithWhereWithoutCatalogoInput[]
    deleteMany?: recompensasScalarWhereInput | recompensasScalarWhereInput[]
  }

  export type reporteClientesCitasUncheckedUpdateManyWithoutCatalogoNestedInput = {
    create?: XOR<reporteClientesCitasCreateWithoutCatalogoInput, reporteClientesCitasUncheckedCreateWithoutCatalogoInput> | reporteClientesCitasCreateWithoutCatalogoInput[] | reporteClientesCitasUncheckedCreateWithoutCatalogoInput[]
    connectOrCreate?: reporteClientesCitasCreateOrConnectWithoutCatalogoInput | reporteClientesCitasCreateOrConnectWithoutCatalogoInput[]
    upsert?: reporteClientesCitasUpsertWithWhereUniqueWithoutCatalogoInput | reporteClientesCitasUpsertWithWhereUniqueWithoutCatalogoInput[]
    createMany?: reporteClientesCitasCreateManyCatalogoInputEnvelope
    set?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
    disconnect?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
    delete?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
    connect?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
    update?: reporteClientesCitasUpdateWithWhereUniqueWithoutCatalogoInput | reporteClientesCitasUpdateWithWhereUniqueWithoutCatalogoInput[]
    updateMany?: reporteClientesCitasUpdateManyWithWhereWithoutCatalogoInput | reporteClientesCitasUpdateManyWithWhereWithoutCatalogoInput[]
    deleteMany?: reporteClientesCitasScalarWhereInput | reporteClientesCitasScalarWhereInput[]
  }

  export type clientesCreateNestedOneWithoutCitasInput = {
    create?: XOR<clientesCreateWithoutCitasInput, clientesUncheckedCreateWithoutCitasInput>
    connectOrCreate?: clientesCreateOrConnectWithoutCitasInput
    connect?: clientesWhereUniqueInput
  }

  export type estilistasCreateNestedOneWithoutCitasInput = {
    create?: XOR<estilistasCreateWithoutCitasInput, estilistasUncheckedCreateWithoutCitasInput>
    connectOrCreate?: estilistasCreateOrConnectWithoutCitasInput
    connect?: estilistasWhereUniqueInput
  }

  export type galeriaEstilosCreateNestedOneWithoutCitasInput = {
    create?: XOR<galeriaEstilosCreateWithoutCitasInput, galeriaEstilosUncheckedCreateWithoutCitasInput>
    connectOrCreate?: galeriaEstilosCreateOrConnectWithoutCitasInput
    connect?: galeriaEstilosWhereUniqueInput
  }

  export type catalogoCreateNestedOneWithoutCitasInput = {
    create?: XOR<catalogoCreateWithoutCitasInput, catalogoUncheckedCreateWithoutCitasInput>
    connectOrCreate?: catalogoCreateOrConnectWithoutCitasInput
    connect?: catalogoWhereUniqueInput
  }

  export type citasReagendadasCreateNestedManyWithoutCitasInput = {
    create?: XOR<citasReagendadasCreateWithoutCitasInput, citasReagendadasUncheckedCreateWithoutCitasInput> | citasReagendadasCreateWithoutCitasInput[] | citasReagendadasUncheckedCreateWithoutCitasInput[]
    connectOrCreate?: citasReagendadasCreateOrConnectWithoutCitasInput | citasReagendadasCreateOrConnectWithoutCitasInput[]
    createMany?: citasReagendadasCreateManyCitasInputEnvelope
    connect?: citasReagendadasWhereUniqueInput | citasReagendadasWhereUniqueInput[]
  }

  export type historialCitasCreateNestedManyWithoutCitasInput = {
    create?: XOR<historialCitasCreateWithoutCitasInput, historialCitasUncheckedCreateWithoutCitasInput> | historialCitasCreateWithoutCitasInput[] | historialCitasUncheckedCreateWithoutCitasInput[]
    connectOrCreate?: historialCitasCreateOrConnectWithoutCitasInput | historialCitasCreateOrConnectWithoutCitasInput[]
    createMany?: historialCitasCreateManyCitasInputEnvelope
    connect?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
  }

  export type reporteCitasPendientesCreateNestedManyWithoutCitasInput = {
    create?: XOR<reporteCitasPendientesCreateWithoutCitasInput, reporteCitasPendientesUncheckedCreateWithoutCitasInput> | reporteCitasPendientesCreateWithoutCitasInput[] | reporteCitasPendientesUncheckedCreateWithoutCitasInput[]
    connectOrCreate?: reporteCitasPendientesCreateOrConnectWithoutCitasInput | reporteCitasPendientesCreateOrConnectWithoutCitasInput[]
    createMany?: reporteCitasPendientesCreateManyCitasInputEnvelope
    connect?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
  }

  export type reporteClientesCitasCreateNestedManyWithoutCitasInput = {
    create?: XOR<reporteClientesCitasCreateWithoutCitasInput, reporteClientesCitasUncheckedCreateWithoutCitasInput> | reporteClientesCitasCreateWithoutCitasInput[] | reporteClientesCitasUncheckedCreateWithoutCitasInput[]
    connectOrCreate?: reporteClientesCitasCreateOrConnectWithoutCitasInput | reporteClientesCitasCreateOrConnectWithoutCitasInput[]
    createMany?: reporteClientesCitasCreateManyCitasInputEnvelope
    connect?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
  }

  export type citasReagendadasUncheckedCreateNestedManyWithoutCitasInput = {
    create?: XOR<citasReagendadasCreateWithoutCitasInput, citasReagendadasUncheckedCreateWithoutCitasInput> | citasReagendadasCreateWithoutCitasInput[] | citasReagendadasUncheckedCreateWithoutCitasInput[]
    connectOrCreate?: citasReagendadasCreateOrConnectWithoutCitasInput | citasReagendadasCreateOrConnectWithoutCitasInput[]
    createMany?: citasReagendadasCreateManyCitasInputEnvelope
    connect?: citasReagendadasWhereUniqueInput | citasReagendadasWhereUniqueInput[]
  }

  export type historialCitasUncheckedCreateNestedManyWithoutCitasInput = {
    create?: XOR<historialCitasCreateWithoutCitasInput, historialCitasUncheckedCreateWithoutCitasInput> | historialCitasCreateWithoutCitasInput[] | historialCitasUncheckedCreateWithoutCitasInput[]
    connectOrCreate?: historialCitasCreateOrConnectWithoutCitasInput | historialCitasCreateOrConnectWithoutCitasInput[]
    createMany?: historialCitasCreateManyCitasInputEnvelope
    connect?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
  }

  export type reporteCitasPendientesUncheckedCreateNestedManyWithoutCitasInput = {
    create?: XOR<reporteCitasPendientesCreateWithoutCitasInput, reporteCitasPendientesUncheckedCreateWithoutCitasInput> | reporteCitasPendientesCreateWithoutCitasInput[] | reporteCitasPendientesUncheckedCreateWithoutCitasInput[]
    connectOrCreate?: reporteCitasPendientesCreateOrConnectWithoutCitasInput | reporteCitasPendientesCreateOrConnectWithoutCitasInput[]
    createMany?: reporteCitasPendientesCreateManyCitasInputEnvelope
    connect?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
  }

  export type reporteClientesCitasUncheckedCreateNestedManyWithoutCitasInput = {
    create?: XOR<reporteClientesCitasCreateWithoutCitasInput, reporteClientesCitasUncheckedCreateWithoutCitasInput> | reporteClientesCitasCreateWithoutCitasInput[] | reporteClientesCitasUncheckedCreateWithoutCitasInput[]
    connectOrCreate?: reporteClientesCitasCreateOrConnectWithoutCitasInput | reporteClientesCitasCreateOrConnectWithoutCitasInput[]
    createMany?: reporteClientesCitasCreateManyCitasInputEnvelope
    connect?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
  }

  export type clientesUpdateOneWithoutCitasNestedInput = {
    create?: XOR<clientesCreateWithoutCitasInput, clientesUncheckedCreateWithoutCitasInput>
    connectOrCreate?: clientesCreateOrConnectWithoutCitasInput
    upsert?: clientesUpsertWithoutCitasInput
    disconnect?: clientesWhereInput | boolean
    delete?: clientesWhereInput | boolean
    connect?: clientesWhereUniqueInput
    update?: XOR<XOR<clientesUpdateToOneWithWhereWithoutCitasInput, clientesUpdateWithoutCitasInput>, clientesUncheckedUpdateWithoutCitasInput>
  }

  export type estilistasUpdateOneWithoutCitasNestedInput = {
    create?: XOR<estilistasCreateWithoutCitasInput, estilistasUncheckedCreateWithoutCitasInput>
    connectOrCreate?: estilistasCreateOrConnectWithoutCitasInput
    upsert?: estilistasUpsertWithoutCitasInput
    disconnect?: estilistasWhereInput | boolean
    delete?: estilistasWhereInput | boolean
    connect?: estilistasWhereUniqueInput
    update?: XOR<XOR<estilistasUpdateToOneWithWhereWithoutCitasInput, estilistasUpdateWithoutCitasInput>, estilistasUncheckedUpdateWithoutCitasInput>
  }

  export type galeriaEstilosUpdateOneWithoutCitasNestedInput = {
    create?: XOR<galeriaEstilosCreateWithoutCitasInput, galeriaEstilosUncheckedCreateWithoutCitasInput>
    connectOrCreate?: galeriaEstilosCreateOrConnectWithoutCitasInput
    upsert?: galeriaEstilosUpsertWithoutCitasInput
    disconnect?: galeriaEstilosWhereInput | boolean
    delete?: galeriaEstilosWhereInput | boolean
    connect?: galeriaEstilosWhereUniqueInput
    update?: XOR<XOR<galeriaEstilosUpdateToOneWithWhereWithoutCitasInput, galeriaEstilosUpdateWithoutCitasInput>, galeriaEstilosUncheckedUpdateWithoutCitasInput>
  }

  export type catalogoUpdateOneWithoutCitasNestedInput = {
    create?: XOR<catalogoCreateWithoutCitasInput, catalogoUncheckedCreateWithoutCitasInput>
    connectOrCreate?: catalogoCreateOrConnectWithoutCitasInput
    upsert?: catalogoUpsertWithoutCitasInput
    disconnect?: catalogoWhereInput | boolean
    delete?: catalogoWhereInput | boolean
    connect?: catalogoWhereUniqueInput
    update?: XOR<XOR<catalogoUpdateToOneWithWhereWithoutCitasInput, catalogoUpdateWithoutCitasInput>, catalogoUncheckedUpdateWithoutCitasInput>
  }

  export type citasReagendadasUpdateManyWithoutCitasNestedInput = {
    create?: XOR<citasReagendadasCreateWithoutCitasInput, citasReagendadasUncheckedCreateWithoutCitasInput> | citasReagendadasCreateWithoutCitasInput[] | citasReagendadasUncheckedCreateWithoutCitasInput[]
    connectOrCreate?: citasReagendadasCreateOrConnectWithoutCitasInput | citasReagendadasCreateOrConnectWithoutCitasInput[]
    upsert?: citasReagendadasUpsertWithWhereUniqueWithoutCitasInput | citasReagendadasUpsertWithWhereUniqueWithoutCitasInput[]
    createMany?: citasReagendadasCreateManyCitasInputEnvelope
    set?: citasReagendadasWhereUniqueInput | citasReagendadasWhereUniqueInput[]
    disconnect?: citasReagendadasWhereUniqueInput | citasReagendadasWhereUniqueInput[]
    delete?: citasReagendadasWhereUniqueInput | citasReagendadasWhereUniqueInput[]
    connect?: citasReagendadasWhereUniqueInput | citasReagendadasWhereUniqueInput[]
    update?: citasReagendadasUpdateWithWhereUniqueWithoutCitasInput | citasReagendadasUpdateWithWhereUniqueWithoutCitasInput[]
    updateMany?: citasReagendadasUpdateManyWithWhereWithoutCitasInput | citasReagendadasUpdateManyWithWhereWithoutCitasInput[]
    deleteMany?: citasReagendadasScalarWhereInput | citasReagendadasScalarWhereInput[]
  }

  export type historialCitasUpdateManyWithoutCitasNestedInput = {
    create?: XOR<historialCitasCreateWithoutCitasInput, historialCitasUncheckedCreateWithoutCitasInput> | historialCitasCreateWithoutCitasInput[] | historialCitasUncheckedCreateWithoutCitasInput[]
    connectOrCreate?: historialCitasCreateOrConnectWithoutCitasInput | historialCitasCreateOrConnectWithoutCitasInput[]
    upsert?: historialCitasUpsertWithWhereUniqueWithoutCitasInput | historialCitasUpsertWithWhereUniqueWithoutCitasInput[]
    createMany?: historialCitasCreateManyCitasInputEnvelope
    set?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
    disconnect?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
    delete?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
    connect?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
    update?: historialCitasUpdateWithWhereUniqueWithoutCitasInput | historialCitasUpdateWithWhereUniqueWithoutCitasInput[]
    updateMany?: historialCitasUpdateManyWithWhereWithoutCitasInput | historialCitasUpdateManyWithWhereWithoutCitasInput[]
    deleteMany?: historialCitasScalarWhereInput | historialCitasScalarWhereInput[]
  }

  export type reporteCitasPendientesUpdateManyWithoutCitasNestedInput = {
    create?: XOR<reporteCitasPendientesCreateWithoutCitasInput, reporteCitasPendientesUncheckedCreateWithoutCitasInput> | reporteCitasPendientesCreateWithoutCitasInput[] | reporteCitasPendientesUncheckedCreateWithoutCitasInput[]
    connectOrCreate?: reporteCitasPendientesCreateOrConnectWithoutCitasInput | reporteCitasPendientesCreateOrConnectWithoutCitasInput[]
    upsert?: reporteCitasPendientesUpsertWithWhereUniqueWithoutCitasInput | reporteCitasPendientesUpsertWithWhereUniqueWithoutCitasInput[]
    createMany?: reporteCitasPendientesCreateManyCitasInputEnvelope
    set?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
    disconnect?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
    delete?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
    connect?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
    update?: reporteCitasPendientesUpdateWithWhereUniqueWithoutCitasInput | reporteCitasPendientesUpdateWithWhereUniqueWithoutCitasInput[]
    updateMany?: reporteCitasPendientesUpdateManyWithWhereWithoutCitasInput | reporteCitasPendientesUpdateManyWithWhereWithoutCitasInput[]
    deleteMany?: reporteCitasPendientesScalarWhereInput | reporteCitasPendientesScalarWhereInput[]
  }

  export type reporteClientesCitasUpdateManyWithoutCitasNestedInput = {
    create?: XOR<reporteClientesCitasCreateWithoutCitasInput, reporteClientesCitasUncheckedCreateWithoutCitasInput> | reporteClientesCitasCreateWithoutCitasInput[] | reporteClientesCitasUncheckedCreateWithoutCitasInput[]
    connectOrCreate?: reporteClientesCitasCreateOrConnectWithoutCitasInput | reporteClientesCitasCreateOrConnectWithoutCitasInput[]
    upsert?: reporteClientesCitasUpsertWithWhereUniqueWithoutCitasInput | reporteClientesCitasUpsertWithWhereUniqueWithoutCitasInput[]
    createMany?: reporteClientesCitasCreateManyCitasInputEnvelope
    set?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
    disconnect?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
    delete?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
    connect?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
    update?: reporteClientesCitasUpdateWithWhereUniqueWithoutCitasInput | reporteClientesCitasUpdateWithWhereUniqueWithoutCitasInput[]
    updateMany?: reporteClientesCitasUpdateManyWithWhereWithoutCitasInput | reporteClientesCitasUpdateManyWithWhereWithoutCitasInput[]
    deleteMany?: reporteClientesCitasScalarWhereInput | reporteClientesCitasScalarWhereInput[]
  }

  export type citasReagendadasUncheckedUpdateManyWithoutCitasNestedInput = {
    create?: XOR<citasReagendadasCreateWithoutCitasInput, citasReagendadasUncheckedCreateWithoutCitasInput> | citasReagendadasCreateWithoutCitasInput[] | citasReagendadasUncheckedCreateWithoutCitasInput[]
    connectOrCreate?: citasReagendadasCreateOrConnectWithoutCitasInput | citasReagendadasCreateOrConnectWithoutCitasInput[]
    upsert?: citasReagendadasUpsertWithWhereUniqueWithoutCitasInput | citasReagendadasUpsertWithWhereUniqueWithoutCitasInput[]
    createMany?: citasReagendadasCreateManyCitasInputEnvelope
    set?: citasReagendadasWhereUniqueInput | citasReagendadasWhereUniqueInput[]
    disconnect?: citasReagendadasWhereUniqueInput | citasReagendadasWhereUniqueInput[]
    delete?: citasReagendadasWhereUniqueInput | citasReagendadasWhereUniqueInput[]
    connect?: citasReagendadasWhereUniqueInput | citasReagendadasWhereUniqueInput[]
    update?: citasReagendadasUpdateWithWhereUniqueWithoutCitasInput | citasReagendadasUpdateWithWhereUniqueWithoutCitasInput[]
    updateMany?: citasReagendadasUpdateManyWithWhereWithoutCitasInput | citasReagendadasUpdateManyWithWhereWithoutCitasInput[]
    deleteMany?: citasReagendadasScalarWhereInput | citasReagendadasScalarWhereInput[]
  }

  export type historialCitasUncheckedUpdateManyWithoutCitasNestedInput = {
    create?: XOR<historialCitasCreateWithoutCitasInput, historialCitasUncheckedCreateWithoutCitasInput> | historialCitasCreateWithoutCitasInput[] | historialCitasUncheckedCreateWithoutCitasInput[]
    connectOrCreate?: historialCitasCreateOrConnectWithoutCitasInput | historialCitasCreateOrConnectWithoutCitasInput[]
    upsert?: historialCitasUpsertWithWhereUniqueWithoutCitasInput | historialCitasUpsertWithWhereUniqueWithoutCitasInput[]
    createMany?: historialCitasCreateManyCitasInputEnvelope
    set?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
    disconnect?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
    delete?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
    connect?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
    update?: historialCitasUpdateWithWhereUniqueWithoutCitasInput | historialCitasUpdateWithWhereUniqueWithoutCitasInput[]
    updateMany?: historialCitasUpdateManyWithWhereWithoutCitasInput | historialCitasUpdateManyWithWhereWithoutCitasInput[]
    deleteMany?: historialCitasScalarWhereInput | historialCitasScalarWhereInput[]
  }

  export type reporteCitasPendientesUncheckedUpdateManyWithoutCitasNestedInput = {
    create?: XOR<reporteCitasPendientesCreateWithoutCitasInput, reporteCitasPendientesUncheckedCreateWithoutCitasInput> | reporteCitasPendientesCreateWithoutCitasInput[] | reporteCitasPendientesUncheckedCreateWithoutCitasInput[]
    connectOrCreate?: reporteCitasPendientesCreateOrConnectWithoutCitasInput | reporteCitasPendientesCreateOrConnectWithoutCitasInput[]
    upsert?: reporteCitasPendientesUpsertWithWhereUniqueWithoutCitasInput | reporteCitasPendientesUpsertWithWhereUniqueWithoutCitasInput[]
    createMany?: reporteCitasPendientesCreateManyCitasInputEnvelope
    set?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
    disconnect?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
    delete?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
    connect?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
    update?: reporteCitasPendientesUpdateWithWhereUniqueWithoutCitasInput | reporteCitasPendientesUpdateWithWhereUniqueWithoutCitasInput[]
    updateMany?: reporteCitasPendientesUpdateManyWithWhereWithoutCitasInput | reporteCitasPendientesUpdateManyWithWhereWithoutCitasInput[]
    deleteMany?: reporteCitasPendientesScalarWhereInput | reporteCitasPendientesScalarWhereInput[]
  }

  export type reporteClientesCitasUncheckedUpdateManyWithoutCitasNestedInput = {
    create?: XOR<reporteClientesCitasCreateWithoutCitasInput, reporteClientesCitasUncheckedCreateWithoutCitasInput> | reporteClientesCitasCreateWithoutCitasInput[] | reporteClientesCitasUncheckedCreateWithoutCitasInput[]
    connectOrCreate?: reporteClientesCitasCreateOrConnectWithoutCitasInput | reporteClientesCitasCreateOrConnectWithoutCitasInput[]
    upsert?: reporteClientesCitasUpsertWithWhereUniqueWithoutCitasInput | reporteClientesCitasUpsertWithWhereUniqueWithoutCitasInput[]
    createMany?: reporteClientesCitasCreateManyCitasInputEnvelope
    set?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
    disconnect?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
    delete?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
    connect?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
    update?: reporteClientesCitasUpdateWithWhereUniqueWithoutCitasInput | reporteClientesCitasUpdateWithWhereUniqueWithoutCitasInput[]
    updateMany?: reporteClientesCitasUpdateManyWithWhereWithoutCitasInput | reporteClientesCitasUpdateManyWithWhereWithoutCitasInput[]
    deleteMany?: reporteClientesCitasScalarWhereInput | reporteClientesCitasScalarWhereInput[]
  }

  export type citasCreateNestedOneWithoutCitasReagendadasInput = {
    create?: XOR<citasCreateWithoutCitasReagendadasInput, citasUncheckedCreateWithoutCitasReagendadasInput>
    connectOrCreate?: citasCreateOrConnectWithoutCitasReagendadasInput
    connect?: citasWhereUniqueInput
  }

  export type citasUpdateOneWithoutCitasReagendadasNestedInput = {
    create?: XOR<citasCreateWithoutCitasReagendadasInput, citasUncheckedCreateWithoutCitasReagendadasInput>
    connectOrCreate?: citasCreateOrConnectWithoutCitasReagendadasInput
    upsert?: citasUpsertWithoutCitasReagendadasInput
    disconnect?: citasWhereInput | boolean
    delete?: citasWhereInput | boolean
    connect?: citasWhereUniqueInput
    update?: XOR<XOR<citasUpdateToOneWithWhereWithoutCitasReagendadasInput, citasUpdateWithoutCitasReagendadasInput>, citasUncheckedUpdateWithoutCitasReagendadasInput>
  }

  export type citasCreateNestedManyWithoutClientesInput = {
    create?: XOR<citasCreateWithoutClientesInput, citasUncheckedCreateWithoutClientesInput> | citasCreateWithoutClientesInput[] | citasUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: citasCreateOrConnectWithoutClientesInput | citasCreateOrConnectWithoutClientesInput[]
    createMany?: citasCreateManyClientesInputEnvelope
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
  }

  export type rolesCreateNestedOneWithoutClientesInput = {
    create?: XOR<rolesCreateWithoutClientesInput, rolesUncheckedCreateWithoutClientesInput>
    connectOrCreate?: rolesCreateOrConnectWithoutClientesInput
    connect?: rolesWhereUniqueInput
  }

  export type historialCitasCreateNestedManyWithoutClientesInput = {
    create?: XOR<historialCitasCreateWithoutClientesInput, historialCitasUncheckedCreateWithoutClientesInput> | historialCitasCreateWithoutClientesInput[] | historialCitasUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: historialCitasCreateOrConnectWithoutClientesInput | historialCitasCreateOrConnectWithoutClientesInput[]
    createMany?: historialCitasCreateManyClientesInputEnvelope
    connect?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
  }

  export type historialClientesCreateNestedManyWithoutClientesInput = {
    create?: XOR<historialClientesCreateWithoutClientesInput, historialClientesUncheckedCreateWithoutClientesInput> | historialClientesCreateWithoutClientesInput[] | historialClientesUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: historialClientesCreateOrConnectWithoutClientesInput | historialClientesCreateOrConnectWithoutClientesInput[]
    createMany?: historialClientesCreateManyClientesInputEnvelope
    connect?: historialClientesWhereUniqueInput | historialClientesWhereUniqueInput[]
  }

  export type historialCuentaCreateNestedManyWithoutClientesInput = {
    create?: XOR<historialCuentaCreateWithoutClientesInput, historialCuentaUncheckedCreateWithoutClientesInput> | historialCuentaCreateWithoutClientesInput[] | historialCuentaUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: historialCuentaCreateOrConnectWithoutClientesInput | historialCuentaCreateOrConnectWithoutClientesInput[]
    createMany?: historialCuentaCreateManyClientesInputEnvelope
    connect?: historialCuentaWhereUniqueInput | historialCuentaWhereUniqueInput[]
  }

  export type historialGastoPuntosCreateNestedManyWithoutClientesInput = {
    create?: XOR<historialGastoPuntosCreateWithoutClientesInput, historialGastoPuntosUncheckedCreateWithoutClientesInput> | historialGastoPuntosCreateWithoutClientesInput[] | historialGastoPuntosUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: historialGastoPuntosCreateOrConnectWithoutClientesInput | historialGastoPuntosCreateOrConnectWithoutClientesInput[]
    createMany?: historialGastoPuntosCreateManyClientesInputEnvelope
    connect?: historialGastoPuntosWhereUniqueInput | historialGastoPuntosWhereUniqueInput[]
  }

  export type puntosClientesCreateNestedManyWithoutClientesInput = {
    create?: XOR<puntosClientesCreateWithoutClientesInput, puntosClientesUncheckedCreateWithoutClientesInput> | puntosClientesCreateWithoutClientesInput[] | puntosClientesUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: puntosClientesCreateOrConnectWithoutClientesInput | puntosClientesCreateOrConnectWithoutClientesInput[]
    createMany?: puntosClientesCreateManyClientesInputEnvelope
    connect?: puntosClientesWhereUniqueInput | puntosClientesWhereUniqueInput[]
  }

  export type reporteCitasPendientesCreateNestedManyWithoutClientesInput = {
    create?: XOR<reporteCitasPendientesCreateWithoutClientesInput, reporteCitasPendientesUncheckedCreateWithoutClientesInput> | reporteCitasPendientesCreateWithoutClientesInput[] | reporteCitasPendientesUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: reporteCitasPendientesCreateOrConnectWithoutClientesInput | reporteCitasPendientesCreateOrConnectWithoutClientesInput[]
    createMany?: reporteCitasPendientesCreateManyClientesInputEnvelope
    connect?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
  }

  export type reporteClientesCitasCreateNestedManyWithoutClientesInput = {
    create?: XOR<reporteClientesCitasCreateWithoutClientesInput, reporteClientesCitasUncheckedCreateWithoutClientesInput> | reporteClientesCitasCreateWithoutClientesInput[] | reporteClientesCitasUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: reporteClientesCitasCreateOrConnectWithoutClientesInput | reporteClientesCitasCreateOrConnectWithoutClientesInput[]
    createMany?: reporteClientesCitasCreateManyClientesInputEnvelope
    connect?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
  }

  export type citasUncheckedCreateNestedManyWithoutClientesInput = {
    create?: XOR<citasCreateWithoutClientesInput, citasUncheckedCreateWithoutClientesInput> | citasCreateWithoutClientesInput[] | citasUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: citasCreateOrConnectWithoutClientesInput | citasCreateOrConnectWithoutClientesInput[]
    createMany?: citasCreateManyClientesInputEnvelope
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
  }

  export type historialCitasUncheckedCreateNestedManyWithoutClientesInput = {
    create?: XOR<historialCitasCreateWithoutClientesInput, historialCitasUncheckedCreateWithoutClientesInput> | historialCitasCreateWithoutClientesInput[] | historialCitasUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: historialCitasCreateOrConnectWithoutClientesInput | historialCitasCreateOrConnectWithoutClientesInput[]
    createMany?: historialCitasCreateManyClientesInputEnvelope
    connect?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
  }

  export type historialClientesUncheckedCreateNestedManyWithoutClientesInput = {
    create?: XOR<historialClientesCreateWithoutClientesInput, historialClientesUncheckedCreateWithoutClientesInput> | historialClientesCreateWithoutClientesInput[] | historialClientesUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: historialClientesCreateOrConnectWithoutClientesInput | historialClientesCreateOrConnectWithoutClientesInput[]
    createMany?: historialClientesCreateManyClientesInputEnvelope
    connect?: historialClientesWhereUniqueInput | historialClientesWhereUniqueInput[]
  }

  export type historialCuentaUncheckedCreateNestedManyWithoutClientesInput = {
    create?: XOR<historialCuentaCreateWithoutClientesInput, historialCuentaUncheckedCreateWithoutClientesInput> | historialCuentaCreateWithoutClientesInput[] | historialCuentaUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: historialCuentaCreateOrConnectWithoutClientesInput | historialCuentaCreateOrConnectWithoutClientesInput[]
    createMany?: historialCuentaCreateManyClientesInputEnvelope
    connect?: historialCuentaWhereUniqueInput | historialCuentaWhereUniqueInput[]
  }

  export type historialGastoPuntosUncheckedCreateNestedManyWithoutClientesInput = {
    create?: XOR<historialGastoPuntosCreateWithoutClientesInput, historialGastoPuntosUncheckedCreateWithoutClientesInput> | historialGastoPuntosCreateWithoutClientesInput[] | historialGastoPuntosUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: historialGastoPuntosCreateOrConnectWithoutClientesInput | historialGastoPuntosCreateOrConnectWithoutClientesInput[]
    createMany?: historialGastoPuntosCreateManyClientesInputEnvelope
    connect?: historialGastoPuntosWhereUniqueInput | historialGastoPuntosWhereUniqueInput[]
  }

  export type puntosClientesUncheckedCreateNestedManyWithoutClientesInput = {
    create?: XOR<puntosClientesCreateWithoutClientesInput, puntosClientesUncheckedCreateWithoutClientesInput> | puntosClientesCreateWithoutClientesInput[] | puntosClientesUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: puntosClientesCreateOrConnectWithoutClientesInput | puntosClientesCreateOrConnectWithoutClientesInput[]
    createMany?: puntosClientesCreateManyClientesInputEnvelope
    connect?: puntosClientesWhereUniqueInput | puntosClientesWhereUniqueInput[]
  }

  export type reporteCitasPendientesUncheckedCreateNestedManyWithoutClientesInput = {
    create?: XOR<reporteCitasPendientesCreateWithoutClientesInput, reporteCitasPendientesUncheckedCreateWithoutClientesInput> | reporteCitasPendientesCreateWithoutClientesInput[] | reporteCitasPendientesUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: reporteCitasPendientesCreateOrConnectWithoutClientesInput | reporteCitasPendientesCreateOrConnectWithoutClientesInput[]
    createMany?: reporteCitasPendientesCreateManyClientesInputEnvelope
    connect?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
  }

  export type reporteClientesCitasUncheckedCreateNestedManyWithoutClientesInput = {
    create?: XOR<reporteClientesCitasCreateWithoutClientesInput, reporteClientesCitasUncheckedCreateWithoutClientesInput> | reporteClientesCitasCreateWithoutClientesInput[] | reporteClientesCitasUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: reporteClientesCitasCreateOrConnectWithoutClientesInput | reporteClientesCitasCreateOrConnectWithoutClientesInput[]
    createMany?: reporteClientesCitasCreateManyClientesInputEnvelope
    connect?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
  }

  export type citasUpdateManyWithoutClientesNestedInput = {
    create?: XOR<citasCreateWithoutClientesInput, citasUncheckedCreateWithoutClientesInput> | citasCreateWithoutClientesInput[] | citasUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: citasCreateOrConnectWithoutClientesInput | citasCreateOrConnectWithoutClientesInput[]
    upsert?: citasUpsertWithWhereUniqueWithoutClientesInput | citasUpsertWithWhereUniqueWithoutClientesInput[]
    createMany?: citasCreateManyClientesInputEnvelope
    set?: citasWhereUniqueInput | citasWhereUniqueInput[]
    disconnect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    delete?: citasWhereUniqueInput | citasWhereUniqueInput[]
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    update?: citasUpdateWithWhereUniqueWithoutClientesInput | citasUpdateWithWhereUniqueWithoutClientesInput[]
    updateMany?: citasUpdateManyWithWhereWithoutClientesInput | citasUpdateManyWithWhereWithoutClientesInput[]
    deleteMany?: citasScalarWhereInput | citasScalarWhereInput[]
  }

  export type rolesUpdateOneWithoutClientesNestedInput = {
    create?: XOR<rolesCreateWithoutClientesInput, rolesUncheckedCreateWithoutClientesInput>
    connectOrCreate?: rolesCreateOrConnectWithoutClientesInput
    upsert?: rolesUpsertWithoutClientesInput
    disconnect?: rolesWhereInput | boolean
    delete?: rolesWhereInput | boolean
    connect?: rolesWhereUniqueInput
    update?: XOR<XOR<rolesUpdateToOneWithWhereWithoutClientesInput, rolesUpdateWithoutClientesInput>, rolesUncheckedUpdateWithoutClientesInput>
  }

  export type historialCitasUpdateManyWithoutClientesNestedInput = {
    create?: XOR<historialCitasCreateWithoutClientesInput, historialCitasUncheckedCreateWithoutClientesInput> | historialCitasCreateWithoutClientesInput[] | historialCitasUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: historialCitasCreateOrConnectWithoutClientesInput | historialCitasCreateOrConnectWithoutClientesInput[]
    upsert?: historialCitasUpsertWithWhereUniqueWithoutClientesInput | historialCitasUpsertWithWhereUniqueWithoutClientesInput[]
    createMany?: historialCitasCreateManyClientesInputEnvelope
    set?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
    disconnect?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
    delete?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
    connect?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
    update?: historialCitasUpdateWithWhereUniqueWithoutClientesInput | historialCitasUpdateWithWhereUniqueWithoutClientesInput[]
    updateMany?: historialCitasUpdateManyWithWhereWithoutClientesInput | historialCitasUpdateManyWithWhereWithoutClientesInput[]
    deleteMany?: historialCitasScalarWhereInput | historialCitasScalarWhereInput[]
  }

  export type historialClientesUpdateManyWithoutClientesNestedInput = {
    create?: XOR<historialClientesCreateWithoutClientesInput, historialClientesUncheckedCreateWithoutClientesInput> | historialClientesCreateWithoutClientesInput[] | historialClientesUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: historialClientesCreateOrConnectWithoutClientesInput | historialClientesCreateOrConnectWithoutClientesInput[]
    upsert?: historialClientesUpsertWithWhereUniqueWithoutClientesInput | historialClientesUpsertWithWhereUniqueWithoutClientesInput[]
    createMany?: historialClientesCreateManyClientesInputEnvelope
    set?: historialClientesWhereUniqueInput | historialClientesWhereUniqueInput[]
    disconnect?: historialClientesWhereUniqueInput | historialClientesWhereUniqueInput[]
    delete?: historialClientesWhereUniqueInput | historialClientesWhereUniqueInput[]
    connect?: historialClientesWhereUniqueInput | historialClientesWhereUniqueInput[]
    update?: historialClientesUpdateWithWhereUniqueWithoutClientesInput | historialClientesUpdateWithWhereUniqueWithoutClientesInput[]
    updateMany?: historialClientesUpdateManyWithWhereWithoutClientesInput | historialClientesUpdateManyWithWhereWithoutClientesInput[]
    deleteMany?: historialClientesScalarWhereInput | historialClientesScalarWhereInput[]
  }

  export type historialCuentaUpdateManyWithoutClientesNestedInput = {
    create?: XOR<historialCuentaCreateWithoutClientesInput, historialCuentaUncheckedCreateWithoutClientesInput> | historialCuentaCreateWithoutClientesInput[] | historialCuentaUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: historialCuentaCreateOrConnectWithoutClientesInput | historialCuentaCreateOrConnectWithoutClientesInput[]
    upsert?: historialCuentaUpsertWithWhereUniqueWithoutClientesInput | historialCuentaUpsertWithWhereUniqueWithoutClientesInput[]
    createMany?: historialCuentaCreateManyClientesInputEnvelope
    set?: historialCuentaWhereUniqueInput | historialCuentaWhereUniqueInput[]
    disconnect?: historialCuentaWhereUniqueInput | historialCuentaWhereUniqueInput[]
    delete?: historialCuentaWhereUniqueInput | historialCuentaWhereUniqueInput[]
    connect?: historialCuentaWhereUniqueInput | historialCuentaWhereUniqueInput[]
    update?: historialCuentaUpdateWithWhereUniqueWithoutClientesInput | historialCuentaUpdateWithWhereUniqueWithoutClientesInput[]
    updateMany?: historialCuentaUpdateManyWithWhereWithoutClientesInput | historialCuentaUpdateManyWithWhereWithoutClientesInput[]
    deleteMany?: historialCuentaScalarWhereInput | historialCuentaScalarWhereInput[]
  }

  export type historialGastoPuntosUpdateManyWithoutClientesNestedInput = {
    create?: XOR<historialGastoPuntosCreateWithoutClientesInput, historialGastoPuntosUncheckedCreateWithoutClientesInput> | historialGastoPuntosCreateWithoutClientesInput[] | historialGastoPuntosUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: historialGastoPuntosCreateOrConnectWithoutClientesInput | historialGastoPuntosCreateOrConnectWithoutClientesInput[]
    upsert?: historialGastoPuntosUpsertWithWhereUniqueWithoutClientesInput | historialGastoPuntosUpsertWithWhereUniqueWithoutClientesInput[]
    createMany?: historialGastoPuntosCreateManyClientesInputEnvelope
    set?: historialGastoPuntosWhereUniqueInput | historialGastoPuntosWhereUniqueInput[]
    disconnect?: historialGastoPuntosWhereUniqueInput | historialGastoPuntosWhereUniqueInput[]
    delete?: historialGastoPuntosWhereUniqueInput | historialGastoPuntosWhereUniqueInput[]
    connect?: historialGastoPuntosWhereUniqueInput | historialGastoPuntosWhereUniqueInput[]
    update?: historialGastoPuntosUpdateWithWhereUniqueWithoutClientesInput | historialGastoPuntosUpdateWithWhereUniqueWithoutClientesInput[]
    updateMany?: historialGastoPuntosUpdateManyWithWhereWithoutClientesInput | historialGastoPuntosUpdateManyWithWhereWithoutClientesInput[]
    deleteMany?: historialGastoPuntosScalarWhereInput | historialGastoPuntosScalarWhereInput[]
  }

  export type puntosClientesUpdateManyWithoutClientesNestedInput = {
    create?: XOR<puntosClientesCreateWithoutClientesInput, puntosClientesUncheckedCreateWithoutClientesInput> | puntosClientesCreateWithoutClientesInput[] | puntosClientesUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: puntosClientesCreateOrConnectWithoutClientesInput | puntosClientesCreateOrConnectWithoutClientesInput[]
    upsert?: puntosClientesUpsertWithWhereUniqueWithoutClientesInput | puntosClientesUpsertWithWhereUniqueWithoutClientesInput[]
    createMany?: puntosClientesCreateManyClientesInputEnvelope
    set?: puntosClientesWhereUniqueInput | puntosClientesWhereUniqueInput[]
    disconnect?: puntosClientesWhereUniqueInput | puntosClientesWhereUniqueInput[]
    delete?: puntosClientesWhereUniqueInput | puntosClientesWhereUniqueInput[]
    connect?: puntosClientesWhereUniqueInput | puntosClientesWhereUniqueInput[]
    update?: puntosClientesUpdateWithWhereUniqueWithoutClientesInput | puntosClientesUpdateWithWhereUniqueWithoutClientesInput[]
    updateMany?: puntosClientesUpdateManyWithWhereWithoutClientesInput | puntosClientesUpdateManyWithWhereWithoutClientesInput[]
    deleteMany?: puntosClientesScalarWhereInput | puntosClientesScalarWhereInput[]
  }

  export type reporteCitasPendientesUpdateManyWithoutClientesNestedInput = {
    create?: XOR<reporteCitasPendientesCreateWithoutClientesInput, reporteCitasPendientesUncheckedCreateWithoutClientesInput> | reporteCitasPendientesCreateWithoutClientesInput[] | reporteCitasPendientesUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: reporteCitasPendientesCreateOrConnectWithoutClientesInput | reporteCitasPendientesCreateOrConnectWithoutClientesInput[]
    upsert?: reporteCitasPendientesUpsertWithWhereUniqueWithoutClientesInput | reporteCitasPendientesUpsertWithWhereUniqueWithoutClientesInput[]
    createMany?: reporteCitasPendientesCreateManyClientesInputEnvelope
    set?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
    disconnect?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
    delete?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
    connect?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
    update?: reporteCitasPendientesUpdateWithWhereUniqueWithoutClientesInput | reporteCitasPendientesUpdateWithWhereUniqueWithoutClientesInput[]
    updateMany?: reporteCitasPendientesUpdateManyWithWhereWithoutClientesInput | reporteCitasPendientesUpdateManyWithWhereWithoutClientesInput[]
    deleteMany?: reporteCitasPendientesScalarWhereInput | reporteCitasPendientesScalarWhereInput[]
  }

  export type reporteClientesCitasUpdateManyWithoutClientesNestedInput = {
    create?: XOR<reporteClientesCitasCreateWithoutClientesInput, reporteClientesCitasUncheckedCreateWithoutClientesInput> | reporteClientesCitasCreateWithoutClientesInput[] | reporteClientesCitasUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: reporteClientesCitasCreateOrConnectWithoutClientesInput | reporteClientesCitasCreateOrConnectWithoutClientesInput[]
    upsert?: reporteClientesCitasUpsertWithWhereUniqueWithoutClientesInput | reporteClientesCitasUpsertWithWhereUniqueWithoutClientesInput[]
    createMany?: reporteClientesCitasCreateManyClientesInputEnvelope
    set?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
    disconnect?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
    delete?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
    connect?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
    update?: reporteClientesCitasUpdateWithWhereUniqueWithoutClientesInput | reporteClientesCitasUpdateWithWhereUniqueWithoutClientesInput[]
    updateMany?: reporteClientesCitasUpdateManyWithWhereWithoutClientesInput | reporteClientesCitasUpdateManyWithWhereWithoutClientesInput[]
    deleteMany?: reporteClientesCitasScalarWhereInput | reporteClientesCitasScalarWhereInput[]
  }

  export type citasUncheckedUpdateManyWithoutClientesNestedInput = {
    create?: XOR<citasCreateWithoutClientesInput, citasUncheckedCreateWithoutClientesInput> | citasCreateWithoutClientesInput[] | citasUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: citasCreateOrConnectWithoutClientesInput | citasCreateOrConnectWithoutClientesInput[]
    upsert?: citasUpsertWithWhereUniqueWithoutClientesInput | citasUpsertWithWhereUniqueWithoutClientesInput[]
    createMany?: citasCreateManyClientesInputEnvelope
    set?: citasWhereUniqueInput | citasWhereUniqueInput[]
    disconnect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    delete?: citasWhereUniqueInput | citasWhereUniqueInput[]
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    update?: citasUpdateWithWhereUniqueWithoutClientesInput | citasUpdateWithWhereUniqueWithoutClientesInput[]
    updateMany?: citasUpdateManyWithWhereWithoutClientesInput | citasUpdateManyWithWhereWithoutClientesInput[]
    deleteMany?: citasScalarWhereInput | citasScalarWhereInput[]
  }

  export type historialCitasUncheckedUpdateManyWithoutClientesNestedInput = {
    create?: XOR<historialCitasCreateWithoutClientesInput, historialCitasUncheckedCreateWithoutClientesInput> | historialCitasCreateWithoutClientesInput[] | historialCitasUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: historialCitasCreateOrConnectWithoutClientesInput | historialCitasCreateOrConnectWithoutClientesInput[]
    upsert?: historialCitasUpsertWithWhereUniqueWithoutClientesInput | historialCitasUpsertWithWhereUniqueWithoutClientesInput[]
    createMany?: historialCitasCreateManyClientesInputEnvelope
    set?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
    disconnect?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
    delete?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
    connect?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
    update?: historialCitasUpdateWithWhereUniqueWithoutClientesInput | historialCitasUpdateWithWhereUniqueWithoutClientesInput[]
    updateMany?: historialCitasUpdateManyWithWhereWithoutClientesInput | historialCitasUpdateManyWithWhereWithoutClientesInput[]
    deleteMany?: historialCitasScalarWhereInput | historialCitasScalarWhereInput[]
  }

  export type historialClientesUncheckedUpdateManyWithoutClientesNestedInput = {
    create?: XOR<historialClientesCreateWithoutClientesInput, historialClientesUncheckedCreateWithoutClientesInput> | historialClientesCreateWithoutClientesInput[] | historialClientesUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: historialClientesCreateOrConnectWithoutClientesInput | historialClientesCreateOrConnectWithoutClientesInput[]
    upsert?: historialClientesUpsertWithWhereUniqueWithoutClientesInput | historialClientesUpsertWithWhereUniqueWithoutClientesInput[]
    createMany?: historialClientesCreateManyClientesInputEnvelope
    set?: historialClientesWhereUniqueInput | historialClientesWhereUniqueInput[]
    disconnect?: historialClientesWhereUniqueInput | historialClientesWhereUniqueInput[]
    delete?: historialClientesWhereUniqueInput | historialClientesWhereUniqueInput[]
    connect?: historialClientesWhereUniqueInput | historialClientesWhereUniqueInput[]
    update?: historialClientesUpdateWithWhereUniqueWithoutClientesInput | historialClientesUpdateWithWhereUniqueWithoutClientesInput[]
    updateMany?: historialClientesUpdateManyWithWhereWithoutClientesInput | historialClientesUpdateManyWithWhereWithoutClientesInput[]
    deleteMany?: historialClientesScalarWhereInput | historialClientesScalarWhereInput[]
  }

  export type historialCuentaUncheckedUpdateManyWithoutClientesNestedInput = {
    create?: XOR<historialCuentaCreateWithoutClientesInput, historialCuentaUncheckedCreateWithoutClientesInput> | historialCuentaCreateWithoutClientesInput[] | historialCuentaUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: historialCuentaCreateOrConnectWithoutClientesInput | historialCuentaCreateOrConnectWithoutClientesInput[]
    upsert?: historialCuentaUpsertWithWhereUniqueWithoutClientesInput | historialCuentaUpsertWithWhereUniqueWithoutClientesInput[]
    createMany?: historialCuentaCreateManyClientesInputEnvelope
    set?: historialCuentaWhereUniqueInput | historialCuentaWhereUniqueInput[]
    disconnect?: historialCuentaWhereUniqueInput | historialCuentaWhereUniqueInput[]
    delete?: historialCuentaWhereUniqueInput | historialCuentaWhereUniqueInput[]
    connect?: historialCuentaWhereUniqueInput | historialCuentaWhereUniqueInput[]
    update?: historialCuentaUpdateWithWhereUniqueWithoutClientesInput | historialCuentaUpdateWithWhereUniqueWithoutClientesInput[]
    updateMany?: historialCuentaUpdateManyWithWhereWithoutClientesInput | historialCuentaUpdateManyWithWhereWithoutClientesInput[]
    deleteMany?: historialCuentaScalarWhereInput | historialCuentaScalarWhereInput[]
  }

  export type historialGastoPuntosUncheckedUpdateManyWithoutClientesNestedInput = {
    create?: XOR<historialGastoPuntosCreateWithoutClientesInput, historialGastoPuntosUncheckedCreateWithoutClientesInput> | historialGastoPuntosCreateWithoutClientesInput[] | historialGastoPuntosUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: historialGastoPuntosCreateOrConnectWithoutClientesInput | historialGastoPuntosCreateOrConnectWithoutClientesInput[]
    upsert?: historialGastoPuntosUpsertWithWhereUniqueWithoutClientesInput | historialGastoPuntosUpsertWithWhereUniqueWithoutClientesInput[]
    createMany?: historialGastoPuntosCreateManyClientesInputEnvelope
    set?: historialGastoPuntosWhereUniqueInput | historialGastoPuntosWhereUniqueInput[]
    disconnect?: historialGastoPuntosWhereUniqueInput | historialGastoPuntosWhereUniqueInput[]
    delete?: historialGastoPuntosWhereUniqueInput | historialGastoPuntosWhereUniqueInput[]
    connect?: historialGastoPuntosWhereUniqueInput | historialGastoPuntosWhereUniqueInput[]
    update?: historialGastoPuntosUpdateWithWhereUniqueWithoutClientesInput | historialGastoPuntosUpdateWithWhereUniqueWithoutClientesInput[]
    updateMany?: historialGastoPuntosUpdateManyWithWhereWithoutClientesInput | historialGastoPuntosUpdateManyWithWhereWithoutClientesInput[]
    deleteMany?: historialGastoPuntosScalarWhereInput | historialGastoPuntosScalarWhereInput[]
  }

  export type puntosClientesUncheckedUpdateManyWithoutClientesNestedInput = {
    create?: XOR<puntosClientesCreateWithoutClientesInput, puntosClientesUncheckedCreateWithoutClientesInput> | puntosClientesCreateWithoutClientesInput[] | puntosClientesUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: puntosClientesCreateOrConnectWithoutClientesInput | puntosClientesCreateOrConnectWithoutClientesInput[]
    upsert?: puntosClientesUpsertWithWhereUniqueWithoutClientesInput | puntosClientesUpsertWithWhereUniqueWithoutClientesInput[]
    createMany?: puntosClientesCreateManyClientesInputEnvelope
    set?: puntosClientesWhereUniqueInput | puntosClientesWhereUniqueInput[]
    disconnect?: puntosClientesWhereUniqueInput | puntosClientesWhereUniqueInput[]
    delete?: puntosClientesWhereUniqueInput | puntosClientesWhereUniqueInput[]
    connect?: puntosClientesWhereUniqueInput | puntosClientesWhereUniqueInput[]
    update?: puntosClientesUpdateWithWhereUniqueWithoutClientesInput | puntosClientesUpdateWithWhereUniqueWithoutClientesInput[]
    updateMany?: puntosClientesUpdateManyWithWhereWithoutClientesInput | puntosClientesUpdateManyWithWhereWithoutClientesInput[]
    deleteMany?: puntosClientesScalarWhereInput | puntosClientesScalarWhereInput[]
  }

  export type reporteCitasPendientesUncheckedUpdateManyWithoutClientesNestedInput = {
    create?: XOR<reporteCitasPendientesCreateWithoutClientesInput, reporteCitasPendientesUncheckedCreateWithoutClientesInput> | reporteCitasPendientesCreateWithoutClientesInput[] | reporteCitasPendientesUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: reporteCitasPendientesCreateOrConnectWithoutClientesInput | reporteCitasPendientesCreateOrConnectWithoutClientesInput[]
    upsert?: reporteCitasPendientesUpsertWithWhereUniqueWithoutClientesInput | reporteCitasPendientesUpsertWithWhereUniqueWithoutClientesInput[]
    createMany?: reporteCitasPendientesCreateManyClientesInputEnvelope
    set?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
    disconnect?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
    delete?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
    connect?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
    update?: reporteCitasPendientesUpdateWithWhereUniqueWithoutClientesInput | reporteCitasPendientesUpdateWithWhereUniqueWithoutClientesInput[]
    updateMany?: reporteCitasPendientesUpdateManyWithWhereWithoutClientesInput | reporteCitasPendientesUpdateManyWithWhereWithoutClientesInput[]
    deleteMany?: reporteCitasPendientesScalarWhereInput | reporteCitasPendientesScalarWhereInput[]
  }

  export type reporteClientesCitasUncheckedUpdateManyWithoutClientesNestedInput = {
    create?: XOR<reporteClientesCitasCreateWithoutClientesInput, reporteClientesCitasUncheckedCreateWithoutClientesInput> | reporteClientesCitasCreateWithoutClientesInput[] | reporteClientesCitasUncheckedCreateWithoutClientesInput[]
    connectOrCreate?: reporteClientesCitasCreateOrConnectWithoutClientesInput | reporteClientesCitasCreateOrConnectWithoutClientesInput[]
    upsert?: reporteClientesCitasUpsertWithWhereUniqueWithoutClientesInput | reporteClientesCitasUpsertWithWhereUniqueWithoutClientesInput[]
    createMany?: reporteClientesCitasCreateManyClientesInputEnvelope
    set?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
    disconnect?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
    delete?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
    connect?: reporteClientesCitasWhereUniqueInput | reporteClientesCitasWhereUniqueInput[]
    update?: reporteClientesCitasUpdateWithWhereUniqueWithoutClientesInput | reporteClientesCitasUpdateWithWhereUniqueWithoutClientesInput[]
    updateMany?: reporteClientesCitasUpdateManyWithWhereWithoutClientesInput | reporteClientesCitasUpdateManyWithWhereWithoutClientesInput[]
    deleteMany?: reporteClientesCitasScalarWhereInput | reporteClientesCitasScalarWhereInput[]
  }

  export type catalogoCreateNestedOneWithoutDetalleServicioInput = {
    create?: XOR<catalogoCreateWithoutDetalleServicioInput, catalogoUncheckedCreateWithoutDetalleServicioInput>
    connectOrCreate?: catalogoCreateOrConnectWithoutDetalleServicioInput
    connect?: catalogoWhereUniqueInput
  }

  export type catalogoUpdateOneWithoutDetalleServicioNestedInput = {
    create?: XOR<catalogoCreateWithoutDetalleServicioInput, catalogoUncheckedCreateWithoutDetalleServicioInput>
    connectOrCreate?: catalogoCreateOrConnectWithoutDetalleServicioInput
    upsert?: catalogoUpsertWithoutDetalleServicioInput
    disconnect?: catalogoWhereInput | boolean
    delete?: catalogoWhereInput | boolean
    connect?: catalogoWhereUniqueInput
    update?: XOR<XOR<catalogoUpdateToOneWithWhereWithoutDetalleServicioInput, catalogoUpdateWithoutDetalleServicioInput>, catalogoUncheckedUpdateWithoutDetalleServicioInput>
  }

  export type estilistasCreateNestedOneWithoutDisponibilidadTiempoRealInput = {
    create?: XOR<estilistasCreateWithoutDisponibilidadTiempoRealInput, estilistasUncheckedCreateWithoutDisponibilidadTiempoRealInput>
    connectOrCreate?: estilistasCreateOrConnectWithoutDisponibilidadTiempoRealInput
    connect?: estilistasWhereUniqueInput
  }

  export type estilistasUpdateOneWithoutDisponibilidadTiempoRealNestedInput = {
    create?: XOR<estilistasCreateWithoutDisponibilidadTiempoRealInput, estilistasUncheckedCreateWithoutDisponibilidadTiempoRealInput>
    connectOrCreate?: estilistasCreateOrConnectWithoutDisponibilidadTiempoRealInput
    upsert?: estilistasUpsertWithoutDisponibilidadTiempoRealInput
    disconnect?: estilistasWhereInput | boolean
    delete?: estilistasWhereInput | boolean
    connect?: estilistasWhereUniqueInput
    update?: XOR<XOR<estilistasUpdateToOneWithWhereWithoutDisponibilidadTiempoRealInput, estilistasUpdateWithoutDisponibilidadTiempoRealInput>, estilistasUncheckedUpdateWithoutDisponibilidadTiempoRealInput>
  }

  export type bloqueoHorariosCreateNestedManyWithoutEstilistasInput = {
    create?: XOR<bloqueoHorariosCreateWithoutEstilistasInput, bloqueoHorariosUncheckedCreateWithoutEstilistasInput> | bloqueoHorariosCreateWithoutEstilistasInput[] | bloqueoHorariosUncheckedCreateWithoutEstilistasInput[]
    connectOrCreate?: bloqueoHorariosCreateOrConnectWithoutEstilistasInput | bloqueoHorariosCreateOrConnectWithoutEstilistasInput[]
    createMany?: bloqueoHorariosCreateManyEstilistasInputEnvelope
    connect?: bloqueoHorariosWhereUniqueInput | bloqueoHorariosWhereUniqueInput[]
  }

  export type citasCreateNestedManyWithoutEstilistasInput = {
    create?: XOR<citasCreateWithoutEstilistasInput, citasUncheckedCreateWithoutEstilistasInput> | citasCreateWithoutEstilistasInput[] | citasUncheckedCreateWithoutEstilistasInput[]
    connectOrCreate?: citasCreateOrConnectWithoutEstilistasInput | citasCreateOrConnectWithoutEstilistasInput[]
    createMany?: citasCreateManyEstilistasInputEnvelope
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
  }

  export type disponibilidadTiempoRealCreateNestedManyWithoutEstilistasInput = {
    create?: XOR<disponibilidadTiempoRealCreateWithoutEstilistasInput, disponibilidadTiempoRealUncheckedCreateWithoutEstilistasInput> | disponibilidadTiempoRealCreateWithoutEstilistasInput[] | disponibilidadTiempoRealUncheckedCreateWithoutEstilistasInput[]
    connectOrCreate?: disponibilidadTiempoRealCreateOrConnectWithoutEstilistasInput | disponibilidadTiempoRealCreateOrConnectWithoutEstilistasInput[]
    createMany?: disponibilidadTiempoRealCreateManyEstilistasInputEnvelope
    connect?: disponibilidadTiempoRealWhereUniqueInput | disponibilidadTiempoRealWhereUniqueInput[]
  }

  export type rolesCreateNestedOneWithoutEstilistasInput = {
    create?: XOR<rolesCreateWithoutEstilistasInput, rolesUncheckedCreateWithoutEstilistasInput>
    connectOrCreate?: rolesCreateOrConnectWithoutEstilistasInput
    connect?: rolesWhereUniqueInput
  }

  export type historialCitasCreateNestedManyWithoutEstilistasInput = {
    create?: XOR<historialCitasCreateWithoutEstilistasInput, historialCitasUncheckedCreateWithoutEstilistasInput> | historialCitasCreateWithoutEstilistasInput[] | historialCitasUncheckedCreateWithoutEstilistasInput[]
    connectOrCreate?: historialCitasCreateOrConnectWithoutEstilistasInput | historialCitasCreateOrConnectWithoutEstilistasInput[]
    createMany?: historialCitasCreateManyEstilistasInputEnvelope
    connect?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
  }

  export type reporteCitasPendientesCreateNestedManyWithoutEstilistasInput = {
    create?: XOR<reporteCitasPendientesCreateWithoutEstilistasInput, reporteCitasPendientesUncheckedCreateWithoutEstilistasInput> | reporteCitasPendientesCreateWithoutEstilistasInput[] | reporteCitasPendientesUncheckedCreateWithoutEstilistasInput[]
    connectOrCreate?: reporteCitasPendientesCreateOrConnectWithoutEstilistasInput | reporteCitasPendientesCreateOrConnectWithoutEstilistasInput[]
    createMany?: reporteCitasPendientesCreateManyEstilistasInputEnvelope
    connect?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
  }

  export type reporteHorarioEstilistasCreateNestedManyWithoutEstilistasInput = {
    create?: XOR<reporteHorarioEstilistasCreateWithoutEstilistasInput, reporteHorarioEstilistasUncheckedCreateWithoutEstilistasInput> | reporteHorarioEstilistasCreateWithoutEstilistasInput[] | reporteHorarioEstilistasUncheckedCreateWithoutEstilistasInput[]
    connectOrCreate?: reporteHorarioEstilistasCreateOrConnectWithoutEstilistasInput | reporteHorarioEstilistasCreateOrConnectWithoutEstilistasInput[]
    createMany?: reporteHorarioEstilistasCreateManyEstilistasInputEnvelope
    connect?: reporteHorarioEstilistasWhereUniqueInput | reporteHorarioEstilistasWhereUniqueInput[]
  }

  export type bloqueoHorariosUncheckedCreateNestedManyWithoutEstilistasInput = {
    create?: XOR<bloqueoHorariosCreateWithoutEstilistasInput, bloqueoHorariosUncheckedCreateWithoutEstilistasInput> | bloqueoHorariosCreateWithoutEstilistasInput[] | bloqueoHorariosUncheckedCreateWithoutEstilistasInput[]
    connectOrCreate?: bloqueoHorariosCreateOrConnectWithoutEstilistasInput | bloqueoHorariosCreateOrConnectWithoutEstilistasInput[]
    createMany?: bloqueoHorariosCreateManyEstilistasInputEnvelope
    connect?: bloqueoHorariosWhereUniqueInput | bloqueoHorariosWhereUniqueInput[]
  }

  export type citasUncheckedCreateNestedManyWithoutEstilistasInput = {
    create?: XOR<citasCreateWithoutEstilistasInput, citasUncheckedCreateWithoutEstilistasInput> | citasCreateWithoutEstilistasInput[] | citasUncheckedCreateWithoutEstilistasInput[]
    connectOrCreate?: citasCreateOrConnectWithoutEstilistasInput | citasCreateOrConnectWithoutEstilistasInput[]
    createMany?: citasCreateManyEstilistasInputEnvelope
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
  }

  export type disponibilidadTiempoRealUncheckedCreateNestedManyWithoutEstilistasInput = {
    create?: XOR<disponibilidadTiempoRealCreateWithoutEstilistasInput, disponibilidadTiempoRealUncheckedCreateWithoutEstilistasInput> | disponibilidadTiempoRealCreateWithoutEstilistasInput[] | disponibilidadTiempoRealUncheckedCreateWithoutEstilistasInput[]
    connectOrCreate?: disponibilidadTiempoRealCreateOrConnectWithoutEstilistasInput | disponibilidadTiempoRealCreateOrConnectWithoutEstilistasInput[]
    createMany?: disponibilidadTiempoRealCreateManyEstilistasInputEnvelope
    connect?: disponibilidadTiempoRealWhereUniqueInput | disponibilidadTiempoRealWhereUniqueInput[]
  }

  export type historialCitasUncheckedCreateNestedManyWithoutEstilistasInput = {
    create?: XOR<historialCitasCreateWithoutEstilistasInput, historialCitasUncheckedCreateWithoutEstilistasInput> | historialCitasCreateWithoutEstilistasInput[] | historialCitasUncheckedCreateWithoutEstilistasInput[]
    connectOrCreate?: historialCitasCreateOrConnectWithoutEstilistasInput | historialCitasCreateOrConnectWithoutEstilistasInput[]
    createMany?: historialCitasCreateManyEstilistasInputEnvelope
    connect?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
  }

  export type reporteCitasPendientesUncheckedCreateNestedManyWithoutEstilistasInput = {
    create?: XOR<reporteCitasPendientesCreateWithoutEstilistasInput, reporteCitasPendientesUncheckedCreateWithoutEstilistasInput> | reporteCitasPendientesCreateWithoutEstilistasInput[] | reporteCitasPendientesUncheckedCreateWithoutEstilistasInput[]
    connectOrCreate?: reporteCitasPendientesCreateOrConnectWithoutEstilistasInput | reporteCitasPendientesCreateOrConnectWithoutEstilistasInput[]
    createMany?: reporteCitasPendientesCreateManyEstilistasInputEnvelope
    connect?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
  }

  export type reporteHorarioEstilistasUncheckedCreateNestedManyWithoutEstilistasInput = {
    create?: XOR<reporteHorarioEstilistasCreateWithoutEstilistasInput, reporteHorarioEstilistasUncheckedCreateWithoutEstilistasInput> | reporteHorarioEstilistasCreateWithoutEstilistasInput[] | reporteHorarioEstilistasUncheckedCreateWithoutEstilistasInput[]
    connectOrCreate?: reporteHorarioEstilistasCreateOrConnectWithoutEstilistasInput | reporteHorarioEstilistasCreateOrConnectWithoutEstilistasInput[]
    createMany?: reporteHorarioEstilistasCreateManyEstilistasInputEnvelope
    connect?: reporteHorarioEstilistasWhereUniqueInput | reporteHorarioEstilistasWhereUniqueInput[]
  }

  export type bloqueoHorariosUpdateManyWithoutEstilistasNestedInput = {
    create?: XOR<bloqueoHorariosCreateWithoutEstilistasInput, bloqueoHorariosUncheckedCreateWithoutEstilistasInput> | bloqueoHorariosCreateWithoutEstilistasInput[] | bloqueoHorariosUncheckedCreateWithoutEstilistasInput[]
    connectOrCreate?: bloqueoHorariosCreateOrConnectWithoutEstilistasInput | bloqueoHorariosCreateOrConnectWithoutEstilistasInput[]
    upsert?: bloqueoHorariosUpsertWithWhereUniqueWithoutEstilistasInput | bloqueoHorariosUpsertWithWhereUniqueWithoutEstilistasInput[]
    createMany?: bloqueoHorariosCreateManyEstilistasInputEnvelope
    set?: bloqueoHorariosWhereUniqueInput | bloqueoHorariosWhereUniqueInput[]
    disconnect?: bloqueoHorariosWhereUniqueInput | bloqueoHorariosWhereUniqueInput[]
    delete?: bloqueoHorariosWhereUniqueInput | bloqueoHorariosWhereUniqueInput[]
    connect?: bloqueoHorariosWhereUniqueInput | bloqueoHorariosWhereUniqueInput[]
    update?: bloqueoHorariosUpdateWithWhereUniqueWithoutEstilistasInput | bloqueoHorariosUpdateWithWhereUniqueWithoutEstilistasInput[]
    updateMany?: bloqueoHorariosUpdateManyWithWhereWithoutEstilistasInput | bloqueoHorariosUpdateManyWithWhereWithoutEstilistasInput[]
    deleteMany?: bloqueoHorariosScalarWhereInput | bloqueoHorariosScalarWhereInput[]
  }

  export type citasUpdateManyWithoutEstilistasNestedInput = {
    create?: XOR<citasCreateWithoutEstilistasInput, citasUncheckedCreateWithoutEstilistasInput> | citasCreateWithoutEstilistasInput[] | citasUncheckedCreateWithoutEstilistasInput[]
    connectOrCreate?: citasCreateOrConnectWithoutEstilistasInput | citasCreateOrConnectWithoutEstilistasInput[]
    upsert?: citasUpsertWithWhereUniqueWithoutEstilistasInput | citasUpsertWithWhereUniqueWithoutEstilistasInput[]
    createMany?: citasCreateManyEstilistasInputEnvelope
    set?: citasWhereUniqueInput | citasWhereUniqueInput[]
    disconnect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    delete?: citasWhereUniqueInput | citasWhereUniqueInput[]
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    update?: citasUpdateWithWhereUniqueWithoutEstilistasInput | citasUpdateWithWhereUniqueWithoutEstilistasInput[]
    updateMany?: citasUpdateManyWithWhereWithoutEstilistasInput | citasUpdateManyWithWhereWithoutEstilistasInput[]
    deleteMany?: citasScalarWhereInput | citasScalarWhereInput[]
  }

  export type disponibilidadTiempoRealUpdateManyWithoutEstilistasNestedInput = {
    create?: XOR<disponibilidadTiempoRealCreateWithoutEstilistasInput, disponibilidadTiempoRealUncheckedCreateWithoutEstilistasInput> | disponibilidadTiempoRealCreateWithoutEstilistasInput[] | disponibilidadTiempoRealUncheckedCreateWithoutEstilistasInput[]
    connectOrCreate?: disponibilidadTiempoRealCreateOrConnectWithoutEstilistasInput | disponibilidadTiempoRealCreateOrConnectWithoutEstilistasInput[]
    upsert?: disponibilidadTiempoRealUpsertWithWhereUniqueWithoutEstilistasInput | disponibilidadTiempoRealUpsertWithWhereUniqueWithoutEstilistasInput[]
    createMany?: disponibilidadTiempoRealCreateManyEstilistasInputEnvelope
    set?: disponibilidadTiempoRealWhereUniqueInput | disponibilidadTiempoRealWhereUniqueInput[]
    disconnect?: disponibilidadTiempoRealWhereUniqueInput | disponibilidadTiempoRealWhereUniqueInput[]
    delete?: disponibilidadTiempoRealWhereUniqueInput | disponibilidadTiempoRealWhereUniqueInput[]
    connect?: disponibilidadTiempoRealWhereUniqueInput | disponibilidadTiempoRealWhereUniqueInput[]
    update?: disponibilidadTiempoRealUpdateWithWhereUniqueWithoutEstilistasInput | disponibilidadTiempoRealUpdateWithWhereUniqueWithoutEstilistasInput[]
    updateMany?: disponibilidadTiempoRealUpdateManyWithWhereWithoutEstilistasInput | disponibilidadTiempoRealUpdateManyWithWhereWithoutEstilistasInput[]
    deleteMany?: disponibilidadTiempoRealScalarWhereInput | disponibilidadTiempoRealScalarWhereInput[]
  }

  export type rolesUpdateOneWithoutEstilistasNestedInput = {
    create?: XOR<rolesCreateWithoutEstilistasInput, rolesUncheckedCreateWithoutEstilistasInput>
    connectOrCreate?: rolesCreateOrConnectWithoutEstilistasInput
    upsert?: rolesUpsertWithoutEstilistasInput
    disconnect?: rolesWhereInput | boolean
    delete?: rolesWhereInput | boolean
    connect?: rolesWhereUniqueInput
    update?: XOR<XOR<rolesUpdateToOneWithWhereWithoutEstilistasInput, rolesUpdateWithoutEstilistasInput>, rolesUncheckedUpdateWithoutEstilistasInput>
  }

  export type historialCitasUpdateManyWithoutEstilistasNestedInput = {
    create?: XOR<historialCitasCreateWithoutEstilistasInput, historialCitasUncheckedCreateWithoutEstilistasInput> | historialCitasCreateWithoutEstilistasInput[] | historialCitasUncheckedCreateWithoutEstilistasInput[]
    connectOrCreate?: historialCitasCreateOrConnectWithoutEstilistasInput | historialCitasCreateOrConnectWithoutEstilistasInput[]
    upsert?: historialCitasUpsertWithWhereUniqueWithoutEstilistasInput | historialCitasUpsertWithWhereUniqueWithoutEstilistasInput[]
    createMany?: historialCitasCreateManyEstilistasInputEnvelope
    set?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
    disconnect?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
    delete?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
    connect?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
    update?: historialCitasUpdateWithWhereUniqueWithoutEstilistasInput | historialCitasUpdateWithWhereUniqueWithoutEstilistasInput[]
    updateMany?: historialCitasUpdateManyWithWhereWithoutEstilistasInput | historialCitasUpdateManyWithWhereWithoutEstilistasInput[]
    deleteMany?: historialCitasScalarWhereInput | historialCitasScalarWhereInput[]
  }

  export type reporteCitasPendientesUpdateManyWithoutEstilistasNestedInput = {
    create?: XOR<reporteCitasPendientesCreateWithoutEstilistasInput, reporteCitasPendientesUncheckedCreateWithoutEstilistasInput> | reporteCitasPendientesCreateWithoutEstilistasInput[] | reporteCitasPendientesUncheckedCreateWithoutEstilistasInput[]
    connectOrCreate?: reporteCitasPendientesCreateOrConnectWithoutEstilistasInput | reporteCitasPendientesCreateOrConnectWithoutEstilistasInput[]
    upsert?: reporteCitasPendientesUpsertWithWhereUniqueWithoutEstilistasInput | reporteCitasPendientesUpsertWithWhereUniqueWithoutEstilistasInput[]
    createMany?: reporteCitasPendientesCreateManyEstilistasInputEnvelope
    set?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
    disconnect?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
    delete?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
    connect?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
    update?: reporteCitasPendientesUpdateWithWhereUniqueWithoutEstilistasInput | reporteCitasPendientesUpdateWithWhereUniqueWithoutEstilistasInput[]
    updateMany?: reporteCitasPendientesUpdateManyWithWhereWithoutEstilistasInput | reporteCitasPendientesUpdateManyWithWhereWithoutEstilistasInput[]
    deleteMany?: reporteCitasPendientesScalarWhereInput | reporteCitasPendientesScalarWhereInput[]
  }

  export type reporteHorarioEstilistasUpdateManyWithoutEstilistasNestedInput = {
    create?: XOR<reporteHorarioEstilistasCreateWithoutEstilistasInput, reporteHorarioEstilistasUncheckedCreateWithoutEstilistasInput> | reporteHorarioEstilistasCreateWithoutEstilistasInput[] | reporteHorarioEstilistasUncheckedCreateWithoutEstilistasInput[]
    connectOrCreate?: reporteHorarioEstilistasCreateOrConnectWithoutEstilistasInput | reporteHorarioEstilistasCreateOrConnectWithoutEstilistasInput[]
    upsert?: reporteHorarioEstilistasUpsertWithWhereUniqueWithoutEstilistasInput | reporteHorarioEstilistasUpsertWithWhereUniqueWithoutEstilistasInput[]
    createMany?: reporteHorarioEstilistasCreateManyEstilistasInputEnvelope
    set?: reporteHorarioEstilistasWhereUniqueInput | reporteHorarioEstilistasWhereUniqueInput[]
    disconnect?: reporteHorarioEstilistasWhereUniqueInput | reporteHorarioEstilistasWhereUniqueInput[]
    delete?: reporteHorarioEstilistasWhereUniqueInput | reporteHorarioEstilistasWhereUniqueInput[]
    connect?: reporteHorarioEstilistasWhereUniqueInput | reporteHorarioEstilistasWhereUniqueInput[]
    update?: reporteHorarioEstilistasUpdateWithWhereUniqueWithoutEstilistasInput | reporteHorarioEstilistasUpdateWithWhereUniqueWithoutEstilistasInput[]
    updateMany?: reporteHorarioEstilistasUpdateManyWithWhereWithoutEstilistasInput | reporteHorarioEstilistasUpdateManyWithWhereWithoutEstilistasInput[]
    deleteMany?: reporteHorarioEstilistasScalarWhereInput | reporteHorarioEstilistasScalarWhereInput[]
  }

  export type bloqueoHorariosUncheckedUpdateManyWithoutEstilistasNestedInput = {
    create?: XOR<bloqueoHorariosCreateWithoutEstilistasInput, bloqueoHorariosUncheckedCreateWithoutEstilistasInput> | bloqueoHorariosCreateWithoutEstilistasInput[] | bloqueoHorariosUncheckedCreateWithoutEstilistasInput[]
    connectOrCreate?: bloqueoHorariosCreateOrConnectWithoutEstilistasInput | bloqueoHorariosCreateOrConnectWithoutEstilistasInput[]
    upsert?: bloqueoHorariosUpsertWithWhereUniqueWithoutEstilistasInput | bloqueoHorariosUpsertWithWhereUniqueWithoutEstilistasInput[]
    createMany?: bloqueoHorariosCreateManyEstilistasInputEnvelope
    set?: bloqueoHorariosWhereUniqueInput | bloqueoHorariosWhereUniqueInput[]
    disconnect?: bloqueoHorariosWhereUniqueInput | bloqueoHorariosWhereUniqueInput[]
    delete?: bloqueoHorariosWhereUniqueInput | bloqueoHorariosWhereUniqueInput[]
    connect?: bloqueoHorariosWhereUniqueInput | bloqueoHorariosWhereUniqueInput[]
    update?: bloqueoHorariosUpdateWithWhereUniqueWithoutEstilistasInput | bloqueoHorariosUpdateWithWhereUniqueWithoutEstilistasInput[]
    updateMany?: bloqueoHorariosUpdateManyWithWhereWithoutEstilistasInput | bloqueoHorariosUpdateManyWithWhereWithoutEstilistasInput[]
    deleteMany?: bloqueoHorariosScalarWhereInput | bloqueoHorariosScalarWhereInput[]
  }

  export type citasUncheckedUpdateManyWithoutEstilistasNestedInput = {
    create?: XOR<citasCreateWithoutEstilistasInput, citasUncheckedCreateWithoutEstilistasInput> | citasCreateWithoutEstilistasInput[] | citasUncheckedCreateWithoutEstilistasInput[]
    connectOrCreate?: citasCreateOrConnectWithoutEstilistasInput | citasCreateOrConnectWithoutEstilistasInput[]
    upsert?: citasUpsertWithWhereUniqueWithoutEstilistasInput | citasUpsertWithWhereUniqueWithoutEstilistasInput[]
    createMany?: citasCreateManyEstilistasInputEnvelope
    set?: citasWhereUniqueInput | citasWhereUniqueInput[]
    disconnect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    delete?: citasWhereUniqueInput | citasWhereUniqueInput[]
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    update?: citasUpdateWithWhereUniqueWithoutEstilistasInput | citasUpdateWithWhereUniqueWithoutEstilistasInput[]
    updateMany?: citasUpdateManyWithWhereWithoutEstilistasInput | citasUpdateManyWithWhereWithoutEstilistasInput[]
    deleteMany?: citasScalarWhereInput | citasScalarWhereInput[]
  }

  export type disponibilidadTiempoRealUncheckedUpdateManyWithoutEstilistasNestedInput = {
    create?: XOR<disponibilidadTiempoRealCreateWithoutEstilistasInput, disponibilidadTiempoRealUncheckedCreateWithoutEstilistasInput> | disponibilidadTiempoRealCreateWithoutEstilistasInput[] | disponibilidadTiempoRealUncheckedCreateWithoutEstilistasInput[]
    connectOrCreate?: disponibilidadTiempoRealCreateOrConnectWithoutEstilistasInput | disponibilidadTiempoRealCreateOrConnectWithoutEstilistasInput[]
    upsert?: disponibilidadTiempoRealUpsertWithWhereUniqueWithoutEstilistasInput | disponibilidadTiempoRealUpsertWithWhereUniqueWithoutEstilistasInput[]
    createMany?: disponibilidadTiempoRealCreateManyEstilistasInputEnvelope
    set?: disponibilidadTiempoRealWhereUniqueInput | disponibilidadTiempoRealWhereUniqueInput[]
    disconnect?: disponibilidadTiempoRealWhereUniqueInput | disponibilidadTiempoRealWhereUniqueInput[]
    delete?: disponibilidadTiempoRealWhereUniqueInput | disponibilidadTiempoRealWhereUniqueInput[]
    connect?: disponibilidadTiempoRealWhereUniqueInput | disponibilidadTiempoRealWhereUniqueInput[]
    update?: disponibilidadTiempoRealUpdateWithWhereUniqueWithoutEstilistasInput | disponibilidadTiempoRealUpdateWithWhereUniqueWithoutEstilistasInput[]
    updateMany?: disponibilidadTiempoRealUpdateManyWithWhereWithoutEstilistasInput | disponibilidadTiempoRealUpdateManyWithWhereWithoutEstilistasInput[]
    deleteMany?: disponibilidadTiempoRealScalarWhereInput | disponibilidadTiempoRealScalarWhereInput[]
  }

  export type historialCitasUncheckedUpdateManyWithoutEstilistasNestedInput = {
    create?: XOR<historialCitasCreateWithoutEstilistasInput, historialCitasUncheckedCreateWithoutEstilistasInput> | historialCitasCreateWithoutEstilistasInput[] | historialCitasUncheckedCreateWithoutEstilistasInput[]
    connectOrCreate?: historialCitasCreateOrConnectWithoutEstilistasInput | historialCitasCreateOrConnectWithoutEstilistasInput[]
    upsert?: historialCitasUpsertWithWhereUniqueWithoutEstilistasInput | historialCitasUpsertWithWhereUniqueWithoutEstilistasInput[]
    createMany?: historialCitasCreateManyEstilistasInputEnvelope
    set?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
    disconnect?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
    delete?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
    connect?: historialCitasWhereUniqueInput | historialCitasWhereUniqueInput[]
    update?: historialCitasUpdateWithWhereUniqueWithoutEstilistasInput | historialCitasUpdateWithWhereUniqueWithoutEstilistasInput[]
    updateMany?: historialCitasUpdateManyWithWhereWithoutEstilistasInput | historialCitasUpdateManyWithWhereWithoutEstilistasInput[]
    deleteMany?: historialCitasScalarWhereInput | historialCitasScalarWhereInput[]
  }

  export type reporteCitasPendientesUncheckedUpdateManyWithoutEstilistasNestedInput = {
    create?: XOR<reporteCitasPendientesCreateWithoutEstilistasInput, reporteCitasPendientesUncheckedCreateWithoutEstilistasInput> | reporteCitasPendientesCreateWithoutEstilistasInput[] | reporteCitasPendientesUncheckedCreateWithoutEstilistasInput[]
    connectOrCreate?: reporteCitasPendientesCreateOrConnectWithoutEstilistasInput | reporteCitasPendientesCreateOrConnectWithoutEstilistasInput[]
    upsert?: reporteCitasPendientesUpsertWithWhereUniqueWithoutEstilistasInput | reporteCitasPendientesUpsertWithWhereUniqueWithoutEstilistasInput[]
    createMany?: reporteCitasPendientesCreateManyEstilistasInputEnvelope
    set?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
    disconnect?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
    delete?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
    connect?: reporteCitasPendientesWhereUniqueInput | reporteCitasPendientesWhereUniqueInput[]
    update?: reporteCitasPendientesUpdateWithWhereUniqueWithoutEstilistasInput | reporteCitasPendientesUpdateWithWhereUniqueWithoutEstilistasInput[]
    updateMany?: reporteCitasPendientesUpdateManyWithWhereWithoutEstilistasInput | reporteCitasPendientesUpdateManyWithWhereWithoutEstilistasInput[]
    deleteMany?: reporteCitasPendientesScalarWhereInput | reporteCitasPendientesScalarWhereInput[]
  }

  export type reporteHorarioEstilistasUncheckedUpdateManyWithoutEstilistasNestedInput = {
    create?: XOR<reporteHorarioEstilistasCreateWithoutEstilistasInput, reporteHorarioEstilistasUncheckedCreateWithoutEstilistasInput> | reporteHorarioEstilistasCreateWithoutEstilistasInput[] | reporteHorarioEstilistasUncheckedCreateWithoutEstilistasInput[]
    connectOrCreate?: reporteHorarioEstilistasCreateOrConnectWithoutEstilistasInput | reporteHorarioEstilistasCreateOrConnectWithoutEstilistasInput[]
    upsert?: reporteHorarioEstilistasUpsertWithWhereUniqueWithoutEstilistasInput | reporteHorarioEstilistasUpsertWithWhereUniqueWithoutEstilistasInput[]
    createMany?: reporteHorarioEstilistasCreateManyEstilistasInputEnvelope
    set?: reporteHorarioEstilistasWhereUniqueInput | reporteHorarioEstilistasWhereUniqueInput[]
    disconnect?: reporteHorarioEstilistasWhereUniqueInput | reporteHorarioEstilistasWhereUniqueInput[]
    delete?: reporteHorarioEstilistasWhereUniqueInput | reporteHorarioEstilistasWhereUniqueInput[]
    connect?: reporteHorarioEstilistasWhereUniqueInput | reporteHorarioEstilistasWhereUniqueInput[]
    update?: reporteHorarioEstilistasUpdateWithWhereUniqueWithoutEstilistasInput | reporteHorarioEstilistasUpdateWithWhereUniqueWithoutEstilistasInput[]
    updateMany?: reporteHorarioEstilistasUpdateManyWithWhereWithoutEstilistasInput | reporteHorarioEstilistasUpdateManyWithWhereWithoutEstilistasInput[]
    deleteMany?: reporteHorarioEstilistasScalarWhereInput | reporteHorarioEstilistasScalarWhereInput[]
  }

  export type citasCreateNestedManyWithoutGaleriaEstilosInput = {
    create?: XOR<citasCreateWithoutGaleriaEstilosInput, citasUncheckedCreateWithoutGaleriaEstilosInput> | citasCreateWithoutGaleriaEstilosInput[] | citasUncheckedCreateWithoutGaleriaEstilosInput[]
    connectOrCreate?: citasCreateOrConnectWithoutGaleriaEstilosInput | citasCreateOrConnectWithoutGaleriaEstilosInput[]
    createMany?: citasCreateManyGaleriaEstilosInputEnvelope
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
  }

  export type citasUncheckedCreateNestedManyWithoutGaleriaEstilosInput = {
    create?: XOR<citasCreateWithoutGaleriaEstilosInput, citasUncheckedCreateWithoutGaleriaEstilosInput> | citasCreateWithoutGaleriaEstilosInput[] | citasUncheckedCreateWithoutGaleriaEstilosInput[]
    connectOrCreate?: citasCreateOrConnectWithoutGaleriaEstilosInput | citasCreateOrConnectWithoutGaleriaEstilosInput[]
    createMany?: citasCreateManyGaleriaEstilosInputEnvelope
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
  }

  export type citasUpdateManyWithoutGaleriaEstilosNestedInput = {
    create?: XOR<citasCreateWithoutGaleriaEstilosInput, citasUncheckedCreateWithoutGaleriaEstilosInput> | citasCreateWithoutGaleriaEstilosInput[] | citasUncheckedCreateWithoutGaleriaEstilosInput[]
    connectOrCreate?: citasCreateOrConnectWithoutGaleriaEstilosInput | citasCreateOrConnectWithoutGaleriaEstilosInput[]
    upsert?: citasUpsertWithWhereUniqueWithoutGaleriaEstilosInput | citasUpsertWithWhereUniqueWithoutGaleriaEstilosInput[]
    createMany?: citasCreateManyGaleriaEstilosInputEnvelope
    set?: citasWhereUniqueInput | citasWhereUniqueInput[]
    disconnect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    delete?: citasWhereUniqueInput | citasWhereUniqueInput[]
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    update?: citasUpdateWithWhereUniqueWithoutGaleriaEstilosInput | citasUpdateWithWhereUniqueWithoutGaleriaEstilosInput[]
    updateMany?: citasUpdateManyWithWhereWithoutGaleriaEstilosInput | citasUpdateManyWithWhereWithoutGaleriaEstilosInput[]
    deleteMany?: citasScalarWhereInput | citasScalarWhereInput[]
  }

  export type citasUncheckedUpdateManyWithoutGaleriaEstilosNestedInput = {
    create?: XOR<citasCreateWithoutGaleriaEstilosInput, citasUncheckedCreateWithoutGaleriaEstilosInput> | citasCreateWithoutGaleriaEstilosInput[] | citasUncheckedCreateWithoutGaleriaEstilosInput[]
    connectOrCreate?: citasCreateOrConnectWithoutGaleriaEstilosInput | citasCreateOrConnectWithoutGaleriaEstilosInput[]
    upsert?: citasUpsertWithWhereUniqueWithoutGaleriaEstilosInput | citasUpsertWithWhereUniqueWithoutGaleriaEstilosInput[]
    createMany?: citasCreateManyGaleriaEstilosInputEnvelope
    set?: citasWhereUniqueInput | citasWhereUniqueInput[]
    disconnect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    delete?: citasWhereUniqueInput | citasWhereUniqueInput[]
    connect?: citasWhereUniqueInput | citasWhereUniqueInput[]
    update?: citasUpdateWithWhereUniqueWithoutGaleriaEstilosInput | citasUpdateWithWhereUniqueWithoutGaleriaEstilosInput[]
    updateMany?: citasUpdateManyWithWhereWithoutGaleriaEstilosInput | citasUpdateManyWithWhereWithoutGaleriaEstilosInput[]
    deleteMany?: citasScalarWhereInput | citasScalarWhereInput[]
  }

  export type citasCreateNestedOneWithoutHistorialCitasInput = {
    create?: XOR<citasCreateWithoutHistorialCitasInput, citasUncheckedCreateWithoutHistorialCitasInput>
    connectOrCreate?: citasCreateOrConnectWithoutHistorialCitasInput
    connect?: citasWhereUniqueInput
  }

  export type clientesCreateNestedOneWithoutHistorialCitasInput = {
    create?: XOR<clientesCreateWithoutHistorialCitasInput, clientesUncheckedCreateWithoutHistorialCitasInput>
    connectOrCreate?: clientesCreateOrConnectWithoutHistorialCitasInput
    connect?: clientesWhereUniqueInput
  }

  export type estilistasCreateNestedOneWithoutHistorialCitasInput = {
    create?: XOR<estilistasCreateWithoutHistorialCitasInput, estilistasUncheckedCreateWithoutHistorialCitasInput>
    connectOrCreate?: estilistasCreateOrConnectWithoutHistorialCitasInput
    connect?: estilistasWhereUniqueInput
  }

  export type citasUpdateOneWithoutHistorialCitasNestedInput = {
    create?: XOR<citasCreateWithoutHistorialCitasInput, citasUncheckedCreateWithoutHistorialCitasInput>
    connectOrCreate?: citasCreateOrConnectWithoutHistorialCitasInput
    upsert?: citasUpsertWithoutHistorialCitasInput
    disconnect?: citasWhereInput | boolean
    delete?: citasWhereInput | boolean
    connect?: citasWhereUniqueInput
    update?: XOR<XOR<citasUpdateToOneWithWhereWithoutHistorialCitasInput, citasUpdateWithoutHistorialCitasInput>, citasUncheckedUpdateWithoutHistorialCitasInput>
  }

  export type clientesUpdateOneWithoutHistorialCitasNestedInput = {
    create?: XOR<clientesCreateWithoutHistorialCitasInput, clientesUncheckedCreateWithoutHistorialCitasInput>
    connectOrCreate?: clientesCreateOrConnectWithoutHistorialCitasInput
    upsert?: clientesUpsertWithoutHistorialCitasInput
    disconnect?: clientesWhereInput | boolean
    delete?: clientesWhereInput | boolean
    connect?: clientesWhereUniqueInput
    update?: XOR<XOR<clientesUpdateToOneWithWhereWithoutHistorialCitasInput, clientesUpdateWithoutHistorialCitasInput>, clientesUncheckedUpdateWithoutHistorialCitasInput>
  }

  export type estilistasUpdateOneWithoutHistorialCitasNestedInput = {
    create?: XOR<estilistasCreateWithoutHistorialCitasInput, estilistasUncheckedCreateWithoutHistorialCitasInput>
    connectOrCreate?: estilistasCreateOrConnectWithoutHistorialCitasInput
    upsert?: estilistasUpsertWithoutHistorialCitasInput
    disconnect?: estilistasWhereInput | boolean
    delete?: estilistasWhereInput | boolean
    connect?: estilistasWhereUniqueInput
    update?: XOR<XOR<estilistasUpdateToOneWithWhereWithoutHistorialCitasInput, estilistasUpdateWithoutHistorialCitasInput>, estilistasUncheckedUpdateWithoutHistorialCitasInput>
  }

  export type clientesCreateNestedOneWithoutHistorialClientesInput = {
    create?: XOR<clientesCreateWithoutHistorialClientesInput, clientesUncheckedCreateWithoutHistorialClientesInput>
    connectOrCreate?: clientesCreateOrConnectWithoutHistorialClientesInput
    connect?: clientesWhereUniqueInput
  }

  export type catalogoCreateNestedOneWithoutHistorialClientesInput = {
    create?: XOR<catalogoCreateWithoutHistorialClientesInput, catalogoUncheckedCreateWithoutHistorialClientesInput>
    connectOrCreate?: catalogoCreateOrConnectWithoutHistorialClientesInput
    connect?: catalogoWhereUniqueInput
  }

  export type clientesUpdateOneWithoutHistorialClientesNestedInput = {
    create?: XOR<clientesCreateWithoutHistorialClientesInput, clientesUncheckedCreateWithoutHistorialClientesInput>
    connectOrCreate?: clientesCreateOrConnectWithoutHistorialClientesInput
    upsert?: clientesUpsertWithoutHistorialClientesInput
    disconnect?: clientesWhereInput | boolean
    delete?: clientesWhereInput | boolean
    connect?: clientesWhereUniqueInput
    update?: XOR<XOR<clientesUpdateToOneWithWhereWithoutHistorialClientesInput, clientesUpdateWithoutHistorialClientesInput>, clientesUncheckedUpdateWithoutHistorialClientesInput>
  }

  export type catalogoUpdateOneWithoutHistorialClientesNestedInput = {
    create?: XOR<catalogoCreateWithoutHistorialClientesInput, catalogoUncheckedCreateWithoutHistorialClientesInput>
    connectOrCreate?: catalogoCreateOrConnectWithoutHistorialClientesInput
    upsert?: catalogoUpsertWithoutHistorialClientesInput
    disconnect?: catalogoWhereInput | boolean
    delete?: catalogoWhereInput | boolean
    connect?: catalogoWhereUniqueInput
    update?: XOR<XOR<catalogoUpdateToOneWithWhereWithoutHistorialClientesInput, catalogoUpdateWithoutHistorialClientesInput>, catalogoUncheckedUpdateWithoutHistorialClientesInput>
  }

  export type clientesCreateNestedOneWithoutHistorialCuentaInput = {
    create?: XOR<clientesCreateWithoutHistorialCuentaInput, clientesUncheckedCreateWithoutHistorialCuentaInput>
    connectOrCreate?: clientesCreateOrConnectWithoutHistorialCuentaInput
    connect?: clientesWhereUniqueInput
  }

  export type clientesUpdateOneWithoutHistorialCuentaNestedInput = {
    create?: XOR<clientesCreateWithoutHistorialCuentaInput, clientesUncheckedCreateWithoutHistorialCuentaInput>
    connectOrCreate?: clientesCreateOrConnectWithoutHistorialCuentaInput
    upsert?: clientesUpsertWithoutHistorialCuentaInput
    disconnect?: clientesWhereInput | boolean
    delete?: clientesWhereInput | boolean
    connect?: clientesWhereUniqueInput
    update?: XOR<XOR<clientesUpdateToOneWithWhereWithoutHistorialCuentaInput, clientesUpdateWithoutHistorialCuentaInput>, clientesUncheckedUpdateWithoutHistorialCuentaInput>
  }

  export type clientesCreateNestedOneWithoutHistorialGastoPuntosInput = {
    create?: XOR<clientesCreateWithoutHistorialGastoPuntosInput, clientesUncheckedCreateWithoutHistorialGastoPuntosInput>
    connectOrCreate?: clientesCreateOrConnectWithoutHistorialGastoPuntosInput
    connect?: clientesWhereUniqueInput
  }

  export type clientesUpdateOneWithoutHistorialGastoPuntosNestedInput = {
    create?: XOR<clientesCreateWithoutHistorialGastoPuntosInput, clientesUncheckedCreateWithoutHistorialGastoPuntosInput>
    connectOrCreate?: clientesCreateOrConnectWithoutHistorialGastoPuntosInput
    upsert?: clientesUpsertWithoutHistorialGastoPuntosInput
    disconnect?: clientesWhereInput | boolean
    delete?: clientesWhereInput | boolean
    connect?: clientesWhereUniqueInput
    update?: XOR<XOR<clientesUpdateToOneWithWhereWithoutHistorialGastoPuntosInput, clientesUpdateWithoutHistorialGastoPuntosInput>, clientesUncheckedUpdateWithoutHistorialGastoPuntosInput>
  }

  export type clientesCreateNestedOneWithoutPuntosClientesInput = {
    create?: XOR<clientesCreateWithoutPuntosClientesInput, clientesUncheckedCreateWithoutPuntosClientesInput>
    connectOrCreate?: clientesCreateOrConnectWithoutPuntosClientesInput
    connect?: clientesWhereUniqueInput
  }

  export type clientesUpdateOneWithoutPuntosClientesNestedInput = {
    create?: XOR<clientesCreateWithoutPuntosClientesInput, clientesUncheckedCreateWithoutPuntosClientesInput>
    connectOrCreate?: clientesCreateOrConnectWithoutPuntosClientesInput
    upsert?: clientesUpsertWithoutPuntosClientesInput
    disconnect?: clientesWhereInput | boolean
    delete?: clientesWhereInput | boolean
    connect?: clientesWhereUniqueInput
    update?: XOR<XOR<clientesUpdateToOneWithWhereWithoutPuntosClientesInput, clientesUpdateWithoutPuntosClientesInput>, clientesUncheckedUpdateWithoutPuntosClientesInput>
  }

  export type catalogoCreateNestedOneWithoutRecompensasInput = {
    create?: XOR<catalogoCreateWithoutRecompensasInput, catalogoUncheckedCreateWithoutRecompensasInput>
    connectOrCreate?: catalogoCreateOrConnectWithoutRecompensasInput
    connect?: catalogoWhereUniqueInput
  }

  export type catalogoUpdateOneWithoutRecompensasNestedInput = {
    create?: XOR<catalogoCreateWithoutRecompensasInput, catalogoUncheckedCreateWithoutRecompensasInput>
    connectOrCreate?: catalogoCreateOrConnectWithoutRecompensasInput
    upsert?: catalogoUpsertWithoutRecompensasInput
    disconnect?: catalogoWhereInput | boolean
    delete?: catalogoWhereInput | boolean
    connect?: catalogoWhereUniqueInput
    update?: XOR<XOR<catalogoUpdateToOneWithWhereWithoutRecompensasInput, catalogoUpdateWithoutRecompensasInput>, catalogoUncheckedUpdateWithoutRecompensasInput>
  }

  export type citasCreateNestedOneWithoutReporteCitasPendientesInput = {
    create?: XOR<citasCreateWithoutReporteCitasPendientesInput, citasUncheckedCreateWithoutReporteCitasPendientesInput>
    connectOrCreate?: citasCreateOrConnectWithoutReporteCitasPendientesInput
    connect?: citasWhereUniqueInput
  }

  export type clientesCreateNestedOneWithoutReporteCitasPendientesInput = {
    create?: XOR<clientesCreateWithoutReporteCitasPendientesInput, clientesUncheckedCreateWithoutReporteCitasPendientesInput>
    connectOrCreate?: clientesCreateOrConnectWithoutReporteCitasPendientesInput
    connect?: clientesWhereUniqueInput
  }

  export type estilistasCreateNestedOneWithoutReporteCitasPendientesInput = {
    create?: XOR<estilistasCreateWithoutReporteCitasPendientesInput, estilistasUncheckedCreateWithoutReporteCitasPendientesInput>
    connectOrCreate?: estilistasCreateOrConnectWithoutReporteCitasPendientesInput
    connect?: estilistasWhereUniqueInput
  }

  export type citasUpdateOneWithoutReporteCitasPendientesNestedInput = {
    create?: XOR<citasCreateWithoutReporteCitasPendientesInput, citasUncheckedCreateWithoutReporteCitasPendientesInput>
    connectOrCreate?: citasCreateOrConnectWithoutReporteCitasPendientesInput
    upsert?: citasUpsertWithoutReporteCitasPendientesInput
    disconnect?: citasWhereInput | boolean
    delete?: citasWhereInput | boolean
    connect?: citasWhereUniqueInput
    update?: XOR<XOR<citasUpdateToOneWithWhereWithoutReporteCitasPendientesInput, citasUpdateWithoutReporteCitasPendientesInput>, citasUncheckedUpdateWithoutReporteCitasPendientesInput>
  }

  export type clientesUpdateOneWithoutReporteCitasPendientesNestedInput = {
    create?: XOR<clientesCreateWithoutReporteCitasPendientesInput, clientesUncheckedCreateWithoutReporteCitasPendientesInput>
    connectOrCreate?: clientesCreateOrConnectWithoutReporteCitasPendientesInput
    upsert?: clientesUpsertWithoutReporteCitasPendientesInput
    disconnect?: clientesWhereInput | boolean
    delete?: clientesWhereInput | boolean
    connect?: clientesWhereUniqueInput
    update?: XOR<XOR<clientesUpdateToOneWithWhereWithoutReporteCitasPendientesInput, clientesUpdateWithoutReporteCitasPendientesInput>, clientesUncheckedUpdateWithoutReporteCitasPendientesInput>
  }

  export type estilistasUpdateOneWithoutReporteCitasPendientesNestedInput = {
    create?: XOR<estilistasCreateWithoutReporteCitasPendientesInput, estilistasUncheckedCreateWithoutReporteCitasPendientesInput>
    connectOrCreate?: estilistasCreateOrConnectWithoutReporteCitasPendientesInput
    upsert?: estilistasUpsertWithoutReporteCitasPendientesInput
    disconnect?: estilistasWhereInput | boolean
    delete?: estilistasWhereInput | boolean
    connect?: estilistasWhereUniqueInput
    update?: XOR<XOR<estilistasUpdateToOneWithWhereWithoutReporteCitasPendientesInput, estilistasUpdateWithoutReporteCitasPendientesInput>, estilistasUncheckedUpdateWithoutReporteCitasPendientesInput>
  }

  export type citasCreateNestedOneWithoutReporteClientesCitasInput = {
    create?: XOR<citasCreateWithoutReporteClientesCitasInput, citasUncheckedCreateWithoutReporteClientesCitasInput>
    connectOrCreate?: citasCreateOrConnectWithoutReporteClientesCitasInput
    connect?: citasWhereUniqueInput
  }

  export type clientesCreateNestedOneWithoutReporteClientesCitasInput = {
    create?: XOR<clientesCreateWithoutReporteClientesCitasInput, clientesUncheckedCreateWithoutReporteClientesCitasInput>
    connectOrCreate?: clientesCreateOrConnectWithoutReporteClientesCitasInput
    connect?: clientesWhereUniqueInput
  }

  export type catalogoCreateNestedOneWithoutReporteClientesCitasInput = {
    create?: XOR<catalogoCreateWithoutReporteClientesCitasInput, catalogoUncheckedCreateWithoutReporteClientesCitasInput>
    connectOrCreate?: catalogoCreateOrConnectWithoutReporteClientesCitasInput
    connect?: catalogoWhereUniqueInput
  }

  export type citasUpdateOneWithoutReporteClientesCitasNestedInput = {
    create?: XOR<citasCreateWithoutReporteClientesCitasInput, citasUncheckedCreateWithoutReporteClientesCitasInput>
    connectOrCreate?: citasCreateOrConnectWithoutReporteClientesCitasInput
    upsert?: citasUpsertWithoutReporteClientesCitasInput
    disconnect?: citasWhereInput | boolean
    delete?: citasWhereInput | boolean
    connect?: citasWhereUniqueInput
    update?: XOR<XOR<citasUpdateToOneWithWhereWithoutReporteClientesCitasInput, citasUpdateWithoutReporteClientesCitasInput>, citasUncheckedUpdateWithoutReporteClientesCitasInput>
  }

  export type clientesUpdateOneWithoutReporteClientesCitasNestedInput = {
    create?: XOR<clientesCreateWithoutReporteClientesCitasInput, clientesUncheckedCreateWithoutReporteClientesCitasInput>
    connectOrCreate?: clientesCreateOrConnectWithoutReporteClientesCitasInput
    upsert?: clientesUpsertWithoutReporteClientesCitasInput
    disconnect?: clientesWhereInput | boolean
    delete?: clientesWhereInput | boolean
    connect?: clientesWhereUniqueInput
    update?: XOR<XOR<clientesUpdateToOneWithWhereWithoutReporteClientesCitasInput, clientesUpdateWithoutReporteClientesCitasInput>, clientesUncheckedUpdateWithoutReporteClientesCitasInput>
  }

  export type catalogoUpdateOneWithoutReporteClientesCitasNestedInput = {
    create?: XOR<catalogoCreateWithoutReporteClientesCitasInput, catalogoUncheckedCreateWithoutReporteClientesCitasInput>
    connectOrCreate?: catalogoCreateOrConnectWithoutReporteClientesCitasInput
    upsert?: catalogoUpsertWithoutReporteClientesCitasInput
    disconnect?: catalogoWhereInput | boolean
    delete?: catalogoWhereInput | boolean
    connect?: catalogoWhereUniqueInput
    update?: XOR<XOR<catalogoUpdateToOneWithWhereWithoutReporteClientesCitasInput, catalogoUpdateWithoutReporteClientesCitasInput>, catalogoUncheckedUpdateWithoutReporteClientesCitasInput>
  }

  export type estilistasCreateNestedOneWithoutReporteHorarioEstilistasInput = {
    create?: XOR<estilistasCreateWithoutReporteHorarioEstilistasInput, estilistasUncheckedCreateWithoutReporteHorarioEstilistasInput>
    connectOrCreate?: estilistasCreateOrConnectWithoutReporteHorarioEstilistasInput
    connect?: estilistasWhereUniqueInput
  }

  export type estilistasUpdateOneWithoutReporteHorarioEstilistasNestedInput = {
    create?: XOR<estilistasCreateWithoutReporteHorarioEstilistasInput, estilistasUncheckedCreateWithoutReporteHorarioEstilistasInput>
    connectOrCreate?: estilistasCreateOrConnectWithoutReporteHorarioEstilistasInput
    upsert?: estilistasUpsertWithoutReporteHorarioEstilistasInput
    disconnect?: estilistasWhereInput | boolean
    delete?: estilistasWhereInput | boolean
    connect?: estilistasWhereUniqueInput
    update?: XOR<XOR<estilistasUpdateToOneWithWhereWithoutReporteHorarioEstilistasInput, estilistasUpdateWithoutReporteHorarioEstilistasInput>, estilistasUncheckedUpdateWithoutReporteHorarioEstilistasInput>
  }

  export type administradoresCreateNestedManyWithoutRolesInput = {
    create?: XOR<administradoresCreateWithoutRolesInput, administradoresUncheckedCreateWithoutRolesInput> | administradoresCreateWithoutRolesInput[] | administradoresUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: administradoresCreateOrConnectWithoutRolesInput | administradoresCreateOrConnectWithoutRolesInput[]
    createMany?: administradoresCreateManyRolesInputEnvelope
    connect?: administradoresWhereUniqueInput | administradoresWhereUniqueInput[]
  }

  export type clientesCreateNestedManyWithoutRolesInput = {
    create?: XOR<clientesCreateWithoutRolesInput, clientesUncheckedCreateWithoutRolesInput> | clientesCreateWithoutRolesInput[] | clientesUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: clientesCreateOrConnectWithoutRolesInput | clientesCreateOrConnectWithoutRolesInput[]
    createMany?: clientesCreateManyRolesInputEnvelope
    connect?: clientesWhereUniqueInput | clientesWhereUniqueInput[]
  }

  export type estilistasCreateNestedManyWithoutRolesInput = {
    create?: XOR<estilistasCreateWithoutRolesInput, estilistasUncheckedCreateWithoutRolesInput> | estilistasCreateWithoutRolesInput[] | estilistasUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: estilistasCreateOrConnectWithoutRolesInput | estilistasCreateOrConnectWithoutRolesInput[]
    createMany?: estilistasCreateManyRolesInputEnvelope
    connect?: estilistasWhereUniqueInput | estilistasWhereUniqueInput[]
  }

  export type administradoresUncheckedCreateNestedManyWithoutRolesInput = {
    create?: XOR<administradoresCreateWithoutRolesInput, administradoresUncheckedCreateWithoutRolesInput> | administradoresCreateWithoutRolesInput[] | administradoresUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: administradoresCreateOrConnectWithoutRolesInput | administradoresCreateOrConnectWithoutRolesInput[]
    createMany?: administradoresCreateManyRolesInputEnvelope
    connect?: administradoresWhereUniqueInput | administradoresWhereUniqueInput[]
  }

  export type clientesUncheckedCreateNestedManyWithoutRolesInput = {
    create?: XOR<clientesCreateWithoutRolesInput, clientesUncheckedCreateWithoutRolesInput> | clientesCreateWithoutRolesInput[] | clientesUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: clientesCreateOrConnectWithoutRolesInput | clientesCreateOrConnectWithoutRolesInput[]
    createMany?: clientesCreateManyRolesInputEnvelope
    connect?: clientesWhereUniqueInput | clientesWhereUniqueInput[]
  }

  export type estilistasUncheckedCreateNestedManyWithoutRolesInput = {
    create?: XOR<estilistasCreateWithoutRolesInput, estilistasUncheckedCreateWithoutRolesInput> | estilistasCreateWithoutRolesInput[] | estilistasUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: estilistasCreateOrConnectWithoutRolesInput | estilistasCreateOrConnectWithoutRolesInput[]
    createMany?: estilistasCreateManyRolesInputEnvelope
    connect?: estilistasWhereUniqueInput | estilistasWhereUniqueInput[]
  }

  export type administradoresUpdateManyWithoutRolesNestedInput = {
    create?: XOR<administradoresCreateWithoutRolesInput, administradoresUncheckedCreateWithoutRolesInput> | administradoresCreateWithoutRolesInput[] | administradoresUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: administradoresCreateOrConnectWithoutRolesInput | administradoresCreateOrConnectWithoutRolesInput[]
    upsert?: administradoresUpsertWithWhereUniqueWithoutRolesInput | administradoresUpsertWithWhereUniqueWithoutRolesInput[]
    createMany?: administradoresCreateManyRolesInputEnvelope
    set?: administradoresWhereUniqueInput | administradoresWhereUniqueInput[]
    disconnect?: administradoresWhereUniqueInput | administradoresWhereUniqueInput[]
    delete?: administradoresWhereUniqueInput | administradoresWhereUniqueInput[]
    connect?: administradoresWhereUniqueInput | administradoresWhereUniqueInput[]
    update?: administradoresUpdateWithWhereUniqueWithoutRolesInput | administradoresUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: administradoresUpdateManyWithWhereWithoutRolesInput | administradoresUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: administradoresScalarWhereInput | administradoresScalarWhereInput[]
  }

  export type clientesUpdateManyWithoutRolesNestedInput = {
    create?: XOR<clientesCreateWithoutRolesInput, clientesUncheckedCreateWithoutRolesInput> | clientesCreateWithoutRolesInput[] | clientesUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: clientesCreateOrConnectWithoutRolesInput | clientesCreateOrConnectWithoutRolesInput[]
    upsert?: clientesUpsertWithWhereUniqueWithoutRolesInput | clientesUpsertWithWhereUniqueWithoutRolesInput[]
    createMany?: clientesCreateManyRolesInputEnvelope
    set?: clientesWhereUniqueInput | clientesWhereUniqueInput[]
    disconnect?: clientesWhereUniqueInput | clientesWhereUniqueInput[]
    delete?: clientesWhereUniqueInput | clientesWhereUniqueInput[]
    connect?: clientesWhereUniqueInput | clientesWhereUniqueInput[]
    update?: clientesUpdateWithWhereUniqueWithoutRolesInput | clientesUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: clientesUpdateManyWithWhereWithoutRolesInput | clientesUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: clientesScalarWhereInput | clientesScalarWhereInput[]
  }

  export type estilistasUpdateManyWithoutRolesNestedInput = {
    create?: XOR<estilistasCreateWithoutRolesInput, estilistasUncheckedCreateWithoutRolesInput> | estilistasCreateWithoutRolesInput[] | estilistasUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: estilistasCreateOrConnectWithoutRolesInput | estilistasCreateOrConnectWithoutRolesInput[]
    upsert?: estilistasUpsertWithWhereUniqueWithoutRolesInput | estilistasUpsertWithWhereUniqueWithoutRolesInput[]
    createMany?: estilistasCreateManyRolesInputEnvelope
    set?: estilistasWhereUniqueInput | estilistasWhereUniqueInput[]
    disconnect?: estilistasWhereUniqueInput | estilistasWhereUniqueInput[]
    delete?: estilistasWhereUniqueInput | estilistasWhereUniqueInput[]
    connect?: estilistasWhereUniqueInput | estilistasWhereUniqueInput[]
    update?: estilistasUpdateWithWhereUniqueWithoutRolesInput | estilistasUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: estilistasUpdateManyWithWhereWithoutRolesInput | estilistasUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: estilistasScalarWhereInput | estilistasScalarWhereInput[]
  }

  export type administradoresUncheckedUpdateManyWithoutRolesNestedInput = {
    create?: XOR<administradoresCreateWithoutRolesInput, administradoresUncheckedCreateWithoutRolesInput> | administradoresCreateWithoutRolesInput[] | administradoresUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: administradoresCreateOrConnectWithoutRolesInput | administradoresCreateOrConnectWithoutRolesInput[]
    upsert?: administradoresUpsertWithWhereUniqueWithoutRolesInput | administradoresUpsertWithWhereUniqueWithoutRolesInput[]
    createMany?: administradoresCreateManyRolesInputEnvelope
    set?: administradoresWhereUniqueInput | administradoresWhereUniqueInput[]
    disconnect?: administradoresWhereUniqueInput | administradoresWhereUniqueInput[]
    delete?: administradoresWhereUniqueInput | administradoresWhereUniqueInput[]
    connect?: administradoresWhereUniqueInput | administradoresWhereUniqueInput[]
    update?: administradoresUpdateWithWhereUniqueWithoutRolesInput | administradoresUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: administradoresUpdateManyWithWhereWithoutRolesInput | administradoresUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: administradoresScalarWhereInput | administradoresScalarWhereInput[]
  }

  export type clientesUncheckedUpdateManyWithoutRolesNestedInput = {
    create?: XOR<clientesCreateWithoutRolesInput, clientesUncheckedCreateWithoutRolesInput> | clientesCreateWithoutRolesInput[] | clientesUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: clientesCreateOrConnectWithoutRolesInput | clientesCreateOrConnectWithoutRolesInput[]
    upsert?: clientesUpsertWithWhereUniqueWithoutRolesInput | clientesUpsertWithWhereUniqueWithoutRolesInput[]
    createMany?: clientesCreateManyRolesInputEnvelope
    set?: clientesWhereUniqueInput | clientesWhereUniqueInput[]
    disconnect?: clientesWhereUniqueInput | clientesWhereUniqueInput[]
    delete?: clientesWhereUniqueInput | clientesWhereUniqueInput[]
    connect?: clientesWhereUniqueInput | clientesWhereUniqueInput[]
    update?: clientesUpdateWithWhereUniqueWithoutRolesInput | clientesUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: clientesUpdateManyWithWhereWithoutRolesInput | clientesUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: clientesScalarWhereInput | clientesScalarWhereInput[]
  }

  export type estilistasUncheckedUpdateManyWithoutRolesNestedInput = {
    create?: XOR<estilistasCreateWithoutRolesInput, estilistasUncheckedCreateWithoutRolesInput> | estilistasCreateWithoutRolesInput[] | estilistasUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: estilistasCreateOrConnectWithoutRolesInput | estilistasCreateOrConnectWithoutRolesInput[]
    upsert?: estilistasUpsertWithWhereUniqueWithoutRolesInput | estilistasUpsertWithWhereUniqueWithoutRolesInput[]
    createMany?: estilistasCreateManyRolesInputEnvelope
    set?: estilistasWhereUniqueInput | estilistasWhereUniqueInput[]
    disconnect?: estilistasWhereUniqueInput | estilistasWhereUniqueInput[]
    delete?: estilistasWhereUniqueInput | estilistasWhereUniqueInput[]
    connect?: estilistasWhereUniqueInput | estilistasWhereUniqueInput[]
    update?: estilistasUpdateWithWhereUniqueWithoutRolesInput | estilistasUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: estilistasUpdateManyWithWhereWithoutRolesInput | estilistasUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: estilistasScalarWhereInput | estilistasScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type rolesCreateWithoutAdministradoresInput = {
    nombreRol?: string | null
    clientes?: clientesCreateNestedManyWithoutRolesInput
    estilistas?: estilistasCreateNestedManyWithoutRolesInput
  }

  export type rolesUncheckedCreateWithoutAdministradoresInput = {
    rolID?: number
    nombreRol?: string | null
    clientes?: clientesUncheckedCreateNestedManyWithoutRolesInput
    estilistas?: estilistasUncheckedCreateNestedManyWithoutRolesInput
  }

  export type rolesCreateOrConnectWithoutAdministradoresInput = {
    where: rolesWhereUniqueInput
    create: XOR<rolesCreateWithoutAdministradoresInput, rolesUncheckedCreateWithoutAdministradoresInput>
  }

  export type rolesUpsertWithoutAdministradoresInput = {
    update: XOR<rolesUpdateWithoutAdministradoresInput, rolesUncheckedUpdateWithoutAdministradoresInput>
    create: XOR<rolesCreateWithoutAdministradoresInput, rolesUncheckedCreateWithoutAdministradoresInput>
    where?: rolesWhereInput
  }

  export type rolesUpdateToOneWithWhereWithoutAdministradoresInput = {
    where?: rolesWhereInput
    data: XOR<rolesUpdateWithoutAdministradoresInput, rolesUncheckedUpdateWithoutAdministradoresInput>
  }

  export type rolesUpdateWithoutAdministradoresInput = {
    nombreRol?: NullableStringFieldUpdateOperationsInput | string | null
    clientes?: clientesUpdateManyWithoutRolesNestedInput
    estilistas?: estilistasUpdateManyWithoutRolesNestedInput
  }

  export type rolesUncheckedUpdateWithoutAdministradoresInput = {
    rolID?: IntFieldUpdateOperationsInput | number
    nombreRol?: NullableStringFieldUpdateOperationsInput | string | null
    clientes?: clientesUncheckedUpdateManyWithoutRolesNestedInput
    estilistas?: estilistasUncheckedUpdateManyWithoutRolesNestedInput
  }

  export type estilistasCreateWithoutBloqueoHorariosInput = {
    nombre?: string | null
    apellidos?: string | null
    telefono?: string | null
    direccion?: string | null
    fechaIngreso?: Date | string | null
    fechaSalida?: Date | string | null
    correo?: string | null
    contrase_a?: string | null
    estado?: string | null
    citas?: citasCreateNestedManyWithoutEstilistasInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealCreateNestedManyWithoutEstilistasInput
    roles?: rolesCreateNestedOneWithoutEstilistasInput
    historialCitas?: historialCitasCreateNestedManyWithoutEstilistasInput
    reporteCitasPendientes?: reporteCitasPendientesCreateNestedManyWithoutEstilistasInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasCreateNestedManyWithoutEstilistasInput
  }

  export type estilistasUncheckedCreateWithoutBloqueoHorariosInput = {
    estilistaID?: number
    nombre?: string | null
    apellidos?: string | null
    telefono?: string | null
    direccion?: string | null
    fechaIngreso?: Date | string | null
    fechaSalida?: Date | string | null
    correo?: string | null
    contrase_a?: string | null
    rolID?: number | null
    estado?: string | null
    citas?: citasUncheckedCreateNestedManyWithoutEstilistasInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealUncheckedCreateNestedManyWithoutEstilistasInput
    historialCitas?: historialCitasUncheckedCreateNestedManyWithoutEstilistasInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedCreateNestedManyWithoutEstilistasInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasUncheckedCreateNestedManyWithoutEstilistasInput
  }

  export type estilistasCreateOrConnectWithoutBloqueoHorariosInput = {
    where: estilistasWhereUniqueInput
    create: XOR<estilistasCreateWithoutBloqueoHorariosInput, estilistasUncheckedCreateWithoutBloqueoHorariosInput>
  }

  export type estilistasUpsertWithoutBloqueoHorariosInput = {
    update: XOR<estilistasUpdateWithoutBloqueoHorariosInput, estilistasUncheckedUpdateWithoutBloqueoHorariosInput>
    create: XOR<estilistasCreateWithoutBloqueoHorariosInput, estilistasUncheckedCreateWithoutBloqueoHorariosInput>
    where?: estilistasWhereInput
  }

  export type estilistasUpdateToOneWithWhereWithoutBloqueoHorariosInput = {
    where?: estilistasWhereInput
    data: XOR<estilistasUpdateWithoutBloqueoHorariosInput, estilistasUncheckedUpdateWithoutBloqueoHorariosInput>
  }

  export type estilistasUpdateWithoutBloqueoHorariosInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaIngreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    citas?: citasUpdateManyWithoutEstilistasNestedInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealUpdateManyWithoutEstilistasNestedInput
    roles?: rolesUpdateOneWithoutEstilistasNestedInput
    historialCitas?: historialCitasUpdateManyWithoutEstilistasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUpdateManyWithoutEstilistasNestedInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasUpdateManyWithoutEstilistasNestedInput
  }

  export type estilistasUncheckedUpdateWithoutBloqueoHorariosInput = {
    estilistaID?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaIngreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    rolID?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    citas?: citasUncheckedUpdateManyWithoutEstilistasNestedInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealUncheckedUpdateManyWithoutEstilistasNestedInput
    historialCitas?: historialCitasUncheckedUpdateManyWithoutEstilistasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedUpdateManyWithoutEstilistasNestedInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasUncheckedUpdateManyWithoutEstilistasNestedInput
  }

  export type citasCreateWithoutCatalogoInput = {
    fechaCita?: Date | string | null
    comentarios?: string | null
    clientes?: clientesCreateNestedOneWithoutCitasInput
    estilistas?: estilistasCreateNestedOneWithoutCitasInput
    galeriaEstilos?: galeriaEstilosCreateNestedOneWithoutCitasInput
    citasReagendadas?: citasReagendadasCreateNestedManyWithoutCitasInput
    historialCitas?: historialCitasCreateNestedManyWithoutCitasInput
    reporteCitasPendientes?: reporteCitasPendientesCreateNestedManyWithoutCitasInput
    reporteClientesCitas?: reporteClientesCitasCreateNestedManyWithoutCitasInput
  }

  export type citasUncheckedCreateWithoutCatalogoInput = {
    citaID?: number
    clienteID?: number | null
    estilistaID?: number | null
    fechaCita?: Date | string | null
    estiloID?: number | null
    comentarios?: string | null
    citasReagendadas?: citasReagendadasUncheckedCreateNestedManyWithoutCitasInput
    historialCitas?: historialCitasUncheckedCreateNestedManyWithoutCitasInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedCreateNestedManyWithoutCitasInput
    reporteClientesCitas?: reporteClientesCitasUncheckedCreateNestedManyWithoutCitasInput
  }

  export type citasCreateOrConnectWithoutCatalogoInput = {
    where: citasWhereUniqueInput
    create: XOR<citasCreateWithoutCatalogoInput, citasUncheckedCreateWithoutCatalogoInput>
  }

  export type citasCreateManyCatalogoInputEnvelope = {
    data: citasCreateManyCatalogoInput | citasCreateManyCatalogoInput[]
  }

  export type detalleServicioCreateWithoutCatalogoInput = {
    tiempoEstimado?: Date | string | null
  }

  export type detalleServicioUncheckedCreateWithoutCatalogoInput = {
    detalleID?: number
    tiempoEstimado?: Date | string | null
  }

  export type detalleServicioCreateOrConnectWithoutCatalogoInput = {
    where: detalleServicioWhereUniqueInput
    create: XOR<detalleServicioCreateWithoutCatalogoInput, detalleServicioUncheckedCreateWithoutCatalogoInput>
  }

  export type detalleServicioCreateManyCatalogoInputEnvelope = {
    data: detalleServicioCreateManyCatalogoInput | detalleServicioCreateManyCatalogoInput[]
  }

  export type historialClientesCreateWithoutCatalogoInput = {
    nombreCliente?: string | null
    fechaRegistro?: Date | string | null
    clientes?: clientesCreateNestedOneWithoutHistorialClientesInput
  }

  export type historialClientesUncheckedCreateWithoutCatalogoInput = {
    historialID?: number
    clienteID?: number | null
    nombreCliente?: string | null
    fechaRegistro?: Date | string | null
  }

  export type historialClientesCreateOrConnectWithoutCatalogoInput = {
    where: historialClientesWhereUniqueInput
    create: XOR<historialClientesCreateWithoutCatalogoInput, historialClientesUncheckedCreateWithoutCatalogoInput>
  }

  export type historialClientesCreateManyCatalogoInputEnvelope = {
    data: historialClientesCreateManyCatalogoInput | historialClientesCreateManyCatalogoInput[]
  }

  export type recompensasCreateWithoutCatalogoInput = {
    puntosRecompensa?: number | null
  }

  export type recompensasUncheckedCreateWithoutCatalogoInput = {
    recompensaID?: number
    puntosRecompensa?: number | null
  }

  export type recompensasCreateOrConnectWithoutCatalogoInput = {
    where: recompensasWhereUniqueInput
    create: XOR<recompensasCreateWithoutCatalogoInput, recompensasUncheckedCreateWithoutCatalogoInput>
  }

  export type recompensasCreateManyCatalogoInputEnvelope = {
    data: recompensasCreateManyCatalogoInput | recompensasCreateManyCatalogoInput[]
  }

  export type reporteClientesCitasCreateWithoutCatalogoInput = {
    nombreCliente?: string | null
    fechaCita?: Date | string | null
    citas?: citasCreateNestedOneWithoutReporteClientesCitasInput
    clientes?: clientesCreateNestedOneWithoutReporteClientesCitasInput
  }

  export type reporteClientesCitasUncheckedCreateWithoutCatalogoInput = {
    reporteID?: number
    clienteID?: number | null
    citaID?: number | null
    nombreCliente?: string | null
    fechaCita?: Date | string | null
  }

  export type reporteClientesCitasCreateOrConnectWithoutCatalogoInput = {
    where: reporteClientesCitasWhereUniqueInput
    create: XOR<reporteClientesCitasCreateWithoutCatalogoInput, reporteClientesCitasUncheckedCreateWithoutCatalogoInput>
  }

  export type reporteClientesCitasCreateManyCatalogoInputEnvelope = {
    data: reporteClientesCitasCreateManyCatalogoInput | reporteClientesCitasCreateManyCatalogoInput[]
  }

  export type citasUpsertWithWhereUniqueWithoutCatalogoInput = {
    where: citasWhereUniqueInput
    update: XOR<citasUpdateWithoutCatalogoInput, citasUncheckedUpdateWithoutCatalogoInput>
    create: XOR<citasCreateWithoutCatalogoInput, citasUncheckedCreateWithoutCatalogoInput>
  }

  export type citasUpdateWithWhereUniqueWithoutCatalogoInput = {
    where: citasWhereUniqueInput
    data: XOR<citasUpdateWithoutCatalogoInput, citasUncheckedUpdateWithoutCatalogoInput>
  }

  export type citasUpdateManyWithWhereWithoutCatalogoInput = {
    where: citasScalarWhereInput
    data: XOR<citasUpdateManyMutationInput, citasUncheckedUpdateManyWithoutCatalogoInput>
  }

  export type citasScalarWhereInput = {
    AND?: citasScalarWhereInput | citasScalarWhereInput[]
    OR?: citasScalarWhereInput[]
    NOT?: citasScalarWhereInput | citasScalarWhereInput[]
    citaID?: IntFilter<"citas"> | number
    clienteID?: IntNullableFilter<"citas"> | number | null
    estilistaID?: IntNullableFilter<"citas"> | number | null
    servicioID?: IntNullableFilter<"citas"> | number | null
    fechaCita?: DateTimeNullableFilter<"citas"> | Date | string | null
    estiloID?: IntNullableFilter<"citas"> | number | null
    comentarios?: StringNullableFilter<"citas"> | string | null
  }

  export type detalleServicioUpsertWithWhereUniqueWithoutCatalogoInput = {
    where: detalleServicioWhereUniqueInput
    update: XOR<detalleServicioUpdateWithoutCatalogoInput, detalleServicioUncheckedUpdateWithoutCatalogoInput>
    create: XOR<detalleServicioCreateWithoutCatalogoInput, detalleServicioUncheckedCreateWithoutCatalogoInput>
  }

  export type detalleServicioUpdateWithWhereUniqueWithoutCatalogoInput = {
    where: detalleServicioWhereUniqueInput
    data: XOR<detalleServicioUpdateWithoutCatalogoInput, detalleServicioUncheckedUpdateWithoutCatalogoInput>
  }

  export type detalleServicioUpdateManyWithWhereWithoutCatalogoInput = {
    where: detalleServicioScalarWhereInput
    data: XOR<detalleServicioUpdateManyMutationInput, detalleServicioUncheckedUpdateManyWithoutCatalogoInput>
  }

  export type detalleServicioScalarWhereInput = {
    AND?: detalleServicioScalarWhereInput | detalleServicioScalarWhereInput[]
    OR?: detalleServicioScalarWhereInput[]
    NOT?: detalleServicioScalarWhereInput | detalleServicioScalarWhereInput[]
    detalleID?: IntFilter<"detalleServicio"> | number
    servicioID?: IntNullableFilter<"detalleServicio"> | number | null
    tiempoEstimado?: DateTimeNullableFilter<"detalleServicio"> | Date | string | null
  }

  export type historialClientesUpsertWithWhereUniqueWithoutCatalogoInput = {
    where: historialClientesWhereUniqueInput
    update: XOR<historialClientesUpdateWithoutCatalogoInput, historialClientesUncheckedUpdateWithoutCatalogoInput>
    create: XOR<historialClientesCreateWithoutCatalogoInput, historialClientesUncheckedCreateWithoutCatalogoInput>
  }

  export type historialClientesUpdateWithWhereUniqueWithoutCatalogoInput = {
    where: historialClientesWhereUniqueInput
    data: XOR<historialClientesUpdateWithoutCatalogoInput, historialClientesUncheckedUpdateWithoutCatalogoInput>
  }

  export type historialClientesUpdateManyWithWhereWithoutCatalogoInput = {
    where: historialClientesScalarWhereInput
    data: XOR<historialClientesUpdateManyMutationInput, historialClientesUncheckedUpdateManyWithoutCatalogoInput>
  }

  export type historialClientesScalarWhereInput = {
    AND?: historialClientesScalarWhereInput | historialClientesScalarWhereInput[]
    OR?: historialClientesScalarWhereInput[]
    NOT?: historialClientesScalarWhereInput | historialClientesScalarWhereInput[]
    historialID?: IntFilter<"historialClientes"> | number
    clienteID?: IntNullableFilter<"historialClientes"> | number | null
    nombreCliente?: StringNullableFilter<"historialClientes"> | string | null
    fechaRegistro?: DateTimeNullableFilter<"historialClientes"> | Date | string | null
    ultimoServicioID?: IntNullableFilter<"historialClientes"> | number | null
  }

  export type recompensasUpsertWithWhereUniqueWithoutCatalogoInput = {
    where: recompensasWhereUniqueInput
    update: XOR<recompensasUpdateWithoutCatalogoInput, recompensasUncheckedUpdateWithoutCatalogoInput>
    create: XOR<recompensasCreateWithoutCatalogoInput, recompensasUncheckedCreateWithoutCatalogoInput>
  }

  export type recompensasUpdateWithWhereUniqueWithoutCatalogoInput = {
    where: recompensasWhereUniqueInput
    data: XOR<recompensasUpdateWithoutCatalogoInput, recompensasUncheckedUpdateWithoutCatalogoInput>
  }

  export type recompensasUpdateManyWithWhereWithoutCatalogoInput = {
    where: recompensasScalarWhereInput
    data: XOR<recompensasUpdateManyMutationInput, recompensasUncheckedUpdateManyWithoutCatalogoInput>
  }

  export type recompensasScalarWhereInput = {
    AND?: recompensasScalarWhereInput | recompensasScalarWhereInput[]
    OR?: recompensasScalarWhereInput[]
    NOT?: recompensasScalarWhereInput | recompensasScalarWhereInput[]
    recompensaID?: IntFilter<"recompensas"> | number
    servicioID?: IntNullableFilter<"recompensas"> | number | null
    puntosRecompensa?: IntNullableFilter<"recompensas"> | number | null
  }

  export type reporteClientesCitasUpsertWithWhereUniqueWithoutCatalogoInput = {
    where: reporteClientesCitasWhereUniqueInput
    update: XOR<reporteClientesCitasUpdateWithoutCatalogoInput, reporteClientesCitasUncheckedUpdateWithoutCatalogoInput>
    create: XOR<reporteClientesCitasCreateWithoutCatalogoInput, reporteClientesCitasUncheckedCreateWithoutCatalogoInput>
  }

  export type reporteClientesCitasUpdateWithWhereUniqueWithoutCatalogoInput = {
    where: reporteClientesCitasWhereUniqueInput
    data: XOR<reporteClientesCitasUpdateWithoutCatalogoInput, reporteClientesCitasUncheckedUpdateWithoutCatalogoInput>
  }

  export type reporteClientesCitasUpdateManyWithWhereWithoutCatalogoInput = {
    where: reporteClientesCitasScalarWhereInput
    data: XOR<reporteClientesCitasUpdateManyMutationInput, reporteClientesCitasUncheckedUpdateManyWithoutCatalogoInput>
  }

  export type reporteClientesCitasScalarWhereInput = {
    AND?: reporteClientesCitasScalarWhereInput | reporteClientesCitasScalarWhereInput[]
    OR?: reporteClientesCitasScalarWhereInput[]
    NOT?: reporteClientesCitasScalarWhereInput | reporteClientesCitasScalarWhereInput[]
    reporteID?: IntFilter<"reporteClientesCitas"> | number
    clienteID?: IntNullableFilter<"reporteClientesCitas"> | number | null
    citaID?: IntNullableFilter<"reporteClientesCitas"> | number | null
    nombreCliente?: StringNullableFilter<"reporteClientesCitas"> | string | null
    fechaCita?: DateTimeNullableFilter<"reporteClientesCitas"> | Date | string | null
    servicioID?: IntNullableFilter<"reporteClientesCitas"> | number | null
  }

  export type clientesCreateWithoutCitasInput = {
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    puntosGanados?: number | null
    puntosCanjeados?: number | null
    contrase_a?: string | null
    estado?: string | null
    roles?: rolesCreateNestedOneWithoutClientesInput
    historialCitas?: historialCitasCreateNestedManyWithoutClientesInput
    historialClientes?: historialClientesCreateNestedManyWithoutClientesInput
    historialCuenta?: historialCuentaCreateNestedManyWithoutClientesInput
    historialGastoPuntos?: historialGastoPuntosCreateNestedManyWithoutClientesInput
    puntosClientes?: puntosClientesCreateNestedManyWithoutClientesInput
    reporteCitasPendientes?: reporteCitasPendientesCreateNestedManyWithoutClientesInput
    reporteClientesCitas?: reporteClientesCitasCreateNestedManyWithoutClientesInput
  }

  export type clientesUncheckedCreateWithoutCitasInput = {
    clienteID?: number
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    puntosGanados?: number | null
    puntosCanjeados?: number | null
    contrase_a?: string | null
    rolID?: number | null
    estado?: string | null
    historialCitas?: historialCitasUncheckedCreateNestedManyWithoutClientesInput
    historialClientes?: historialClientesUncheckedCreateNestedManyWithoutClientesInput
    historialCuenta?: historialCuentaUncheckedCreateNestedManyWithoutClientesInput
    historialGastoPuntos?: historialGastoPuntosUncheckedCreateNestedManyWithoutClientesInput
    puntosClientes?: puntosClientesUncheckedCreateNestedManyWithoutClientesInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedCreateNestedManyWithoutClientesInput
    reporteClientesCitas?: reporteClientesCitasUncheckedCreateNestedManyWithoutClientesInput
  }

  export type clientesCreateOrConnectWithoutCitasInput = {
    where: clientesWhereUniqueInput
    create: XOR<clientesCreateWithoutCitasInput, clientesUncheckedCreateWithoutCitasInput>
  }

  export type estilistasCreateWithoutCitasInput = {
    nombre?: string | null
    apellidos?: string | null
    telefono?: string | null
    direccion?: string | null
    fechaIngreso?: Date | string | null
    fechaSalida?: Date | string | null
    correo?: string | null
    contrase_a?: string | null
    estado?: string | null
    bloqueoHorarios?: bloqueoHorariosCreateNestedManyWithoutEstilistasInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealCreateNestedManyWithoutEstilistasInput
    roles?: rolesCreateNestedOneWithoutEstilistasInput
    historialCitas?: historialCitasCreateNestedManyWithoutEstilistasInput
    reporteCitasPendientes?: reporteCitasPendientesCreateNestedManyWithoutEstilistasInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasCreateNestedManyWithoutEstilistasInput
  }

  export type estilistasUncheckedCreateWithoutCitasInput = {
    estilistaID?: number
    nombre?: string | null
    apellidos?: string | null
    telefono?: string | null
    direccion?: string | null
    fechaIngreso?: Date | string | null
    fechaSalida?: Date | string | null
    correo?: string | null
    contrase_a?: string | null
    rolID?: number | null
    estado?: string | null
    bloqueoHorarios?: bloqueoHorariosUncheckedCreateNestedManyWithoutEstilistasInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealUncheckedCreateNestedManyWithoutEstilistasInput
    historialCitas?: historialCitasUncheckedCreateNestedManyWithoutEstilistasInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedCreateNestedManyWithoutEstilistasInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasUncheckedCreateNestedManyWithoutEstilistasInput
  }

  export type estilistasCreateOrConnectWithoutCitasInput = {
    where: estilistasWhereUniqueInput
    create: XOR<estilistasCreateWithoutCitasInput, estilistasUncheckedCreateWithoutCitasInput>
  }

  export type galeriaEstilosCreateWithoutCitasInput = {
    nombreEstilo?: string | null
    rutaImagen?: string | null
  }

  export type galeriaEstilosUncheckedCreateWithoutCitasInput = {
    estiloID?: number
    nombreEstilo?: string | null
    rutaImagen?: string | null
  }

  export type galeriaEstilosCreateOrConnectWithoutCitasInput = {
    where: galeriaEstilosWhereUniqueInput
    create: XOR<galeriaEstilosCreateWithoutCitasInput, galeriaEstilosUncheckedCreateWithoutCitasInput>
  }

  export type catalogoCreateWithoutCitasInput = {
    nombreServicio?: string | null
    descripcion?: string | null
    precio?: number | null
    detalleServicio?: detalleServicioCreateNestedManyWithoutCatalogoInput
    historialClientes?: historialClientesCreateNestedManyWithoutCatalogoInput
    recompensas?: recompensasCreateNestedManyWithoutCatalogoInput
    reporteClientesCitas?: reporteClientesCitasCreateNestedManyWithoutCatalogoInput
  }

  export type catalogoUncheckedCreateWithoutCitasInput = {
    servicioID?: number
    nombreServicio?: string | null
    descripcion?: string | null
    precio?: number | null
    detalleServicio?: detalleServicioUncheckedCreateNestedManyWithoutCatalogoInput
    historialClientes?: historialClientesUncheckedCreateNestedManyWithoutCatalogoInput
    recompensas?: recompensasUncheckedCreateNestedManyWithoutCatalogoInput
    reporteClientesCitas?: reporteClientesCitasUncheckedCreateNestedManyWithoutCatalogoInput
  }

  export type catalogoCreateOrConnectWithoutCitasInput = {
    where: catalogoWhereUniqueInput
    create: XOR<catalogoCreateWithoutCitasInput, catalogoUncheckedCreateWithoutCitasInput>
  }

  export type citasReagendadasCreateWithoutCitasInput = {
    idCitaNueva?: number | null
    fechaNuevaCita?: Date | string | null
    motivo?: string | null
  }

  export type citasReagendadasUncheckedCreateWithoutCitasInput = {
    reagendadaID?: number
    idCitaNueva?: number | null
    fechaNuevaCita?: Date | string | null
    motivo?: string | null
  }

  export type citasReagendadasCreateOrConnectWithoutCitasInput = {
    where: citasReagendadasWhereUniqueInput
    create: XOR<citasReagendadasCreateWithoutCitasInput, citasReagendadasUncheckedCreateWithoutCitasInput>
  }

  export type citasReagendadasCreateManyCitasInputEnvelope = {
    data: citasReagendadasCreateManyCitasInput | citasReagendadasCreateManyCitasInput[]
  }

  export type historialCitasCreateWithoutCitasInput = {
    fechaCita?: Date | string | null
    servicioID?: number | null
    clientes?: clientesCreateNestedOneWithoutHistorialCitasInput
    estilistas?: estilistasCreateNestedOneWithoutHistorialCitasInput
  }

  export type historialCitasUncheckedCreateWithoutCitasInput = {
    historialID?: number
    clienteID?: number | null
    estilistaID?: number | null
    fechaCita?: Date | string | null
    servicioID?: number | null
  }

  export type historialCitasCreateOrConnectWithoutCitasInput = {
    where: historialCitasWhereUniqueInput
    create: XOR<historialCitasCreateWithoutCitasInput, historialCitasUncheckedCreateWithoutCitasInput>
  }

  export type historialCitasCreateManyCitasInputEnvelope = {
    data: historialCitasCreateManyCitasInput | historialCitasCreateManyCitasInput[]
  }

  export type reporteCitasPendientesCreateWithoutCitasInput = {
    fechaCita?: Date | string | null
    clientes?: clientesCreateNestedOneWithoutReporteCitasPendientesInput
    estilistas?: estilistasCreateNestedOneWithoutReporteCitasPendientesInput
  }

  export type reporteCitasPendientesUncheckedCreateWithoutCitasInput = {
    reporteID?: number
    clienteID?: number | null
    fechaCita?: Date | string | null
    estilistaID?: number | null
  }

  export type reporteCitasPendientesCreateOrConnectWithoutCitasInput = {
    where: reporteCitasPendientesWhereUniqueInput
    create: XOR<reporteCitasPendientesCreateWithoutCitasInput, reporteCitasPendientesUncheckedCreateWithoutCitasInput>
  }

  export type reporteCitasPendientesCreateManyCitasInputEnvelope = {
    data: reporteCitasPendientesCreateManyCitasInput | reporteCitasPendientesCreateManyCitasInput[]
  }

  export type reporteClientesCitasCreateWithoutCitasInput = {
    nombreCliente?: string | null
    fechaCita?: Date | string | null
    clientes?: clientesCreateNestedOneWithoutReporteClientesCitasInput
    catalogo?: catalogoCreateNestedOneWithoutReporteClientesCitasInput
  }

  export type reporteClientesCitasUncheckedCreateWithoutCitasInput = {
    reporteID?: number
    clienteID?: number | null
    nombreCliente?: string | null
    fechaCita?: Date | string | null
    servicioID?: number | null
  }

  export type reporteClientesCitasCreateOrConnectWithoutCitasInput = {
    where: reporteClientesCitasWhereUniqueInput
    create: XOR<reporteClientesCitasCreateWithoutCitasInput, reporteClientesCitasUncheckedCreateWithoutCitasInput>
  }

  export type reporteClientesCitasCreateManyCitasInputEnvelope = {
    data: reporteClientesCitasCreateManyCitasInput | reporteClientesCitasCreateManyCitasInput[]
  }

  export type clientesUpsertWithoutCitasInput = {
    update: XOR<clientesUpdateWithoutCitasInput, clientesUncheckedUpdateWithoutCitasInput>
    create: XOR<clientesCreateWithoutCitasInput, clientesUncheckedCreateWithoutCitasInput>
    where?: clientesWhereInput
  }

  export type clientesUpdateToOneWithWhereWithoutCitasInput = {
    where?: clientesWhereInput
    data: XOR<clientesUpdateWithoutCitasInput, clientesUncheckedUpdateWithoutCitasInput>
  }

  export type clientesUpdateWithoutCitasInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    puntosGanados?: NullableIntFieldUpdateOperationsInput | number | null
    puntosCanjeados?: NullableIntFieldUpdateOperationsInput | number | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: rolesUpdateOneWithoutClientesNestedInput
    historialCitas?: historialCitasUpdateManyWithoutClientesNestedInput
    historialClientes?: historialClientesUpdateManyWithoutClientesNestedInput
    historialCuenta?: historialCuentaUpdateManyWithoutClientesNestedInput
    historialGastoPuntos?: historialGastoPuntosUpdateManyWithoutClientesNestedInput
    puntosClientes?: puntosClientesUpdateManyWithoutClientesNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUpdateManyWithoutClientesNestedInput
    reporteClientesCitas?: reporteClientesCitasUpdateManyWithoutClientesNestedInput
  }

  export type clientesUncheckedUpdateWithoutCitasInput = {
    clienteID?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    puntosGanados?: NullableIntFieldUpdateOperationsInput | number | null
    puntosCanjeados?: NullableIntFieldUpdateOperationsInput | number | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    rolID?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    historialCitas?: historialCitasUncheckedUpdateManyWithoutClientesNestedInput
    historialClientes?: historialClientesUncheckedUpdateManyWithoutClientesNestedInput
    historialCuenta?: historialCuentaUncheckedUpdateManyWithoutClientesNestedInput
    historialGastoPuntos?: historialGastoPuntosUncheckedUpdateManyWithoutClientesNestedInput
    puntosClientes?: puntosClientesUncheckedUpdateManyWithoutClientesNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedUpdateManyWithoutClientesNestedInput
    reporteClientesCitas?: reporteClientesCitasUncheckedUpdateManyWithoutClientesNestedInput
  }

  export type estilistasUpsertWithoutCitasInput = {
    update: XOR<estilistasUpdateWithoutCitasInput, estilistasUncheckedUpdateWithoutCitasInput>
    create: XOR<estilistasCreateWithoutCitasInput, estilistasUncheckedCreateWithoutCitasInput>
    where?: estilistasWhereInput
  }

  export type estilistasUpdateToOneWithWhereWithoutCitasInput = {
    where?: estilistasWhereInput
    data: XOR<estilistasUpdateWithoutCitasInput, estilistasUncheckedUpdateWithoutCitasInput>
  }

  export type estilistasUpdateWithoutCitasInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaIngreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    bloqueoHorarios?: bloqueoHorariosUpdateManyWithoutEstilistasNestedInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealUpdateManyWithoutEstilistasNestedInput
    roles?: rolesUpdateOneWithoutEstilistasNestedInput
    historialCitas?: historialCitasUpdateManyWithoutEstilistasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUpdateManyWithoutEstilistasNestedInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasUpdateManyWithoutEstilistasNestedInput
  }

  export type estilistasUncheckedUpdateWithoutCitasInput = {
    estilistaID?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaIngreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    rolID?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    bloqueoHorarios?: bloqueoHorariosUncheckedUpdateManyWithoutEstilistasNestedInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealUncheckedUpdateManyWithoutEstilistasNestedInput
    historialCitas?: historialCitasUncheckedUpdateManyWithoutEstilistasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedUpdateManyWithoutEstilistasNestedInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasUncheckedUpdateManyWithoutEstilistasNestedInput
  }

  export type galeriaEstilosUpsertWithoutCitasInput = {
    update: XOR<galeriaEstilosUpdateWithoutCitasInput, galeriaEstilosUncheckedUpdateWithoutCitasInput>
    create: XOR<galeriaEstilosCreateWithoutCitasInput, galeriaEstilosUncheckedCreateWithoutCitasInput>
    where?: galeriaEstilosWhereInput
  }

  export type galeriaEstilosUpdateToOneWithWhereWithoutCitasInput = {
    where?: galeriaEstilosWhereInput
    data: XOR<galeriaEstilosUpdateWithoutCitasInput, galeriaEstilosUncheckedUpdateWithoutCitasInput>
  }

  export type galeriaEstilosUpdateWithoutCitasInput = {
    nombreEstilo?: NullableStringFieldUpdateOperationsInput | string | null
    rutaImagen?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type galeriaEstilosUncheckedUpdateWithoutCitasInput = {
    estiloID?: IntFieldUpdateOperationsInput | number
    nombreEstilo?: NullableStringFieldUpdateOperationsInput | string | null
    rutaImagen?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type catalogoUpsertWithoutCitasInput = {
    update: XOR<catalogoUpdateWithoutCitasInput, catalogoUncheckedUpdateWithoutCitasInput>
    create: XOR<catalogoCreateWithoutCitasInput, catalogoUncheckedCreateWithoutCitasInput>
    where?: catalogoWhereInput
  }

  export type catalogoUpdateToOneWithWhereWithoutCitasInput = {
    where?: catalogoWhereInput
    data: XOR<catalogoUpdateWithoutCitasInput, catalogoUncheckedUpdateWithoutCitasInput>
  }

  export type catalogoUpdateWithoutCitasInput = {
    nombreServicio?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: NullableIntFieldUpdateOperationsInput | number | null
    detalleServicio?: detalleServicioUpdateManyWithoutCatalogoNestedInput
    historialClientes?: historialClientesUpdateManyWithoutCatalogoNestedInput
    recompensas?: recompensasUpdateManyWithoutCatalogoNestedInput
    reporteClientesCitas?: reporteClientesCitasUpdateManyWithoutCatalogoNestedInput
  }

  export type catalogoUncheckedUpdateWithoutCitasInput = {
    servicioID?: IntFieldUpdateOperationsInput | number
    nombreServicio?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: NullableIntFieldUpdateOperationsInput | number | null
    detalleServicio?: detalleServicioUncheckedUpdateManyWithoutCatalogoNestedInput
    historialClientes?: historialClientesUncheckedUpdateManyWithoutCatalogoNestedInput
    recompensas?: recompensasUncheckedUpdateManyWithoutCatalogoNestedInput
    reporteClientesCitas?: reporteClientesCitasUncheckedUpdateManyWithoutCatalogoNestedInput
  }

  export type citasReagendadasUpsertWithWhereUniqueWithoutCitasInput = {
    where: citasReagendadasWhereUniqueInput
    update: XOR<citasReagendadasUpdateWithoutCitasInput, citasReagendadasUncheckedUpdateWithoutCitasInput>
    create: XOR<citasReagendadasCreateWithoutCitasInput, citasReagendadasUncheckedCreateWithoutCitasInput>
  }

  export type citasReagendadasUpdateWithWhereUniqueWithoutCitasInput = {
    where: citasReagendadasWhereUniqueInput
    data: XOR<citasReagendadasUpdateWithoutCitasInput, citasReagendadasUncheckedUpdateWithoutCitasInput>
  }

  export type citasReagendadasUpdateManyWithWhereWithoutCitasInput = {
    where: citasReagendadasScalarWhereInput
    data: XOR<citasReagendadasUpdateManyMutationInput, citasReagendadasUncheckedUpdateManyWithoutCitasInput>
  }

  export type citasReagendadasScalarWhereInput = {
    AND?: citasReagendadasScalarWhereInput | citasReagendadasScalarWhereInput[]
    OR?: citasReagendadasScalarWhereInput[]
    NOT?: citasReagendadasScalarWhereInput | citasReagendadasScalarWhereInput[]
    reagendadaID?: IntFilter<"citasReagendadas"> | number
    citaID?: IntNullableFilter<"citasReagendadas"> | number | null
    idCitaNueva?: IntNullableFilter<"citasReagendadas"> | number | null
    fechaNuevaCita?: DateTimeNullableFilter<"citasReagendadas"> | Date | string | null
    motivo?: StringNullableFilter<"citasReagendadas"> | string | null
  }

  export type historialCitasUpsertWithWhereUniqueWithoutCitasInput = {
    where: historialCitasWhereUniqueInput
    update: XOR<historialCitasUpdateWithoutCitasInput, historialCitasUncheckedUpdateWithoutCitasInput>
    create: XOR<historialCitasCreateWithoutCitasInput, historialCitasUncheckedCreateWithoutCitasInput>
  }

  export type historialCitasUpdateWithWhereUniqueWithoutCitasInput = {
    where: historialCitasWhereUniqueInput
    data: XOR<historialCitasUpdateWithoutCitasInput, historialCitasUncheckedUpdateWithoutCitasInput>
  }

  export type historialCitasUpdateManyWithWhereWithoutCitasInput = {
    where: historialCitasScalarWhereInput
    data: XOR<historialCitasUpdateManyMutationInput, historialCitasUncheckedUpdateManyWithoutCitasInput>
  }

  export type historialCitasScalarWhereInput = {
    AND?: historialCitasScalarWhereInput | historialCitasScalarWhereInput[]
    OR?: historialCitasScalarWhereInput[]
    NOT?: historialCitasScalarWhereInput | historialCitasScalarWhereInput[]
    historialID?: IntFilter<"historialCitas"> | number
    citaID?: IntNullableFilter<"historialCitas"> | number | null
    clienteID?: IntNullableFilter<"historialCitas"> | number | null
    estilistaID?: IntNullableFilter<"historialCitas"> | number | null
    fechaCita?: DateTimeNullableFilter<"historialCitas"> | Date | string | null
    servicioID?: IntNullableFilter<"historialCitas"> | number | null
  }

  export type reporteCitasPendientesUpsertWithWhereUniqueWithoutCitasInput = {
    where: reporteCitasPendientesWhereUniqueInput
    update: XOR<reporteCitasPendientesUpdateWithoutCitasInput, reporteCitasPendientesUncheckedUpdateWithoutCitasInput>
    create: XOR<reporteCitasPendientesCreateWithoutCitasInput, reporteCitasPendientesUncheckedCreateWithoutCitasInput>
  }

  export type reporteCitasPendientesUpdateWithWhereUniqueWithoutCitasInput = {
    where: reporteCitasPendientesWhereUniqueInput
    data: XOR<reporteCitasPendientesUpdateWithoutCitasInput, reporteCitasPendientesUncheckedUpdateWithoutCitasInput>
  }

  export type reporteCitasPendientesUpdateManyWithWhereWithoutCitasInput = {
    where: reporteCitasPendientesScalarWhereInput
    data: XOR<reporteCitasPendientesUpdateManyMutationInput, reporteCitasPendientesUncheckedUpdateManyWithoutCitasInput>
  }

  export type reporteCitasPendientesScalarWhereInput = {
    AND?: reporteCitasPendientesScalarWhereInput | reporteCitasPendientesScalarWhereInput[]
    OR?: reporteCitasPendientesScalarWhereInput[]
    NOT?: reporteCitasPendientesScalarWhereInput | reporteCitasPendientesScalarWhereInput[]
    reporteID?: IntFilter<"reporteCitasPendientes"> | number
    citaID?: IntNullableFilter<"reporteCitasPendientes"> | number | null
    clienteID?: IntNullableFilter<"reporteCitasPendientes"> | number | null
    fechaCita?: DateTimeNullableFilter<"reporteCitasPendientes"> | Date | string | null
    estilistaID?: IntNullableFilter<"reporteCitasPendientes"> | number | null
  }

  export type reporteClientesCitasUpsertWithWhereUniqueWithoutCitasInput = {
    where: reporteClientesCitasWhereUniqueInput
    update: XOR<reporteClientesCitasUpdateWithoutCitasInput, reporteClientesCitasUncheckedUpdateWithoutCitasInput>
    create: XOR<reporteClientesCitasCreateWithoutCitasInput, reporteClientesCitasUncheckedCreateWithoutCitasInput>
  }

  export type reporteClientesCitasUpdateWithWhereUniqueWithoutCitasInput = {
    where: reporteClientesCitasWhereUniqueInput
    data: XOR<reporteClientesCitasUpdateWithoutCitasInput, reporteClientesCitasUncheckedUpdateWithoutCitasInput>
  }

  export type reporteClientesCitasUpdateManyWithWhereWithoutCitasInput = {
    where: reporteClientesCitasScalarWhereInput
    data: XOR<reporteClientesCitasUpdateManyMutationInput, reporteClientesCitasUncheckedUpdateManyWithoutCitasInput>
  }

  export type citasCreateWithoutCitasReagendadasInput = {
    fechaCita?: Date | string | null
    comentarios?: string | null
    clientes?: clientesCreateNestedOneWithoutCitasInput
    estilistas?: estilistasCreateNestedOneWithoutCitasInput
    galeriaEstilos?: galeriaEstilosCreateNestedOneWithoutCitasInput
    catalogo?: catalogoCreateNestedOneWithoutCitasInput
    historialCitas?: historialCitasCreateNestedManyWithoutCitasInput
    reporteCitasPendientes?: reporteCitasPendientesCreateNestedManyWithoutCitasInput
    reporteClientesCitas?: reporteClientesCitasCreateNestedManyWithoutCitasInput
  }

  export type citasUncheckedCreateWithoutCitasReagendadasInput = {
    citaID?: number
    clienteID?: number | null
    estilistaID?: number | null
    servicioID?: number | null
    fechaCita?: Date | string | null
    estiloID?: number | null
    comentarios?: string | null
    historialCitas?: historialCitasUncheckedCreateNestedManyWithoutCitasInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedCreateNestedManyWithoutCitasInput
    reporteClientesCitas?: reporteClientesCitasUncheckedCreateNestedManyWithoutCitasInput
  }

  export type citasCreateOrConnectWithoutCitasReagendadasInput = {
    where: citasWhereUniqueInput
    create: XOR<citasCreateWithoutCitasReagendadasInput, citasUncheckedCreateWithoutCitasReagendadasInput>
  }

  export type citasUpsertWithoutCitasReagendadasInput = {
    update: XOR<citasUpdateWithoutCitasReagendadasInput, citasUncheckedUpdateWithoutCitasReagendadasInput>
    create: XOR<citasCreateWithoutCitasReagendadasInput, citasUncheckedCreateWithoutCitasReagendadasInput>
    where?: citasWhereInput
  }

  export type citasUpdateToOneWithWhereWithoutCitasReagendadasInput = {
    where?: citasWhereInput
    data: XOR<citasUpdateWithoutCitasReagendadasInput, citasUncheckedUpdateWithoutCitasReagendadasInput>
  }

  export type citasUpdateWithoutCitasReagendadasInput = {
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    clientes?: clientesUpdateOneWithoutCitasNestedInput
    estilistas?: estilistasUpdateOneWithoutCitasNestedInput
    galeriaEstilos?: galeriaEstilosUpdateOneWithoutCitasNestedInput
    catalogo?: catalogoUpdateOneWithoutCitasNestedInput
    historialCitas?: historialCitasUpdateManyWithoutCitasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUpdateManyWithoutCitasNestedInput
    reporteClientesCitas?: reporteClientesCitasUpdateManyWithoutCitasNestedInput
  }

  export type citasUncheckedUpdateWithoutCitasReagendadasInput = {
    citaID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estiloID?: NullableIntFieldUpdateOperationsInput | number | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    historialCitas?: historialCitasUncheckedUpdateManyWithoutCitasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedUpdateManyWithoutCitasNestedInput
    reporteClientesCitas?: reporteClientesCitasUncheckedUpdateManyWithoutCitasNestedInput
  }

  export type citasCreateWithoutClientesInput = {
    fechaCita?: Date | string | null
    comentarios?: string | null
    estilistas?: estilistasCreateNestedOneWithoutCitasInput
    galeriaEstilos?: galeriaEstilosCreateNestedOneWithoutCitasInput
    catalogo?: catalogoCreateNestedOneWithoutCitasInput
    citasReagendadas?: citasReagendadasCreateNestedManyWithoutCitasInput
    historialCitas?: historialCitasCreateNestedManyWithoutCitasInput
    reporteCitasPendientes?: reporteCitasPendientesCreateNestedManyWithoutCitasInput
    reporteClientesCitas?: reporteClientesCitasCreateNestedManyWithoutCitasInput
  }

  export type citasUncheckedCreateWithoutClientesInput = {
    citaID?: number
    estilistaID?: number | null
    servicioID?: number | null
    fechaCita?: Date | string | null
    estiloID?: number | null
    comentarios?: string | null
    citasReagendadas?: citasReagendadasUncheckedCreateNestedManyWithoutCitasInput
    historialCitas?: historialCitasUncheckedCreateNestedManyWithoutCitasInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedCreateNestedManyWithoutCitasInput
    reporteClientesCitas?: reporteClientesCitasUncheckedCreateNestedManyWithoutCitasInput
  }

  export type citasCreateOrConnectWithoutClientesInput = {
    where: citasWhereUniqueInput
    create: XOR<citasCreateWithoutClientesInput, citasUncheckedCreateWithoutClientesInput>
  }

  export type citasCreateManyClientesInputEnvelope = {
    data: citasCreateManyClientesInput | citasCreateManyClientesInput[]
  }

  export type rolesCreateWithoutClientesInput = {
    nombreRol?: string | null
    administradores?: administradoresCreateNestedManyWithoutRolesInput
    estilistas?: estilistasCreateNestedManyWithoutRolesInput
  }

  export type rolesUncheckedCreateWithoutClientesInput = {
    rolID?: number
    nombreRol?: string | null
    administradores?: administradoresUncheckedCreateNestedManyWithoutRolesInput
    estilistas?: estilistasUncheckedCreateNestedManyWithoutRolesInput
  }

  export type rolesCreateOrConnectWithoutClientesInput = {
    where: rolesWhereUniqueInput
    create: XOR<rolesCreateWithoutClientesInput, rolesUncheckedCreateWithoutClientesInput>
  }

  export type historialCitasCreateWithoutClientesInput = {
    fechaCita?: Date | string | null
    servicioID?: number | null
    citas?: citasCreateNestedOneWithoutHistorialCitasInput
    estilistas?: estilistasCreateNestedOneWithoutHistorialCitasInput
  }

  export type historialCitasUncheckedCreateWithoutClientesInput = {
    historialID?: number
    citaID?: number | null
    estilistaID?: number | null
    fechaCita?: Date | string | null
    servicioID?: number | null
  }

  export type historialCitasCreateOrConnectWithoutClientesInput = {
    where: historialCitasWhereUniqueInput
    create: XOR<historialCitasCreateWithoutClientesInput, historialCitasUncheckedCreateWithoutClientesInput>
  }

  export type historialCitasCreateManyClientesInputEnvelope = {
    data: historialCitasCreateManyClientesInput | historialCitasCreateManyClientesInput[]
  }

  export type historialClientesCreateWithoutClientesInput = {
    nombreCliente?: string | null
    fechaRegistro?: Date | string | null
    catalogo?: catalogoCreateNestedOneWithoutHistorialClientesInput
  }

  export type historialClientesUncheckedCreateWithoutClientesInput = {
    historialID?: number
    nombreCliente?: string | null
    fechaRegistro?: Date | string | null
    ultimoServicioID?: number | null
  }

  export type historialClientesCreateOrConnectWithoutClientesInput = {
    where: historialClientesWhereUniqueInput
    create: XOR<historialClientesCreateWithoutClientesInput, historialClientesUncheckedCreateWithoutClientesInput>
  }

  export type historialClientesCreateManyClientesInputEnvelope = {
    data: historialClientesCreateManyClientesInput | historialClientesCreateManyClientesInput[]
  }

  export type historialCuentaCreateWithoutClientesInput = {
    serviciosUtilizados?: number | null
    ultimaConexion?: Date | string | null
  }

  export type historialCuentaUncheckedCreateWithoutClientesInput = {
    historialID?: number
    serviciosUtilizados?: number | null
    ultimaConexion?: Date | string | null
  }

  export type historialCuentaCreateOrConnectWithoutClientesInput = {
    where: historialCuentaWhereUniqueInput
    create: XOR<historialCuentaCreateWithoutClientesInput, historialCuentaUncheckedCreateWithoutClientesInput>
  }

  export type historialCuentaCreateManyClientesInputEnvelope = {
    data: historialCuentaCreateManyClientesInput | historialCuentaCreateManyClientesInput[]
  }

  export type historialGastoPuntosCreateWithoutClientesInput = {
    puntosGastados?: number | null
    fecha?: Date | string | null
    descripcionGasto?: string | null
  }

  export type historialGastoPuntosUncheckedCreateWithoutClientesInput = {
    gastoID?: number
    puntosGastados?: number | null
    fecha?: Date | string | null
    descripcionGasto?: string | null
  }

  export type historialGastoPuntosCreateOrConnectWithoutClientesInput = {
    where: historialGastoPuntosWhereUniqueInput
    create: XOR<historialGastoPuntosCreateWithoutClientesInput, historialGastoPuntosUncheckedCreateWithoutClientesInput>
  }

  export type historialGastoPuntosCreateManyClientesInputEnvelope = {
    data: historialGastoPuntosCreateManyClientesInput | historialGastoPuntosCreateManyClientesInput[]
  }

  export type puntosClientesCreateWithoutClientesInput = {
    saldoPuntos?: number | null
  }

  export type puntosClientesUncheckedCreateWithoutClientesInput = {
    puntosID?: number
    saldoPuntos?: number | null
  }

  export type puntosClientesCreateOrConnectWithoutClientesInput = {
    where: puntosClientesWhereUniqueInput
    create: XOR<puntosClientesCreateWithoutClientesInput, puntosClientesUncheckedCreateWithoutClientesInput>
  }

  export type puntosClientesCreateManyClientesInputEnvelope = {
    data: puntosClientesCreateManyClientesInput | puntosClientesCreateManyClientesInput[]
  }

  export type reporteCitasPendientesCreateWithoutClientesInput = {
    fechaCita?: Date | string | null
    citas?: citasCreateNestedOneWithoutReporteCitasPendientesInput
    estilistas?: estilistasCreateNestedOneWithoutReporteCitasPendientesInput
  }

  export type reporteCitasPendientesUncheckedCreateWithoutClientesInput = {
    reporteID?: number
    citaID?: number | null
    fechaCita?: Date | string | null
    estilistaID?: number | null
  }

  export type reporteCitasPendientesCreateOrConnectWithoutClientesInput = {
    where: reporteCitasPendientesWhereUniqueInput
    create: XOR<reporteCitasPendientesCreateWithoutClientesInput, reporteCitasPendientesUncheckedCreateWithoutClientesInput>
  }

  export type reporteCitasPendientesCreateManyClientesInputEnvelope = {
    data: reporteCitasPendientesCreateManyClientesInput | reporteCitasPendientesCreateManyClientesInput[]
  }

  export type reporteClientesCitasCreateWithoutClientesInput = {
    nombreCliente?: string | null
    fechaCita?: Date | string | null
    citas?: citasCreateNestedOneWithoutReporteClientesCitasInput
    catalogo?: catalogoCreateNestedOneWithoutReporteClientesCitasInput
  }

  export type reporteClientesCitasUncheckedCreateWithoutClientesInput = {
    reporteID?: number
    citaID?: number | null
    nombreCliente?: string | null
    fechaCita?: Date | string | null
    servicioID?: number | null
  }

  export type reporteClientesCitasCreateOrConnectWithoutClientesInput = {
    where: reporteClientesCitasWhereUniqueInput
    create: XOR<reporteClientesCitasCreateWithoutClientesInput, reporteClientesCitasUncheckedCreateWithoutClientesInput>
  }

  export type reporteClientesCitasCreateManyClientesInputEnvelope = {
    data: reporteClientesCitasCreateManyClientesInput | reporteClientesCitasCreateManyClientesInput[]
  }

  export type citasUpsertWithWhereUniqueWithoutClientesInput = {
    where: citasWhereUniqueInput
    update: XOR<citasUpdateWithoutClientesInput, citasUncheckedUpdateWithoutClientesInput>
    create: XOR<citasCreateWithoutClientesInput, citasUncheckedCreateWithoutClientesInput>
  }

  export type citasUpdateWithWhereUniqueWithoutClientesInput = {
    where: citasWhereUniqueInput
    data: XOR<citasUpdateWithoutClientesInput, citasUncheckedUpdateWithoutClientesInput>
  }

  export type citasUpdateManyWithWhereWithoutClientesInput = {
    where: citasScalarWhereInput
    data: XOR<citasUpdateManyMutationInput, citasUncheckedUpdateManyWithoutClientesInput>
  }

  export type rolesUpsertWithoutClientesInput = {
    update: XOR<rolesUpdateWithoutClientesInput, rolesUncheckedUpdateWithoutClientesInput>
    create: XOR<rolesCreateWithoutClientesInput, rolesUncheckedCreateWithoutClientesInput>
    where?: rolesWhereInput
  }

  export type rolesUpdateToOneWithWhereWithoutClientesInput = {
    where?: rolesWhereInput
    data: XOR<rolesUpdateWithoutClientesInput, rolesUncheckedUpdateWithoutClientesInput>
  }

  export type rolesUpdateWithoutClientesInput = {
    nombreRol?: NullableStringFieldUpdateOperationsInput | string | null
    administradores?: administradoresUpdateManyWithoutRolesNestedInput
    estilistas?: estilistasUpdateManyWithoutRolesNestedInput
  }

  export type rolesUncheckedUpdateWithoutClientesInput = {
    rolID?: IntFieldUpdateOperationsInput | number
    nombreRol?: NullableStringFieldUpdateOperationsInput | string | null
    administradores?: administradoresUncheckedUpdateManyWithoutRolesNestedInput
    estilistas?: estilistasUncheckedUpdateManyWithoutRolesNestedInput
  }

  export type historialCitasUpsertWithWhereUniqueWithoutClientesInput = {
    where: historialCitasWhereUniqueInput
    update: XOR<historialCitasUpdateWithoutClientesInput, historialCitasUncheckedUpdateWithoutClientesInput>
    create: XOR<historialCitasCreateWithoutClientesInput, historialCitasUncheckedCreateWithoutClientesInput>
  }

  export type historialCitasUpdateWithWhereUniqueWithoutClientesInput = {
    where: historialCitasWhereUniqueInput
    data: XOR<historialCitasUpdateWithoutClientesInput, historialCitasUncheckedUpdateWithoutClientesInput>
  }

  export type historialCitasUpdateManyWithWhereWithoutClientesInput = {
    where: historialCitasScalarWhereInput
    data: XOR<historialCitasUpdateManyMutationInput, historialCitasUncheckedUpdateManyWithoutClientesInput>
  }

  export type historialClientesUpsertWithWhereUniqueWithoutClientesInput = {
    where: historialClientesWhereUniqueInput
    update: XOR<historialClientesUpdateWithoutClientesInput, historialClientesUncheckedUpdateWithoutClientesInput>
    create: XOR<historialClientesCreateWithoutClientesInput, historialClientesUncheckedCreateWithoutClientesInput>
  }

  export type historialClientesUpdateWithWhereUniqueWithoutClientesInput = {
    where: historialClientesWhereUniqueInput
    data: XOR<historialClientesUpdateWithoutClientesInput, historialClientesUncheckedUpdateWithoutClientesInput>
  }

  export type historialClientesUpdateManyWithWhereWithoutClientesInput = {
    where: historialClientesScalarWhereInput
    data: XOR<historialClientesUpdateManyMutationInput, historialClientesUncheckedUpdateManyWithoutClientesInput>
  }

  export type historialCuentaUpsertWithWhereUniqueWithoutClientesInput = {
    where: historialCuentaWhereUniqueInput
    update: XOR<historialCuentaUpdateWithoutClientesInput, historialCuentaUncheckedUpdateWithoutClientesInput>
    create: XOR<historialCuentaCreateWithoutClientesInput, historialCuentaUncheckedCreateWithoutClientesInput>
  }

  export type historialCuentaUpdateWithWhereUniqueWithoutClientesInput = {
    where: historialCuentaWhereUniqueInput
    data: XOR<historialCuentaUpdateWithoutClientesInput, historialCuentaUncheckedUpdateWithoutClientesInput>
  }

  export type historialCuentaUpdateManyWithWhereWithoutClientesInput = {
    where: historialCuentaScalarWhereInput
    data: XOR<historialCuentaUpdateManyMutationInput, historialCuentaUncheckedUpdateManyWithoutClientesInput>
  }

  export type historialCuentaScalarWhereInput = {
    AND?: historialCuentaScalarWhereInput | historialCuentaScalarWhereInput[]
    OR?: historialCuentaScalarWhereInput[]
    NOT?: historialCuentaScalarWhereInput | historialCuentaScalarWhereInput[]
    historialID?: IntFilter<"historialCuenta"> | number
    clienteID?: IntNullableFilter<"historialCuenta"> | number | null
    serviciosUtilizados?: IntNullableFilter<"historialCuenta"> | number | null
    ultimaConexion?: DateTimeNullableFilter<"historialCuenta"> | Date | string | null
  }

  export type historialGastoPuntosUpsertWithWhereUniqueWithoutClientesInput = {
    where: historialGastoPuntosWhereUniqueInput
    update: XOR<historialGastoPuntosUpdateWithoutClientesInput, historialGastoPuntosUncheckedUpdateWithoutClientesInput>
    create: XOR<historialGastoPuntosCreateWithoutClientesInput, historialGastoPuntosUncheckedCreateWithoutClientesInput>
  }

  export type historialGastoPuntosUpdateWithWhereUniqueWithoutClientesInput = {
    where: historialGastoPuntosWhereUniqueInput
    data: XOR<historialGastoPuntosUpdateWithoutClientesInput, historialGastoPuntosUncheckedUpdateWithoutClientesInput>
  }

  export type historialGastoPuntosUpdateManyWithWhereWithoutClientesInput = {
    where: historialGastoPuntosScalarWhereInput
    data: XOR<historialGastoPuntosUpdateManyMutationInput, historialGastoPuntosUncheckedUpdateManyWithoutClientesInput>
  }

  export type historialGastoPuntosScalarWhereInput = {
    AND?: historialGastoPuntosScalarWhereInput | historialGastoPuntosScalarWhereInput[]
    OR?: historialGastoPuntosScalarWhereInput[]
    NOT?: historialGastoPuntosScalarWhereInput | historialGastoPuntosScalarWhereInput[]
    gastoID?: IntFilter<"historialGastoPuntos"> | number
    clienteID?: IntNullableFilter<"historialGastoPuntos"> | number | null
    puntosGastados?: IntNullableFilter<"historialGastoPuntos"> | number | null
    fecha?: DateTimeNullableFilter<"historialGastoPuntos"> | Date | string | null
    descripcionGasto?: StringNullableFilter<"historialGastoPuntos"> | string | null
  }

  export type puntosClientesUpsertWithWhereUniqueWithoutClientesInput = {
    where: puntosClientesWhereUniqueInput
    update: XOR<puntosClientesUpdateWithoutClientesInput, puntosClientesUncheckedUpdateWithoutClientesInput>
    create: XOR<puntosClientesCreateWithoutClientesInput, puntosClientesUncheckedCreateWithoutClientesInput>
  }

  export type puntosClientesUpdateWithWhereUniqueWithoutClientesInput = {
    where: puntosClientesWhereUniqueInput
    data: XOR<puntosClientesUpdateWithoutClientesInput, puntosClientesUncheckedUpdateWithoutClientesInput>
  }

  export type puntosClientesUpdateManyWithWhereWithoutClientesInput = {
    where: puntosClientesScalarWhereInput
    data: XOR<puntosClientesUpdateManyMutationInput, puntosClientesUncheckedUpdateManyWithoutClientesInput>
  }

  export type puntosClientesScalarWhereInput = {
    AND?: puntosClientesScalarWhereInput | puntosClientesScalarWhereInput[]
    OR?: puntosClientesScalarWhereInput[]
    NOT?: puntosClientesScalarWhereInput | puntosClientesScalarWhereInput[]
    puntosID?: IntFilter<"puntosClientes"> | number
    clienteID?: IntNullableFilter<"puntosClientes"> | number | null
    saldoPuntos?: IntNullableFilter<"puntosClientes"> | number | null
  }

  export type reporteCitasPendientesUpsertWithWhereUniqueWithoutClientesInput = {
    where: reporteCitasPendientesWhereUniqueInput
    update: XOR<reporteCitasPendientesUpdateWithoutClientesInput, reporteCitasPendientesUncheckedUpdateWithoutClientesInput>
    create: XOR<reporteCitasPendientesCreateWithoutClientesInput, reporteCitasPendientesUncheckedCreateWithoutClientesInput>
  }

  export type reporteCitasPendientesUpdateWithWhereUniqueWithoutClientesInput = {
    where: reporteCitasPendientesWhereUniqueInput
    data: XOR<reporteCitasPendientesUpdateWithoutClientesInput, reporteCitasPendientesUncheckedUpdateWithoutClientesInput>
  }

  export type reporteCitasPendientesUpdateManyWithWhereWithoutClientesInput = {
    where: reporteCitasPendientesScalarWhereInput
    data: XOR<reporteCitasPendientesUpdateManyMutationInput, reporteCitasPendientesUncheckedUpdateManyWithoutClientesInput>
  }

  export type reporteClientesCitasUpsertWithWhereUniqueWithoutClientesInput = {
    where: reporteClientesCitasWhereUniqueInput
    update: XOR<reporteClientesCitasUpdateWithoutClientesInput, reporteClientesCitasUncheckedUpdateWithoutClientesInput>
    create: XOR<reporteClientesCitasCreateWithoutClientesInput, reporteClientesCitasUncheckedCreateWithoutClientesInput>
  }

  export type reporteClientesCitasUpdateWithWhereUniqueWithoutClientesInput = {
    where: reporteClientesCitasWhereUniqueInput
    data: XOR<reporteClientesCitasUpdateWithoutClientesInput, reporteClientesCitasUncheckedUpdateWithoutClientesInput>
  }

  export type reporteClientesCitasUpdateManyWithWhereWithoutClientesInput = {
    where: reporteClientesCitasScalarWhereInput
    data: XOR<reporteClientesCitasUpdateManyMutationInput, reporteClientesCitasUncheckedUpdateManyWithoutClientesInput>
  }

  export type catalogoCreateWithoutDetalleServicioInput = {
    nombreServicio?: string | null
    descripcion?: string | null
    precio?: number | null
    citas?: citasCreateNestedManyWithoutCatalogoInput
    historialClientes?: historialClientesCreateNestedManyWithoutCatalogoInput
    recompensas?: recompensasCreateNestedManyWithoutCatalogoInput
    reporteClientesCitas?: reporteClientesCitasCreateNestedManyWithoutCatalogoInput
  }

  export type catalogoUncheckedCreateWithoutDetalleServicioInput = {
    servicioID?: number
    nombreServicio?: string | null
    descripcion?: string | null
    precio?: number | null
    citas?: citasUncheckedCreateNestedManyWithoutCatalogoInput
    historialClientes?: historialClientesUncheckedCreateNestedManyWithoutCatalogoInput
    recompensas?: recompensasUncheckedCreateNestedManyWithoutCatalogoInput
    reporteClientesCitas?: reporteClientesCitasUncheckedCreateNestedManyWithoutCatalogoInput
  }

  export type catalogoCreateOrConnectWithoutDetalleServicioInput = {
    where: catalogoWhereUniqueInput
    create: XOR<catalogoCreateWithoutDetalleServicioInput, catalogoUncheckedCreateWithoutDetalleServicioInput>
  }

  export type catalogoUpsertWithoutDetalleServicioInput = {
    update: XOR<catalogoUpdateWithoutDetalleServicioInput, catalogoUncheckedUpdateWithoutDetalleServicioInput>
    create: XOR<catalogoCreateWithoutDetalleServicioInput, catalogoUncheckedCreateWithoutDetalleServicioInput>
    where?: catalogoWhereInput
  }

  export type catalogoUpdateToOneWithWhereWithoutDetalleServicioInput = {
    where?: catalogoWhereInput
    data: XOR<catalogoUpdateWithoutDetalleServicioInput, catalogoUncheckedUpdateWithoutDetalleServicioInput>
  }

  export type catalogoUpdateWithoutDetalleServicioInput = {
    nombreServicio?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: NullableIntFieldUpdateOperationsInput | number | null
    citas?: citasUpdateManyWithoutCatalogoNestedInput
    historialClientes?: historialClientesUpdateManyWithoutCatalogoNestedInput
    recompensas?: recompensasUpdateManyWithoutCatalogoNestedInput
    reporteClientesCitas?: reporteClientesCitasUpdateManyWithoutCatalogoNestedInput
  }

  export type catalogoUncheckedUpdateWithoutDetalleServicioInput = {
    servicioID?: IntFieldUpdateOperationsInput | number
    nombreServicio?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: NullableIntFieldUpdateOperationsInput | number | null
    citas?: citasUncheckedUpdateManyWithoutCatalogoNestedInput
    historialClientes?: historialClientesUncheckedUpdateManyWithoutCatalogoNestedInput
    recompensas?: recompensasUncheckedUpdateManyWithoutCatalogoNestedInput
    reporteClientesCitas?: reporteClientesCitasUncheckedUpdateManyWithoutCatalogoNestedInput
  }

  export type estilistasCreateWithoutDisponibilidadTiempoRealInput = {
    nombre?: string | null
    apellidos?: string | null
    telefono?: string | null
    direccion?: string | null
    fechaIngreso?: Date | string | null
    fechaSalida?: Date | string | null
    correo?: string | null
    contrase_a?: string | null
    estado?: string | null
    bloqueoHorarios?: bloqueoHorariosCreateNestedManyWithoutEstilistasInput
    citas?: citasCreateNestedManyWithoutEstilistasInput
    roles?: rolesCreateNestedOneWithoutEstilistasInput
    historialCitas?: historialCitasCreateNestedManyWithoutEstilistasInput
    reporteCitasPendientes?: reporteCitasPendientesCreateNestedManyWithoutEstilistasInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasCreateNestedManyWithoutEstilistasInput
  }

  export type estilistasUncheckedCreateWithoutDisponibilidadTiempoRealInput = {
    estilistaID?: number
    nombre?: string | null
    apellidos?: string | null
    telefono?: string | null
    direccion?: string | null
    fechaIngreso?: Date | string | null
    fechaSalida?: Date | string | null
    correo?: string | null
    contrase_a?: string | null
    rolID?: number | null
    estado?: string | null
    bloqueoHorarios?: bloqueoHorariosUncheckedCreateNestedManyWithoutEstilistasInput
    citas?: citasUncheckedCreateNestedManyWithoutEstilistasInput
    historialCitas?: historialCitasUncheckedCreateNestedManyWithoutEstilistasInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedCreateNestedManyWithoutEstilistasInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasUncheckedCreateNestedManyWithoutEstilistasInput
  }

  export type estilistasCreateOrConnectWithoutDisponibilidadTiempoRealInput = {
    where: estilistasWhereUniqueInput
    create: XOR<estilistasCreateWithoutDisponibilidadTiempoRealInput, estilistasUncheckedCreateWithoutDisponibilidadTiempoRealInput>
  }

  export type estilistasUpsertWithoutDisponibilidadTiempoRealInput = {
    update: XOR<estilistasUpdateWithoutDisponibilidadTiempoRealInput, estilistasUncheckedUpdateWithoutDisponibilidadTiempoRealInput>
    create: XOR<estilistasCreateWithoutDisponibilidadTiempoRealInput, estilistasUncheckedCreateWithoutDisponibilidadTiempoRealInput>
    where?: estilistasWhereInput
  }

  export type estilistasUpdateToOneWithWhereWithoutDisponibilidadTiempoRealInput = {
    where?: estilistasWhereInput
    data: XOR<estilistasUpdateWithoutDisponibilidadTiempoRealInput, estilistasUncheckedUpdateWithoutDisponibilidadTiempoRealInput>
  }

  export type estilistasUpdateWithoutDisponibilidadTiempoRealInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaIngreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    bloqueoHorarios?: bloqueoHorariosUpdateManyWithoutEstilistasNestedInput
    citas?: citasUpdateManyWithoutEstilistasNestedInput
    roles?: rolesUpdateOneWithoutEstilistasNestedInput
    historialCitas?: historialCitasUpdateManyWithoutEstilistasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUpdateManyWithoutEstilistasNestedInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasUpdateManyWithoutEstilistasNestedInput
  }

  export type estilistasUncheckedUpdateWithoutDisponibilidadTiempoRealInput = {
    estilistaID?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaIngreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    rolID?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    bloqueoHorarios?: bloqueoHorariosUncheckedUpdateManyWithoutEstilistasNestedInput
    citas?: citasUncheckedUpdateManyWithoutEstilistasNestedInput
    historialCitas?: historialCitasUncheckedUpdateManyWithoutEstilistasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedUpdateManyWithoutEstilistasNestedInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasUncheckedUpdateManyWithoutEstilistasNestedInput
  }

  export type bloqueoHorariosCreateWithoutEstilistasInput = {
    dia?: string | null
    horaInicio?: Date | string | null
    horaFinal?: Date | string | null
    motivo?: string | null
  }

  export type bloqueoHorariosUncheckedCreateWithoutEstilistasInput = {
    bloqueoID?: number
    dia?: string | null
    horaInicio?: Date | string | null
    horaFinal?: Date | string | null
    motivo?: string | null
  }

  export type bloqueoHorariosCreateOrConnectWithoutEstilistasInput = {
    where: bloqueoHorariosWhereUniqueInput
    create: XOR<bloqueoHorariosCreateWithoutEstilistasInput, bloqueoHorariosUncheckedCreateWithoutEstilistasInput>
  }

  export type bloqueoHorariosCreateManyEstilistasInputEnvelope = {
    data: bloqueoHorariosCreateManyEstilistasInput | bloqueoHorariosCreateManyEstilistasInput[]
  }

  export type citasCreateWithoutEstilistasInput = {
    fechaCita?: Date | string | null
    comentarios?: string | null
    clientes?: clientesCreateNestedOneWithoutCitasInput
    galeriaEstilos?: galeriaEstilosCreateNestedOneWithoutCitasInput
    catalogo?: catalogoCreateNestedOneWithoutCitasInput
    citasReagendadas?: citasReagendadasCreateNestedManyWithoutCitasInput
    historialCitas?: historialCitasCreateNestedManyWithoutCitasInput
    reporteCitasPendientes?: reporteCitasPendientesCreateNestedManyWithoutCitasInput
    reporteClientesCitas?: reporteClientesCitasCreateNestedManyWithoutCitasInput
  }

  export type citasUncheckedCreateWithoutEstilistasInput = {
    citaID?: number
    clienteID?: number | null
    servicioID?: number | null
    fechaCita?: Date | string | null
    estiloID?: number | null
    comentarios?: string | null
    citasReagendadas?: citasReagendadasUncheckedCreateNestedManyWithoutCitasInput
    historialCitas?: historialCitasUncheckedCreateNestedManyWithoutCitasInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedCreateNestedManyWithoutCitasInput
    reporteClientesCitas?: reporteClientesCitasUncheckedCreateNestedManyWithoutCitasInput
  }

  export type citasCreateOrConnectWithoutEstilistasInput = {
    where: citasWhereUniqueInput
    create: XOR<citasCreateWithoutEstilistasInput, citasUncheckedCreateWithoutEstilistasInput>
  }

  export type citasCreateManyEstilistasInputEnvelope = {
    data: citasCreateManyEstilistasInput | citasCreateManyEstilistasInput[]
  }

  export type disponibilidadTiempoRealCreateWithoutEstilistasInput = {
    diaSemana?: string | null
    horaInicio?: Date | string | null
    horaFinal?: Date | string | null
  }

  export type disponibilidadTiempoRealUncheckedCreateWithoutEstilistasInput = {
    disponibilidadID?: number
    diaSemana?: string | null
    horaInicio?: Date | string | null
    horaFinal?: Date | string | null
  }

  export type disponibilidadTiempoRealCreateOrConnectWithoutEstilistasInput = {
    where: disponibilidadTiempoRealWhereUniqueInput
    create: XOR<disponibilidadTiempoRealCreateWithoutEstilistasInput, disponibilidadTiempoRealUncheckedCreateWithoutEstilistasInput>
  }

  export type disponibilidadTiempoRealCreateManyEstilistasInputEnvelope = {
    data: disponibilidadTiempoRealCreateManyEstilistasInput | disponibilidadTiempoRealCreateManyEstilistasInput[]
  }

  export type rolesCreateWithoutEstilistasInput = {
    nombreRol?: string | null
    administradores?: administradoresCreateNestedManyWithoutRolesInput
    clientes?: clientesCreateNestedManyWithoutRolesInput
  }

  export type rolesUncheckedCreateWithoutEstilistasInput = {
    rolID?: number
    nombreRol?: string | null
    administradores?: administradoresUncheckedCreateNestedManyWithoutRolesInput
    clientes?: clientesUncheckedCreateNestedManyWithoutRolesInput
  }

  export type rolesCreateOrConnectWithoutEstilistasInput = {
    where: rolesWhereUniqueInput
    create: XOR<rolesCreateWithoutEstilistasInput, rolesUncheckedCreateWithoutEstilistasInput>
  }

  export type historialCitasCreateWithoutEstilistasInput = {
    fechaCita?: Date | string | null
    servicioID?: number | null
    citas?: citasCreateNestedOneWithoutHistorialCitasInput
    clientes?: clientesCreateNestedOneWithoutHistorialCitasInput
  }

  export type historialCitasUncheckedCreateWithoutEstilistasInput = {
    historialID?: number
    citaID?: number | null
    clienteID?: number | null
    fechaCita?: Date | string | null
    servicioID?: number | null
  }

  export type historialCitasCreateOrConnectWithoutEstilistasInput = {
    where: historialCitasWhereUniqueInput
    create: XOR<historialCitasCreateWithoutEstilistasInput, historialCitasUncheckedCreateWithoutEstilistasInput>
  }

  export type historialCitasCreateManyEstilistasInputEnvelope = {
    data: historialCitasCreateManyEstilistasInput | historialCitasCreateManyEstilistasInput[]
  }

  export type reporteCitasPendientesCreateWithoutEstilistasInput = {
    fechaCita?: Date | string | null
    citas?: citasCreateNestedOneWithoutReporteCitasPendientesInput
    clientes?: clientesCreateNestedOneWithoutReporteCitasPendientesInput
  }

  export type reporteCitasPendientesUncheckedCreateWithoutEstilistasInput = {
    reporteID?: number
    citaID?: number | null
    clienteID?: number | null
    fechaCita?: Date | string | null
  }

  export type reporteCitasPendientesCreateOrConnectWithoutEstilistasInput = {
    where: reporteCitasPendientesWhereUniqueInput
    create: XOR<reporteCitasPendientesCreateWithoutEstilistasInput, reporteCitasPendientesUncheckedCreateWithoutEstilistasInput>
  }

  export type reporteCitasPendientesCreateManyEstilistasInputEnvelope = {
    data: reporteCitasPendientesCreateManyEstilistasInput | reporteCitasPendientesCreateManyEstilistasInput[]
  }

  export type reporteHorarioEstilistasCreateWithoutEstilistasInput = {
    diaSemana?: string | null
    horaInicio?: Date | string | null
    horaFinal?: Date | string | null
  }

  export type reporteHorarioEstilistasUncheckedCreateWithoutEstilistasInput = {
    reporteID?: number
    diaSemana?: string | null
    horaInicio?: Date | string | null
    horaFinal?: Date | string | null
  }

  export type reporteHorarioEstilistasCreateOrConnectWithoutEstilistasInput = {
    where: reporteHorarioEstilistasWhereUniqueInput
    create: XOR<reporteHorarioEstilistasCreateWithoutEstilistasInput, reporteHorarioEstilistasUncheckedCreateWithoutEstilistasInput>
  }

  export type reporteHorarioEstilistasCreateManyEstilistasInputEnvelope = {
    data: reporteHorarioEstilistasCreateManyEstilistasInput | reporteHorarioEstilistasCreateManyEstilistasInput[]
  }

  export type bloqueoHorariosUpsertWithWhereUniqueWithoutEstilistasInput = {
    where: bloqueoHorariosWhereUniqueInput
    update: XOR<bloqueoHorariosUpdateWithoutEstilistasInput, bloqueoHorariosUncheckedUpdateWithoutEstilistasInput>
    create: XOR<bloqueoHorariosCreateWithoutEstilistasInput, bloqueoHorariosUncheckedCreateWithoutEstilistasInput>
  }

  export type bloqueoHorariosUpdateWithWhereUniqueWithoutEstilistasInput = {
    where: bloqueoHorariosWhereUniqueInput
    data: XOR<bloqueoHorariosUpdateWithoutEstilistasInput, bloqueoHorariosUncheckedUpdateWithoutEstilistasInput>
  }

  export type bloqueoHorariosUpdateManyWithWhereWithoutEstilistasInput = {
    where: bloqueoHorariosScalarWhereInput
    data: XOR<bloqueoHorariosUpdateManyMutationInput, bloqueoHorariosUncheckedUpdateManyWithoutEstilistasInput>
  }

  export type bloqueoHorariosScalarWhereInput = {
    AND?: bloqueoHorariosScalarWhereInput | bloqueoHorariosScalarWhereInput[]
    OR?: bloqueoHorariosScalarWhereInput[]
    NOT?: bloqueoHorariosScalarWhereInput | bloqueoHorariosScalarWhereInput[]
    bloqueoID?: IntFilter<"bloqueoHorarios"> | number
    estilistaID?: IntNullableFilter<"bloqueoHorarios"> | number | null
    dia?: StringNullableFilter<"bloqueoHorarios"> | string | null
    horaInicio?: DateTimeNullableFilter<"bloqueoHorarios"> | Date | string | null
    horaFinal?: DateTimeNullableFilter<"bloqueoHorarios"> | Date | string | null
    motivo?: StringNullableFilter<"bloqueoHorarios"> | string | null
  }

  export type citasUpsertWithWhereUniqueWithoutEstilistasInput = {
    where: citasWhereUniqueInput
    update: XOR<citasUpdateWithoutEstilistasInput, citasUncheckedUpdateWithoutEstilistasInput>
    create: XOR<citasCreateWithoutEstilistasInput, citasUncheckedCreateWithoutEstilistasInput>
  }

  export type citasUpdateWithWhereUniqueWithoutEstilistasInput = {
    where: citasWhereUniqueInput
    data: XOR<citasUpdateWithoutEstilistasInput, citasUncheckedUpdateWithoutEstilistasInput>
  }

  export type citasUpdateManyWithWhereWithoutEstilistasInput = {
    where: citasScalarWhereInput
    data: XOR<citasUpdateManyMutationInput, citasUncheckedUpdateManyWithoutEstilistasInput>
  }

  export type disponibilidadTiempoRealUpsertWithWhereUniqueWithoutEstilistasInput = {
    where: disponibilidadTiempoRealWhereUniqueInput
    update: XOR<disponibilidadTiempoRealUpdateWithoutEstilistasInput, disponibilidadTiempoRealUncheckedUpdateWithoutEstilistasInput>
    create: XOR<disponibilidadTiempoRealCreateWithoutEstilistasInput, disponibilidadTiempoRealUncheckedCreateWithoutEstilistasInput>
  }

  export type disponibilidadTiempoRealUpdateWithWhereUniqueWithoutEstilistasInput = {
    where: disponibilidadTiempoRealWhereUniqueInput
    data: XOR<disponibilidadTiempoRealUpdateWithoutEstilistasInput, disponibilidadTiempoRealUncheckedUpdateWithoutEstilistasInput>
  }

  export type disponibilidadTiempoRealUpdateManyWithWhereWithoutEstilistasInput = {
    where: disponibilidadTiempoRealScalarWhereInput
    data: XOR<disponibilidadTiempoRealUpdateManyMutationInput, disponibilidadTiempoRealUncheckedUpdateManyWithoutEstilistasInput>
  }

  export type disponibilidadTiempoRealScalarWhereInput = {
    AND?: disponibilidadTiempoRealScalarWhereInput | disponibilidadTiempoRealScalarWhereInput[]
    OR?: disponibilidadTiempoRealScalarWhereInput[]
    NOT?: disponibilidadTiempoRealScalarWhereInput | disponibilidadTiempoRealScalarWhereInput[]
    disponibilidadID?: IntFilter<"disponibilidadTiempoReal"> | number
    estilistaID?: IntNullableFilter<"disponibilidadTiempoReal"> | number | null
    diaSemana?: StringNullableFilter<"disponibilidadTiempoReal"> | string | null
    horaInicio?: DateTimeNullableFilter<"disponibilidadTiempoReal"> | Date | string | null
    horaFinal?: DateTimeNullableFilter<"disponibilidadTiempoReal"> | Date | string | null
  }

  export type rolesUpsertWithoutEstilistasInput = {
    update: XOR<rolesUpdateWithoutEstilistasInput, rolesUncheckedUpdateWithoutEstilistasInput>
    create: XOR<rolesCreateWithoutEstilistasInput, rolesUncheckedCreateWithoutEstilistasInput>
    where?: rolesWhereInput
  }

  export type rolesUpdateToOneWithWhereWithoutEstilistasInput = {
    where?: rolesWhereInput
    data: XOR<rolesUpdateWithoutEstilistasInput, rolesUncheckedUpdateWithoutEstilistasInput>
  }

  export type rolesUpdateWithoutEstilistasInput = {
    nombreRol?: NullableStringFieldUpdateOperationsInput | string | null
    administradores?: administradoresUpdateManyWithoutRolesNestedInput
    clientes?: clientesUpdateManyWithoutRolesNestedInput
  }

  export type rolesUncheckedUpdateWithoutEstilistasInput = {
    rolID?: IntFieldUpdateOperationsInput | number
    nombreRol?: NullableStringFieldUpdateOperationsInput | string | null
    administradores?: administradoresUncheckedUpdateManyWithoutRolesNestedInput
    clientes?: clientesUncheckedUpdateManyWithoutRolesNestedInput
  }

  export type historialCitasUpsertWithWhereUniqueWithoutEstilistasInput = {
    where: historialCitasWhereUniqueInput
    update: XOR<historialCitasUpdateWithoutEstilistasInput, historialCitasUncheckedUpdateWithoutEstilistasInput>
    create: XOR<historialCitasCreateWithoutEstilistasInput, historialCitasUncheckedCreateWithoutEstilistasInput>
  }

  export type historialCitasUpdateWithWhereUniqueWithoutEstilistasInput = {
    where: historialCitasWhereUniqueInput
    data: XOR<historialCitasUpdateWithoutEstilistasInput, historialCitasUncheckedUpdateWithoutEstilistasInput>
  }

  export type historialCitasUpdateManyWithWhereWithoutEstilistasInput = {
    where: historialCitasScalarWhereInput
    data: XOR<historialCitasUpdateManyMutationInput, historialCitasUncheckedUpdateManyWithoutEstilistasInput>
  }

  export type reporteCitasPendientesUpsertWithWhereUniqueWithoutEstilistasInput = {
    where: reporteCitasPendientesWhereUniqueInput
    update: XOR<reporteCitasPendientesUpdateWithoutEstilistasInput, reporteCitasPendientesUncheckedUpdateWithoutEstilistasInput>
    create: XOR<reporteCitasPendientesCreateWithoutEstilistasInput, reporteCitasPendientesUncheckedCreateWithoutEstilistasInput>
  }

  export type reporteCitasPendientesUpdateWithWhereUniqueWithoutEstilistasInput = {
    where: reporteCitasPendientesWhereUniqueInput
    data: XOR<reporteCitasPendientesUpdateWithoutEstilistasInput, reporteCitasPendientesUncheckedUpdateWithoutEstilistasInput>
  }

  export type reporteCitasPendientesUpdateManyWithWhereWithoutEstilistasInput = {
    where: reporteCitasPendientesScalarWhereInput
    data: XOR<reporteCitasPendientesUpdateManyMutationInput, reporteCitasPendientesUncheckedUpdateManyWithoutEstilistasInput>
  }

  export type reporteHorarioEstilistasUpsertWithWhereUniqueWithoutEstilistasInput = {
    where: reporteHorarioEstilistasWhereUniqueInput
    update: XOR<reporteHorarioEstilistasUpdateWithoutEstilistasInput, reporteHorarioEstilistasUncheckedUpdateWithoutEstilistasInput>
    create: XOR<reporteHorarioEstilistasCreateWithoutEstilistasInput, reporteHorarioEstilistasUncheckedCreateWithoutEstilistasInput>
  }

  export type reporteHorarioEstilistasUpdateWithWhereUniqueWithoutEstilistasInput = {
    where: reporteHorarioEstilistasWhereUniqueInput
    data: XOR<reporteHorarioEstilistasUpdateWithoutEstilistasInput, reporteHorarioEstilistasUncheckedUpdateWithoutEstilistasInput>
  }

  export type reporteHorarioEstilistasUpdateManyWithWhereWithoutEstilistasInput = {
    where: reporteHorarioEstilistasScalarWhereInput
    data: XOR<reporteHorarioEstilistasUpdateManyMutationInput, reporteHorarioEstilistasUncheckedUpdateManyWithoutEstilistasInput>
  }

  export type reporteHorarioEstilistasScalarWhereInput = {
    AND?: reporteHorarioEstilistasScalarWhereInput | reporteHorarioEstilistasScalarWhereInput[]
    OR?: reporteHorarioEstilistasScalarWhereInput[]
    NOT?: reporteHorarioEstilistasScalarWhereInput | reporteHorarioEstilistasScalarWhereInput[]
    reporteID?: IntFilter<"reporteHorarioEstilistas"> | number
    estilistaID?: IntNullableFilter<"reporteHorarioEstilistas"> | number | null
    diaSemana?: StringNullableFilter<"reporteHorarioEstilistas"> | string | null
    horaInicio?: DateTimeNullableFilter<"reporteHorarioEstilistas"> | Date | string | null
    horaFinal?: DateTimeNullableFilter<"reporteHorarioEstilistas"> | Date | string | null
  }

  export type citasCreateWithoutGaleriaEstilosInput = {
    fechaCita?: Date | string | null
    comentarios?: string | null
    clientes?: clientesCreateNestedOneWithoutCitasInput
    estilistas?: estilistasCreateNestedOneWithoutCitasInput
    catalogo?: catalogoCreateNestedOneWithoutCitasInput
    citasReagendadas?: citasReagendadasCreateNestedManyWithoutCitasInput
    historialCitas?: historialCitasCreateNestedManyWithoutCitasInput
    reporteCitasPendientes?: reporteCitasPendientesCreateNestedManyWithoutCitasInput
    reporteClientesCitas?: reporteClientesCitasCreateNestedManyWithoutCitasInput
  }

  export type citasUncheckedCreateWithoutGaleriaEstilosInput = {
    citaID?: number
    clienteID?: number | null
    estilistaID?: number | null
    servicioID?: number | null
    fechaCita?: Date | string | null
    comentarios?: string | null
    citasReagendadas?: citasReagendadasUncheckedCreateNestedManyWithoutCitasInput
    historialCitas?: historialCitasUncheckedCreateNestedManyWithoutCitasInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedCreateNestedManyWithoutCitasInput
    reporteClientesCitas?: reporteClientesCitasUncheckedCreateNestedManyWithoutCitasInput
  }

  export type citasCreateOrConnectWithoutGaleriaEstilosInput = {
    where: citasWhereUniqueInput
    create: XOR<citasCreateWithoutGaleriaEstilosInput, citasUncheckedCreateWithoutGaleriaEstilosInput>
  }

  export type citasCreateManyGaleriaEstilosInputEnvelope = {
    data: citasCreateManyGaleriaEstilosInput | citasCreateManyGaleriaEstilosInput[]
  }

  export type citasUpsertWithWhereUniqueWithoutGaleriaEstilosInput = {
    where: citasWhereUniqueInput
    update: XOR<citasUpdateWithoutGaleriaEstilosInput, citasUncheckedUpdateWithoutGaleriaEstilosInput>
    create: XOR<citasCreateWithoutGaleriaEstilosInput, citasUncheckedCreateWithoutGaleriaEstilosInput>
  }

  export type citasUpdateWithWhereUniqueWithoutGaleriaEstilosInput = {
    where: citasWhereUniqueInput
    data: XOR<citasUpdateWithoutGaleriaEstilosInput, citasUncheckedUpdateWithoutGaleriaEstilosInput>
  }

  export type citasUpdateManyWithWhereWithoutGaleriaEstilosInput = {
    where: citasScalarWhereInput
    data: XOR<citasUpdateManyMutationInput, citasUncheckedUpdateManyWithoutGaleriaEstilosInput>
  }

  export type citasCreateWithoutHistorialCitasInput = {
    fechaCita?: Date | string | null
    comentarios?: string | null
    clientes?: clientesCreateNestedOneWithoutCitasInput
    estilistas?: estilistasCreateNestedOneWithoutCitasInput
    galeriaEstilos?: galeriaEstilosCreateNestedOneWithoutCitasInput
    catalogo?: catalogoCreateNestedOneWithoutCitasInput
    citasReagendadas?: citasReagendadasCreateNestedManyWithoutCitasInput
    reporteCitasPendientes?: reporteCitasPendientesCreateNestedManyWithoutCitasInput
    reporteClientesCitas?: reporteClientesCitasCreateNestedManyWithoutCitasInput
  }

  export type citasUncheckedCreateWithoutHistorialCitasInput = {
    citaID?: number
    clienteID?: number | null
    estilistaID?: number | null
    servicioID?: number | null
    fechaCita?: Date | string | null
    estiloID?: number | null
    comentarios?: string | null
    citasReagendadas?: citasReagendadasUncheckedCreateNestedManyWithoutCitasInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedCreateNestedManyWithoutCitasInput
    reporteClientesCitas?: reporteClientesCitasUncheckedCreateNestedManyWithoutCitasInput
  }

  export type citasCreateOrConnectWithoutHistorialCitasInput = {
    where: citasWhereUniqueInput
    create: XOR<citasCreateWithoutHistorialCitasInput, citasUncheckedCreateWithoutHistorialCitasInput>
  }

  export type clientesCreateWithoutHistorialCitasInput = {
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    puntosGanados?: number | null
    puntosCanjeados?: number | null
    contrase_a?: string | null
    estado?: string | null
    citas?: citasCreateNestedManyWithoutClientesInput
    roles?: rolesCreateNestedOneWithoutClientesInput
    historialClientes?: historialClientesCreateNestedManyWithoutClientesInput
    historialCuenta?: historialCuentaCreateNestedManyWithoutClientesInput
    historialGastoPuntos?: historialGastoPuntosCreateNestedManyWithoutClientesInput
    puntosClientes?: puntosClientesCreateNestedManyWithoutClientesInput
    reporteCitasPendientes?: reporteCitasPendientesCreateNestedManyWithoutClientesInput
    reporteClientesCitas?: reporteClientesCitasCreateNestedManyWithoutClientesInput
  }

  export type clientesUncheckedCreateWithoutHistorialCitasInput = {
    clienteID?: number
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    puntosGanados?: number | null
    puntosCanjeados?: number | null
    contrase_a?: string | null
    rolID?: number | null
    estado?: string | null
    citas?: citasUncheckedCreateNestedManyWithoutClientesInput
    historialClientes?: historialClientesUncheckedCreateNestedManyWithoutClientesInput
    historialCuenta?: historialCuentaUncheckedCreateNestedManyWithoutClientesInput
    historialGastoPuntos?: historialGastoPuntosUncheckedCreateNestedManyWithoutClientesInput
    puntosClientes?: puntosClientesUncheckedCreateNestedManyWithoutClientesInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedCreateNestedManyWithoutClientesInput
    reporteClientesCitas?: reporteClientesCitasUncheckedCreateNestedManyWithoutClientesInput
  }

  export type clientesCreateOrConnectWithoutHistorialCitasInput = {
    where: clientesWhereUniqueInput
    create: XOR<clientesCreateWithoutHistorialCitasInput, clientesUncheckedCreateWithoutHistorialCitasInput>
  }

  export type estilistasCreateWithoutHistorialCitasInput = {
    nombre?: string | null
    apellidos?: string | null
    telefono?: string | null
    direccion?: string | null
    fechaIngreso?: Date | string | null
    fechaSalida?: Date | string | null
    correo?: string | null
    contrase_a?: string | null
    estado?: string | null
    bloqueoHorarios?: bloqueoHorariosCreateNestedManyWithoutEstilistasInput
    citas?: citasCreateNestedManyWithoutEstilistasInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealCreateNestedManyWithoutEstilistasInput
    roles?: rolesCreateNestedOneWithoutEstilistasInput
    reporteCitasPendientes?: reporteCitasPendientesCreateNestedManyWithoutEstilistasInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasCreateNestedManyWithoutEstilistasInput
  }

  export type estilistasUncheckedCreateWithoutHistorialCitasInput = {
    estilistaID?: number
    nombre?: string | null
    apellidos?: string | null
    telefono?: string | null
    direccion?: string | null
    fechaIngreso?: Date | string | null
    fechaSalida?: Date | string | null
    correo?: string | null
    contrase_a?: string | null
    rolID?: number | null
    estado?: string | null
    bloqueoHorarios?: bloqueoHorariosUncheckedCreateNestedManyWithoutEstilistasInput
    citas?: citasUncheckedCreateNestedManyWithoutEstilistasInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealUncheckedCreateNestedManyWithoutEstilistasInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedCreateNestedManyWithoutEstilistasInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasUncheckedCreateNestedManyWithoutEstilistasInput
  }

  export type estilistasCreateOrConnectWithoutHistorialCitasInput = {
    where: estilistasWhereUniqueInput
    create: XOR<estilistasCreateWithoutHistorialCitasInput, estilistasUncheckedCreateWithoutHistorialCitasInput>
  }

  export type citasUpsertWithoutHistorialCitasInput = {
    update: XOR<citasUpdateWithoutHistorialCitasInput, citasUncheckedUpdateWithoutHistorialCitasInput>
    create: XOR<citasCreateWithoutHistorialCitasInput, citasUncheckedCreateWithoutHistorialCitasInput>
    where?: citasWhereInput
  }

  export type citasUpdateToOneWithWhereWithoutHistorialCitasInput = {
    where?: citasWhereInput
    data: XOR<citasUpdateWithoutHistorialCitasInput, citasUncheckedUpdateWithoutHistorialCitasInput>
  }

  export type citasUpdateWithoutHistorialCitasInput = {
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    clientes?: clientesUpdateOneWithoutCitasNestedInput
    estilistas?: estilistasUpdateOneWithoutCitasNestedInput
    galeriaEstilos?: galeriaEstilosUpdateOneWithoutCitasNestedInput
    catalogo?: catalogoUpdateOneWithoutCitasNestedInput
    citasReagendadas?: citasReagendadasUpdateManyWithoutCitasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUpdateManyWithoutCitasNestedInput
    reporteClientesCitas?: reporteClientesCitasUpdateManyWithoutCitasNestedInput
  }

  export type citasUncheckedUpdateWithoutHistorialCitasInput = {
    citaID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estiloID?: NullableIntFieldUpdateOperationsInput | number | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    citasReagendadas?: citasReagendadasUncheckedUpdateManyWithoutCitasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedUpdateManyWithoutCitasNestedInput
    reporteClientesCitas?: reporteClientesCitasUncheckedUpdateManyWithoutCitasNestedInput
  }

  export type clientesUpsertWithoutHistorialCitasInput = {
    update: XOR<clientesUpdateWithoutHistorialCitasInput, clientesUncheckedUpdateWithoutHistorialCitasInput>
    create: XOR<clientesCreateWithoutHistorialCitasInput, clientesUncheckedCreateWithoutHistorialCitasInput>
    where?: clientesWhereInput
  }

  export type clientesUpdateToOneWithWhereWithoutHistorialCitasInput = {
    where?: clientesWhereInput
    data: XOR<clientesUpdateWithoutHistorialCitasInput, clientesUncheckedUpdateWithoutHistorialCitasInput>
  }

  export type clientesUpdateWithoutHistorialCitasInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    puntosGanados?: NullableIntFieldUpdateOperationsInput | number | null
    puntosCanjeados?: NullableIntFieldUpdateOperationsInput | number | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    citas?: citasUpdateManyWithoutClientesNestedInput
    roles?: rolesUpdateOneWithoutClientesNestedInput
    historialClientes?: historialClientesUpdateManyWithoutClientesNestedInput
    historialCuenta?: historialCuentaUpdateManyWithoutClientesNestedInput
    historialGastoPuntos?: historialGastoPuntosUpdateManyWithoutClientesNestedInput
    puntosClientes?: puntosClientesUpdateManyWithoutClientesNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUpdateManyWithoutClientesNestedInput
    reporteClientesCitas?: reporteClientesCitasUpdateManyWithoutClientesNestedInput
  }

  export type clientesUncheckedUpdateWithoutHistorialCitasInput = {
    clienteID?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    puntosGanados?: NullableIntFieldUpdateOperationsInput | number | null
    puntosCanjeados?: NullableIntFieldUpdateOperationsInput | number | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    rolID?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    citas?: citasUncheckedUpdateManyWithoutClientesNestedInput
    historialClientes?: historialClientesUncheckedUpdateManyWithoutClientesNestedInput
    historialCuenta?: historialCuentaUncheckedUpdateManyWithoutClientesNestedInput
    historialGastoPuntos?: historialGastoPuntosUncheckedUpdateManyWithoutClientesNestedInput
    puntosClientes?: puntosClientesUncheckedUpdateManyWithoutClientesNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedUpdateManyWithoutClientesNestedInput
    reporteClientesCitas?: reporteClientesCitasUncheckedUpdateManyWithoutClientesNestedInput
  }

  export type estilistasUpsertWithoutHistorialCitasInput = {
    update: XOR<estilistasUpdateWithoutHistorialCitasInput, estilistasUncheckedUpdateWithoutHistorialCitasInput>
    create: XOR<estilistasCreateWithoutHistorialCitasInput, estilistasUncheckedCreateWithoutHistorialCitasInput>
    where?: estilistasWhereInput
  }

  export type estilistasUpdateToOneWithWhereWithoutHistorialCitasInput = {
    where?: estilistasWhereInput
    data: XOR<estilistasUpdateWithoutHistorialCitasInput, estilistasUncheckedUpdateWithoutHistorialCitasInput>
  }

  export type estilistasUpdateWithoutHistorialCitasInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaIngreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    bloqueoHorarios?: bloqueoHorariosUpdateManyWithoutEstilistasNestedInput
    citas?: citasUpdateManyWithoutEstilistasNestedInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealUpdateManyWithoutEstilistasNestedInput
    roles?: rolesUpdateOneWithoutEstilistasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUpdateManyWithoutEstilistasNestedInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasUpdateManyWithoutEstilistasNestedInput
  }

  export type estilistasUncheckedUpdateWithoutHistorialCitasInput = {
    estilistaID?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaIngreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    rolID?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    bloqueoHorarios?: bloqueoHorariosUncheckedUpdateManyWithoutEstilistasNestedInput
    citas?: citasUncheckedUpdateManyWithoutEstilistasNestedInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealUncheckedUpdateManyWithoutEstilistasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedUpdateManyWithoutEstilistasNestedInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasUncheckedUpdateManyWithoutEstilistasNestedInput
  }

  export type clientesCreateWithoutHistorialClientesInput = {
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    puntosGanados?: number | null
    puntosCanjeados?: number | null
    contrase_a?: string | null
    estado?: string | null
    citas?: citasCreateNestedManyWithoutClientesInput
    roles?: rolesCreateNestedOneWithoutClientesInput
    historialCitas?: historialCitasCreateNestedManyWithoutClientesInput
    historialCuenta?: historialCuentaCreateNestedManyWithoutClientesInput
    historialGastoPuntos?: historialGastoPuntosCreateNestedManyWithoutClientesInput
    puntosClientes?: puntosClientesCreateNestedManyWithoutClientesInput
    reporteCitasPendientes?: reporteCitasPendientesCreateNestedManyWithoutClientesInput
    reporteClientesCitas?: reporteClientesCitasCreateNestedManyWithoutClientesInput
  }

  export type clientesUncheckedCreateWithoutHistorialClientesInput = {
    clienteID?: number
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    puntosGanados?: number | null
    puntosCanjeados?: number | null
    contrase_a?: string | null
    rolID?: number | null
    estado?: string | null
    citas?: citasUncheckedCreateNestedManyWithoutClientesInput
    historialCitas?: historialCitasUncheckedCreateNestedManyWithoutClientesInput
    historialCuenta?: historialCuentaUncheckedCreateNestedManyWithoutClientesInput
    historialGastoPuntos?: historialGastoPuntosUncheckedCreateNestedManyWithoutClientesInput
    puntosClientes?: puntosClientesUncheckedCreateNestedManyWithoutClientesInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedCreateNestedManyWithoutClientesInput
    reporteClientesCitas?: reporteClientesCitasUncheckedCreateNestedManyWithoutClientesInput
  }

  export type clientesCreateOrConnectWithoutHistorialClientesInput = {
    where: clientesWhereUniqueInput
    create: XOR<clientesCreateWithoutHistorialClientesInput, clientesUncheckedCreateWithoutHistorialClientesInput>
  }

  export type catalogoCreateWithoutHistorialClientesInput = {
    nombreServicio?: string | null
    descripcion?: string | null
    precio?: number | null
    citas?: citasCreateNestedManyWithoutCatalogoInput
    detalleServicio?: detalleServicioCreateNestedManyWithoutCatalogoInput
    recompensas?: recompensasCreateNestedManyWithoutCatalogoInput
    reporteClientesCitas?: reporteClientesCitasCreateNestedManyWithoutCatalogoInput
  }

  export type catalogoUncheckedCreateWithoutHistorialClientesInput = {
    servicioID?: number
    nombreServicio?: string | null
    descripcion?: string | null
    precio?: number | null
    citas?: citasUncheckedCreateNestedManyWithoutCatalogoInput
    detalleServicio?: detalleServicioUncheckedCreateNestedManyWithoutCatalogoInput
    recompensas?: recompensasUncheckedCreateNestedManyWithoutCatalogoInput
    reporteClientesCitas?: reporteClientesCitasUncheckedCreateNestedManyWithoutCatalogoInput
  }

  export type catalogoCreateOrConnectWithoutHistorialClientesInput = {
    where: catalogoWhereUniqueInput
    create: XOR<catalogoCreateWithoutHistorialClientesInput, catalogoUncheckedCreateWithoutHistorialClientesInput>
  }

  export type clientesUpsertWithoutHistorialClientesInput = {
    update: XOR<clientesUpdateWithoutHistorialClientesInput, clientesUncheckedUpdateWithoutHistorialClientesInput>
    create: XOR<clientesCreateWithoutHistorialClientesInput, clientesUncheckedCreateWithoutHistorialClientesInput>
    where?: clientesWhereInput
  }

  export type clientesUpdateToOneWithWhereWithoutHistorialClientesInput = {
    where?: clientesWhereInput
    data: XOR<clientesUpdateWithoutHistorialClientesInput, clientesUncheckedUpdateWithoutHistorialClientesInput>
  }

  export type clientesUpdateWithoutHistorialClientesInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    puntosGanados?: NullableIntFieldUpdateOperationsInput | number | null
    puntosCanjeados?: NullableIntFieldUpdateOperationsInput | number | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    citas?: citasUpdateManyWithoutClientesNestedInput
    roles?: rolesUpdateOneWithoutClientesNestedInput
    historialCitas?: historialCitasUpdateManyWithoutClientesNestedInput
    historialCuenta?: historialCuentaUpdateManyWithoutClientesNestedInput
    historialGastoPuntos?: historialGastoPuntosUpdateManyWithoutClientesNestedInput
    puntosClientes?: puntosClientesUpdateManyWithoutClientesNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUpdateManyWithoutClientesNestedInput
    reporteClientesCitas?: reporteClientesCitasUpdateManyWithoutClientesNestedInput
  }

  export type clientesUncheckedUpdateWithoutHistorialClientesInput = {
    clienteID?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    puntosGanados?: NullableIntFieldUpdateOperationsInput | number | null
    puntosCanjeados?: NullableIntFieldUpdateOperationsInput | number | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    rolID?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    citas?: citasUncheckedUpdateManyWithoutClientesNestedInput
    historialCitas?: historialCitasUncheckedUpdateManyWithoutClientesNestedInput
    historialCuenta?: historialCuentaUncheckedUpdateManyWithoutClientesNestedInput
    historialGastoPuntos?: historialGastoPuntosUncheckedUpdateManyWithoutClientesNestedInput
    puntosClientes?: puntosClientesUncheckedUpdateManyWithoutClientesNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedUpdateManyWithoutClientesNestedInput
    reporteClientesCitas?: reporteClientesCitasUncheckedUpdateManyWithoutClientesNestedInput
  }

  export type catalogoUpsertWithoutHistorialClientesInput = {
    update: XOR<catalogoUpdateWithoutHistorialClientesInput, catalogoUncheckedUpdateWithoutHistorialClientesInput>
    create: XOR<catalogoCreateWithoutHistorialClientesInput, catalogoUncheckedCreateWithoutHistorialClientesInput>
    where?: catalogoWhereInput
  }

  export type catalogoUpdateToOneWithWhereWithoutHistorialClientesInput = {
    where?: catalogoWhereInput
    data: XOR<catalogoUpdateWithoutHistorialClientesInput, catalogoUncheckedUpdateWithoutHistorialClientesInput>
  }

  export type catalogoUpdateWithoutHistorialClientesInput = {
    nombreServicio?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: NullableIntFieldUpdateOperationsInput | number | null
    citas?: citasUpdateManyWithoutCatalogoNestedInput
    detalleServicio?: detalleServicioUpdateManyWithoutCatalogoNestedInput
    recompensas?: recompensasUpdateManyWithoutCatalogoNestedInput
    reporteClientesCitas?: reporteClientesCitasUpdateManyWithoutCatalogoNestedInput
  }

  export type catalogoUncheckedUpdateWithoutHistorialClientesInput = {
    servicioID?: IntFieldUpdateOperationsInput | number
    nombreServicio?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: NullableIntFieldUpdateOperationsInput | number | null
    citas?: citasUncheckedUpdateManyWithoutCatalogoNestedInput
    detalleServicio?: detalleServicioUncheckedUpdateManyWithoutCatalogoNestedInput
    recompensas?: recompensasUncheckedUpdateManyWithoutCatalogoNestedInput
    reporteClientesCitas?: reporteClientesCitasUncheckedUpdateManyWithoutCatalogoNestedInput
  }

  export type clientesCreateWithoutHistorialCuentaInput = {
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    puntosGanados?: number | null
    puntosCanjeados?: number | null
    contrase_a?: string | null
    estado?: string | null
    citas?: citasCreateNestedManyWithoutClientesInput
    roles?: rolesCreateNestedOneWithoutClientesInput
    historialCitas?: historialCitasCreateNestedManyWithoutClientesInput
    historialClientes?: historialClientesCreateNestedManyWithoutClientesInput
    historialGastoPuntos?: historialGastoPuntosCreateNestedManyWithoutClientesInput
    puntosClientes?: puntosClientesCreateNestedManyWithoutClientesInput
    reporteCitasPendientes?: reporteCitasPendientesCreateNestedManyWithoutClientesInput
    reporteClientesCitas?: reporteClientesCitasCreateNestedManyWithoutClientesInput
  }

  export type clientesUncheckedCreateWithoutHistorialCuentaInput = {
    clienteID?: number
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    puntosGanados?: number | null
    puntosCanjeados?: number | null
    contrase_a?: string | null
    rolID?: number | null
    estado?: string | null
    citas?: citasUncheckedCreateNestedManyWithoutClientesInput
    historialCitas?: historialCitasUncheckedCreateNestedManyWithoutClientesInput
    historialClientes?: historialClientesUncheckedCreateNestedManyWithoutClientesInput
    historialGastoPuntos?: historialGastoPuntosUncheckedCreateNestedManyWithoutClientesInput
    puntosClientes?: puntosClientesUncheckedCreateNestedManyWithoutClientesInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedCreateNestedManyWithoutClientesInput
    reporteClientesCitas?: reporteClientesCitasUncheckedCreateNestedManyWithoutClientesInput
  }

  export type clientesCreateOrConnectWithoutHistorialCuentaInput = {
    where: clientesWhereUniqueInput
    create: XOR<clientesCreateWithoutHistorialCuentaInput, clientesUncheckedCreateWithoutHistorialCuentaInput>
  }

  export type clientesUpsertWithoutHistorialCuentaInput = {
    update: XOR<clientesUpdateWithoutHistorialCuentaInput, clientesUncheckedUpdateWithoutHistorialCuentaInput>
    create: XOR<clientesCreateWithoutHistorialCuentaInput, clientesUncheckedCreateWithoutHistorialCuentaInput>
    where?: clientesWhereInput
  }

  export type clientesUpdateToOneWithWhereWithoutHistorialCuentaInput = {
    where?: clientesWhereInput
    data: XOR<clientesUpdateWithoutHistorialCuentaInput, clientesUncheckedUpdateWithoutHistorialCuentaInput>
  }

  export type clientesUpdateWithoutHistorialCuentaInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    puntosGanados?: NullableIntFieldUpdateOperationsInput | number | null
    puntosCanjeados?: NullableIntFieldUpdateOperationsInput | number | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    citas?: citasUpdateManyWithoutClientesNestedInput
    roles?: rolesUpdateOneWithoutClientesNestedInput
    historialCitas?: historialCitasUpdateManyWithoutClientesNestedInput
    historialClientes?: historialClientesUpdateManyWithoutClientesNestedInput
    historialGastoPuntos?: historialGastoPuntosUpdateManyWithoutClientesNestedInput
    puntosClientes?: puntosClientesUpdateManyWithoutClientesNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUpdateManyWithoutClientesNestedInput
    reporteClientesCitas?: reporteClientesCitasUpdateManyWithoutClientesNestedInput
  }

  export type clientesUncheckedUpdateWithoutHistorialCuentaInput = {
    clienteID?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    puntosGanados?: NullableIntFieldUpdateOperationsInput | number | null
    puntosCanjeados?: NullableIntFieldUpdateOperationsInput | number | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    rolID?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    citas?: citasUncheckedUpdateManyWithoutClientesNestedInput
    historialCitas?: historialCitasUncheckedUpdateManyWithoutClientesNestedInput
    historialClientes?: historialClientesUncheckedUpdateManyWithoutClientesNestedInput
    historialGastoPuntos?: historialGastoPuntosUncheckedUpdateManyWithoutClientesNestedInput
    puntosClientes?: puntosClientesUncheckedUpdateManyWithoutClientesNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedUpdateManyWithoutClientesNestedInput
    reporteClientesCitas?: reporteClientesCitasUncheckedUpdateManyWithoutClientesNestedInput
  }

  export type clientesCreateWithoutHistorialGastoPuntosInput = {
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    puntosGanados?: number | null
    puntosCanjeados?: number | null
    contrase_a?: string | null
    estado?: string | null
    citas?: citasCreateNestedManyWithoutClientesInput
    roles?: rolesCreateNestedOneWithoutClientesInput
    historialCitas?: historialCitasCreateNestedManyWithoutClientesInput
    historialClientes?: historialClientesCreateNestedManyWithoutClientesInput
    historialCuenta?: historialCuentaCreateNestedManyWithoutClientesInput
    puntosClientes?: puntosClientesCreateNestedManyWithoutClientesInput
    reporteCitasPendientes?: reporteCitasPendientesCreateNestedManyWithoutClientesInput
    reporteClientesCitas?: reporteClientesCitasCreateNestedManyWithoutClientesInput
  }

  export type clientesUncheckedCreateWithoutHistorialGastoPuntosInput = {
    clienteID?: number
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    puntosGanados?: number | null
    puntosCanjeados?: number | null
    contrase_a?: string | null
    rolID?: number | null
    estado?: string | null
    citas?: citasUncheckedCreateNestedManyWithoutClientesInput
    historialCitas?: historialCitasUncheckedCreateNestedManyWithoutClientesInput
    historialClientes?: historialClientesUncheckedCreateNestedManyWithoutClientesInput
    historialCuenta?: historialCuentaUncheckedCreateNestedManyWithoutClientesInput
    puntosClientes?: puntosClientesUncheckedCreateNestedManyWithoutClientesInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedCreateNestedManyWithoutClientesInput
    reporteClientesCitas?: reporteClientesCitasUncheckedCreateNestedManyWithoutClientesInput
  }

  export type clientesCreateOrConnectWithoutHistorialGastoPuntosInput = {
    where: clientesWhereUniqueInput
    create: XOR<clientesCreateWithoutHistorialGastoPuntosInput, clientesUncheckedCreateWithoutHistorialGastoPuntosInput>
  }

  export type clientesUpsertWithoutHistorialGastoPuntosInput = {
    update: XOR<clientesUpdateWithoutHistorialGastoPuntosInput, clientesUncheckedUpdateWithoutHistorialGastoPuntosInput>
    create: XOR<clientesCreateWithoutHistorialGastoPuntosInput, clientesUncheckedCreateWithoutHistorialGastoPuntosInput>
    where?: clientesWhereInput
  }

  export type clientesUpdateToOneWithWhereWithoutHistorialGastoPuntosInput = {
    where?: clientesWhereInput
    data: XOR<clientesUpdateWithoutHistorialGastoPuntosInput, clientesUncheckedUpdateWithoutHistorialGastoPuntosInput>
  }

  export type clientesUpdateWithoutHistorialGastoPuntosInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    puntosGanados?: NullableIntFieldUpdateOperationsInput | number | null
    puntosCanjeados?: NullableIntFieldUpdateOperationsInput | number | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    citas?: citasUpdateManyWithoutClientesNestedInput
    roles?: rolesUpdateOneWithoutClientesNestedInput
    historialCitas?: historialCitasUpdateManyWithoutClientesNestedInput
    historialClientes?: historialClientesUpdateManyWithoutClientesNestedInput
    historialCuenta?: historialCuentaUpdateManyWithoutClientesNestedInput
    puntosClientes?: puntosClientesUpdateManyWithoutClientesNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUpdateManyWithoutClientesNestedInput
    reporteClientesCitas?: reporteClientesCitasUpdateManyWithoutClientesNestedInput
  }

  export type clientesUncheckedUpdateWithoutHistorialGastoPuntosInput = {
    clienteID?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    puntosGanados?: NullableIntFieldUpdateOperationsInput | number | null
    puntosCanjeados?: NullableIntFieldUpdateOperationsInput | number | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    rolID?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    citas?: citasUncheckedUpdateManyWithoutClientesNestedInput
    historialCitas?: historialCitasUncheckedUpdateManyWithoutClientesNestedInput
    historialClientes?: historialClientesUncheckedUpdateManyWithoutClientesNestedInput
    historialCuenta?: historialCuentaUncheckedUpdateManyWithoutClientesNestedInput
    puntosClientes?: puntosClientesUncheckedUpdateManyWithoutClientesNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedUpdateManyWithoutClientesNestedInput
    reporteClientesCitas?: reporteClientesCitasUncheckedUpdateManyWithoutClientesNestedInput
  }

  export type clientesCreateWithoutPuntosClientesInput = {
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    puntosGanados?: number | null
    puntosCanjeados?: number | null
    contrase_a?: string | null
    estado?: string | null
    citas?: citasCreateNestedManyWithoutClientesInput
    roles?: rolesCreateNestedOneWithoutClientesInput
    historialCitas?: historialCitasCreateNestedManyWithoutClientesInput
    historialClientes?: historialClientesCreateNestedManyWithoutClientesInput
    historialCuenta?: historialCuentaCreateNestedManyWithoutClientesInput
    historialGastoPuntos?: historialGastoPuntosCreateNestedManyWithoutClientesInput
    reporteCitasPendientes?: reporteCitasPendientesCreateNestedManyWithoutClientesInput
    reporteClientesCitas?: reporteClientesCitasCreateNestedManyWithoutClientesInput
  }

  export type clientesUncheckedCreateWithoutPuntosClientesInput = {
    clienteID?: number
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    puntosGanados?: number | null
    puntosCanjeados?: number | null
    contrase_a?: string | null
    rolID?: number | null
    estado?: string | null
    citas?: citasUncheckedCreateNestedManyWithoutClientesInput
    historialCitas?: historialCitasUncheckedCreateNestedManyWithoutClientesInput
    historialClientes?: historialClientesUncheckedCreateNestedManyWithoutClientesInput
    historialCuenta?: historialCuentaUncheckedCreateNestedManyWithoutClientesInput
    historialGastoPuntos?: historialGastoPuntosUncheckedCreateNestedManyWithoutClientesInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedCreateNestedManyWithoutClientesInput
    reporteClientesCitas?: reporteClientesCitasUncheckedCreateNestedManyWithoutClientesInput
  }

  export type clientesCreateOrConnectWithoutPuntosClientesInput = {
    where: clientesWhereUniqueInput
    create: XOR<clientesCreateWithoutPuntosClientesInput, clientesUncheckedCreateWithoutPuntosClientesInput>
  }

  export type clientesUpsertWithoutPuntosClientesInput = {
    update: XOR<clientesUpdateWithoutPuntosClientesInput, clientesUncheckedUpdateWithoutPuntosClientesInput>
    create: XOR<clientesCreateWithoutPuntosClientesInput, clientesUncheckedCreateWithoutPuntosClientesInput>
    where?: clientesWhereInput
  }

  export type clientesUpdateToOneWithWhereWithoutPuntosClientesInput = {
    where?: clientesWhereInput
    data: XOR<clientesUpdateWithoutPuntosClientesInput, clientesUncheckedUpdateWithoutPuntosClientesInput>
  }

  export type clientesUpdateWithoutPuntosClientesInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    puntosGanados?: NullableIntFieldUpdateOperationsInput | number | null
    puntosCanjeados?: NullableIntFieldUpdateOperationsInput | number | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    citas?: citasUpdateManyWithoutClientesNestedInput
    roles?: rolesUpdateOneWithoutClientesNestedInput
    historialCitas?: historialCitasUpdateManyWithoutClientesNestedInput
    historialClientes?: historialClientesUpdateManyWithoutClientesNestedInput
    historialCuenta?: historialCuentaUpdateManyWithoutClientesNestedInput
    historialGastoPuntos?: historialGastoPuntosUpdateManyWithoutClientesNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUpdateManyWithoutClientesNestedInput
    reporteClientesCitas?: reporteClientesCitasUpdateManyWithoutClientesNestedInput
  }

  export type clientesUncheckedUpdateWithoutPuntosClientesInput = {
    clienteID?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    puntosGanados?: NullableIntFieldUpdateOperationsInput | number | null
    puntosCanjeados?: NullableIntFieldUpdateOperationsInput | number | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    rolID?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    citas?: citasUncheckedUpdateManyWithoutClientesNestedInput
    historialCitas?: historialCitasUncheckedUpdateManyWithoutClientesNestedInput
    historialClientes?: historialClientesUncheckedUpdateManyWithoutClientesNestedInput
    historialCuenta?: historialCuentaUncheckedUpdateManyWithoutClientesNestedInput
    historialGastoPuntos?: historialGastoPuntosUncheckedUpdateManyWithoutClientesNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedUpdateManyWithoutClientesNestedInput
    reporteClientesCitas?: reporteClientesCitasUncheckedUpdateManyWithoutClientesNestedInput
  }

  export type catalogoCreateWithoutRecompensasInput = {
    nombreServicio?: string | null
    descripcion?: string | null
    precio?: number | null
    citas?: citasCreateNestedManyWithoutCatalogoInput
    detalleServicio?: detalleServicioCreateNestedManyWithoutCatalogoInput
    historialClientes?: historialClientesCreateNestedManyWithoutCatalogoInput
    reporteClientesCitas?: reporteClientesCitasCreateNestedManyWithoutCatalogoInput
  }

  export type catalogoUncheckedCreateWithoutRecompensasInput = {
    servicioID?: number
    nombreServicio?: string | null
    descripcion?: string | null
    precio?: number | null
    citas?: citasUncheckedCreateNestedManyWithoutCatalogoInput
    detalleServicio?: detalleServicioUncheckedCreateNestedManyWithoutCatalogoInput
    historialClientes?: historialClientesUncheckedCreateNestedManyWithoutCatalogoInput
    reporteClientesCitas?: reporteClientesCitasUncheckedCreateNestedManyWithoutCatalogoInput
  }

  export type catalogoCreateOrConnectWithoutRecompensasInput = {
    where: catalogoWhereUniqueInput
    create: XOR<catalogoCreateWithoutRecompensasInput, catalogoUncheckedCreateWithoutRecompensasInput>
  }

  export type catalogoUpsertWithoutRecompensasInput = {
    update: XOR<catalogoUpdateWithoutRecompensasInput, catalogoUncheckedUpdateWithoutRecompensasInput>
    create: XOR<catalogoCreateWithoutRecompensasInput, catalogoUncheckedCreateWithoutRecompensasInput>
    where?: catalogoWhereInput
  }

  export type catalogoUpdateToOneWithWhereWithoutRecompensasInput = {
    where?: catalogoWhereInput
    data: XOR<catalogoUpdateWithoutRecompensasInput, catalogoUncheckedUpdateWithoutRecompensasInput>
  }

  export type catalogoUpdateWithoutRecompensasInput = {
    nombreServicio?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: NullableIntFieldUpdateOperationsInput | number | null
    citas?: citasUpdateManyWithoutCatalogoNestedInput
    detalleServicio?: detalleServicioUpdateManyWithoutCatalogoNestedInput
    historialClientes?: historialClientesUpdateManyWithoutCatalogoNestedInput
    reporteClientesCitas?: reporteClientesCitasUpdateManyWithoutCatalogoNestedInput
  }

  export type catalogoUncheckedUpdateWithoutRecompensasInput = {
    servicioID?: IntFieldUpdateOperationsInput | number
    nombreServicio?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: NullableIntFieldUpdateOperationsInput | number | null
    citas?: citasUncheckedUpdateManyWithoutCatalogoNestedInput
    detalleServicio?: detalleServicioUncheckedUpdateManyWithoutCatalogoNestedInput
    historialClientes?: historialClientesUncheckedUpdateManyWithoutCatalogoNestedInput
    reporteClientesCitas?: reporteClientesCitasUncheckedUpdateManyWithoutCatalogoNestedInput
  }

  export type citasCreateWithoutReporteCitasPendientesInput = {
    fechaCita?: Date | string | null
    comentarios?: string | null
    clientes?: clientesCreateNestedOneWithoutCitasInput
    estilistas?: estilistasCreateNestedOneWithoutCitasInput
    galeriaEstilos?: galeriaEstilosCreateNestedOneWithoutCitasInput
    catalogo?: catalogoCreateNestedOneWithoutCitasInput
    citasReagendadas?: citasReagendadasCreateNestedManyWithoutCitasInput
    historialCitas?: historialCitasCreateNestedManyWithoutCitasInput
    reporteClientesCitas?: reporteClientesCitasCreateNestedManyWithoutCitasInput
  }

  export type citasUncheckedCreateWithoutReporteCitasPendientesInput = {
    citaID?: number
    clienteID?: number | null
    estilistaID?: number | null
    servicioID?: number | null
    fechaCita?: Date | string | null
    estiloID?: number | null
    comentarios?: string | null
    citasReagendadas?: citasReagendadasUncheckedCreateNestedManyWithoutCitasInput
    historialCitas?: historialCitasUncheckedCreateNestedManyWithoutCitasInput
    reporteClientesCitas?: reporteClientesCitasUncheckedCreateNestedManyWithoutCitasInput
  }

  export type citasCreateOrConnectWithoutReporteCitasPendientesInput = {
    where: citasWhereUniqueInput
    create: XOR<citasCreateWithoutReporteCitasPendientesInput, citasUncheckedCreateWithoutReporteCitasPendientesInput>
  }

  export type clientesCreateWithoutReporteCitasPendientesInput = {
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    puntosGanados?: number | null
    puntosCanjeados?: number | null
    contrase_a?: string | null
    estado?: string | null
    citas?: citasCreateNestedManyWithoutClientesInput
    roles?: rolesCreateNestedOneWithoutClientesInput
    historialCitas?: historialCitasCreateNestedManyWithoutClientesInput
    historialClientes?: historialClientesCreateNestedManyWithoutClientesInput
    historialCuenta?: historialCuentaCreateNestedManyWithoutClientesInput
    historialGastoPuntos?: historialGastoPuntosCreateNestedManyWithoutClientesInput
    puntosClientes?: puntosClientesCreateNestedManyWithoutClientesInput
    reporteClientesCitas?: reporteClientesCitasCreateNestedManyWithoutClientesInput
  }

  export type clientesUncheckedCreateWithoutReporteCitasPendientesInput = {
    clienteID?: number
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    puntosGanados?: number | null
    puntosCanjeados?: number | null
    contrase_a?: string | null
    rolID?: number | null
    estado?: string | null
    citas?: citasUncheckedCreateNestedManyWithoutClientesInput
    historialCitas?: historialCitasUncheckedCreateNestedManyWithoutClientesInput
    historialClientes?: historialClientesUncheckedCreateNestedManyWithoutClientesInput
    historialCuenta?: historialCuentaUncheckedCreateNestedManyWithoutClientesInput
    historialGastoPuntos?: historialGastoPuntosUncheckedCreateNestedManyWithoutClientesInput
    puntosClientes?: puntosClientesUncheckedCreateNestedManyWithoutClientesInput
    reporteClientesCitas?: reporteClientesCitasUncheckedCreateNestedManyWithoutClientesInput
  }

  export type clientesCreateOrConnectWithoutReporteCitasPendientesInput = {
    where: clientesWhereUniqueInput
    create: XOR<clientesCreateWithoutReporteCitasPendientesInput, clientesUncheckedCreateWithoutReporteCitasPendientesInput>
  }

  export type estilistasCreateWithoutReporteCitasPendientesInput = {
    nombre?: string | null
    apellidos?: string | null
    telefono?: string | null
    direccion?: string | null
    fechaIngreso?: Date | string | null
    fechaSalida?: Date | string | null
    correo?: string | null
    contrase_a?: string | null
    estado?: string | null
    bloqueoHorarios?: bloqueoHorariosCreateNestedManyWithoutEstilistasInput
    citas?: citasCreateNestedManyWithoutEstilistasInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealCreateNestedManyWithoutEstilistasInput
    roles?: rolesCreateNestedOneWithoutEstilistasInput
    historialCitas?: historialCitasCreateNestedManyWithoutEstilistasInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasCreateNestedManyWithoutEstilistasInput
  }

  export type estilistasUncheckedCreateWithoutReporteCitasPendientesInput = {
    estilistaID?: number
    nombre?: string | null
    apellidos?: string | null
    telefono?: string | null
    direccion?: string | null
    fechaIngreso?: Date | string | null
    fechaSalida?: Date | string | null
    correo?: string | null
    contrase_a?: string | null
    rolID?: number | null
    estado?: string | null
    bloqueoHorarios?: bloqueoHorariosUncheckedCreateNestedManyWithoutEstilistasInput
    citas?: citasUncheckedCreateNestedManyWithoutEstilistasInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealUncheckedCreateNestedManyWithoutEstilistasInput
    historialCitas?: historialCitasUncheckedCreateNestedManyWithoutEstilistasInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasUncheckedCreateNestedManyWithoutEstilistasInput
  }

  export type estilistasCreateOrConnectWithoutReporteCitasPendientesInput = {
    where: estilistasWhereUniqueInput
    create: XOR<estilistasCreateWithoutReporteCitasPendientesInput, estilistasUncheckedCreateWithoutReporteCitasPendientesInput>
  }

  export type citasUpsertWithoutReporteCitasPendientesInput = {
    update: XOR<citasUpdateWithoutReporteCitasPendientesInput, citasUncheckedUpdateWithoutReporteCitasPendientesInput>
    create: XOR<citasCreateWithoutReporteCitasPendientesInput, citasUncheckedCreateWithoutReporteCitasPendientesInput>
    where?: citasWhereInput
  }

  export type citasUpdateToOneWithWhereWithoutReporteCitasPendientesInput = {
    where?: citasWhereInput
    data: XOR<citasUpdateWithoutReporteCitasPendientesInput, citasUncheckedUpdateWithoutReporteCitasPendientesInput>
  }

  export type citasUpdateWithoutReporteCitasPendientesInput = {
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    clientes?: clientesUpdateOneWithoutCitasNestedInput
    estilistas?: estilistasUpdateOneWithoutCitasNestedInput
    galeriaEstilos?: galeriaEstilosUpdateOneWithoutCitasNestedInput
    catalogo?: catalogoUpdateOneWithoutCitasNestedInput
    citasReagendadas?: citasReagendadasUpdateManyWithoutCitasNestedInput
    historialCitas?: historialCitasUpdateManyWithoutCitasNestedInput
    reporteClientesCitas?: reporteClientesCitasUpdateManyWithoutCitasNestedInput
  }

  export type citasUncheckedUpdateWithoutReporteCitasPendientesInput = {
    citaID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estiloID?: NullableIntFieldUpdateOperationsInput | number | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    citasReagendadas?: citasReagendadasUncheckedUpdateManyWithoutCitasNestedInput
    historialCitas?: historialCitasUncheckedUpdateManyWithoutCitasNestedInput
    reporteClientesCitas?: reporteClientesCitasUncheckedUpdateManyWithoutCitasNestedInput
  }

  export type clientesUpsertWithoutReporteCitasPendientesInput = {
    update: XOR<clientesUpdateWithoutReporteCitasPendientesInput, clientesUncheckedUpdateWithoutReporteCitasPendientesInput>
    create: XOR<clientesCreateWithoutReporteCitasPendientesInput, clientesUncheckedCreateWithoutReporteCitasPendientesInput>
    where?: clientesWhereInput
  }

  export type clientesUpdateToOneWithWhereWithoutReporteCitasPendientesInput = {
    where?: clientesWhereInput
    data: XOR<clientesUpdateWithoutReporteCitasPendientesInput, clientesUncheckedUpdateWithoutReporteCitasPendientesInput>
  }

  export type clientesUpdateWithoutReporteCitasPendientesInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    puntosGanados?: NullableIntFieldUpdateOperationsInput | number | null
    puntosCanjeados?: NullableIntFieldUpdateOperationsInput | number | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    citas?: citasUpdateManyWithoutClientesNestedInput
    roles?: rolesUpdateOneWithoutClientesNestedInput
    historialCitas?: historialCitasUpdateManyWithoutClientesNestedInput
    historialClientes?: historialClientesUpdateManyWithoutClientesNestedInput
    historialCuenta?: historialCuentaUpdateManyWithoutClientesNestedInput
    historialGastoPuntos?: historialGastoPuntosUpdateManyWithoutClientesNestedInput
    puntosClientes?: puntosClientesUpdateManyWithoutClientesNestedInput
    reporteClientesCitas?: reporteClientesCitasUpdateManyWithoutClientesNestedInput
  }

  export type clientesUncheckedUpdateWithoutReporteCitasPendientesInput = {
    clienteID?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    puntosGanados?: NullableIntFieldUpdateOperationsInput | number | null
    puntosCanjeados?: NullableIntFieldUpdateOperationsInput | number | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    rolID?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    citas?: citasUncheckedUpdateManyWithoutClientesNestedInput
    historialCitas?: historialCitasUncheckedUpdateManyWithoutClientesNestedInput
    historialClientes?: historialClientesUncheckedUpdateManyWithoutClientesNestedInput
    historialCuenta?: historialCuentaUncheckedUpdateManyWithoutClientesNestedInput
    historialGastoPuntos?: historialGastoPuntosUncheckedUpdateManyWithoutClientesNestedInput
    puntosClientes?: puntosClientesUncheckedUpdateManyWithoutClientesNestedInput
    reporteClientesCitas?: reporteClientesCitasUncheckedUpdateManyWithoutClientesNestedInput
  }

  export type estilistasUpsertWithoutReporteCitasPendientesInput = {
    update: XOR<estilistasUpdateWithoutReporteCitasPendientesInput, estilistasUncheckedUpdateWithoutReporteCitasPendientesInput>
    create: XOR<estilistasCreateWithoutReporteCitasPendientesInput, estilistasUncheckedCreateWithoutReporteCitasPendientesInput>
    where?: estilistasWhereInput
  }

  export type estilistasUpdateToOneWithWhereWithoutReporteCitasPendientesInput = {
    where?: estilistasWhereInput
    data: XOR<estilistasUpdateWithoutReporteCitasPendientesInput, estilistasUncheckedUpdateWithoutReporteCitasPendientesInput>
  }

  export type estilistasUpdateWithoutReporteCitasPendientesInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaIngreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    bloqueoHorarios?: bloqueoHorariosUpdateManyWithoutEstilistasNestedInput
    citas?: citasUpdateManyWithoutEstilistasNestedInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealUpdateManyWithoutEstilistasNestedInput
    roles?: rolesUpdateOneWithoutEstilistasNestedInput
    historialCitas?: historialCitasUpdateManyWithoutEstilistasNestedInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasUpdateManyWithoutEstilistasNestedInput
  }

  export type estilistasUncheckedUpdateWithoutReporteCitasPendientesInput = {
    estilistaID?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaIngreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    rolID?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    bloqueoHorarios?: bloqueoHorariosUncheckedUpdateManyWithoutEstilistasNestedInput
    citas?: citasUncheckedUpdateManyWithoutEstilistasNestedInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealUncheckedUpdateManyWithoutEstilistasNestedInput
    historialCitas?: historialCitasUncheckedUpdateManyWithoutEstilistasNestedInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasUncheckedUpdateManyWithoutEstilistasNestedInput
  }

  export type citasCreateWithoutReporteClientesCitasInput = {
    fechaCita?: Date | string | null
    comentarios?: string | null
    clientes?: clientesCreateNestedOneWithoutCitasInput
    estilistas?: estilistasCreateNestedOneWithoutCitasInput
    galeriaEstilos?: galeriaEstilosCreateNestedOneWithoutCitasInput
    catalogo?: catalogoCreateNestedOneWithoutCitasInput
    citasReagendadas?: citasReagendadasCreateNestedManyWithoutCitasInput
    historialCitas?: historialCitasCreateNestedManyWithoutCitasInput
    reporteCitasPendientes?: reporteCitasPendientesCreateNestedManyWithoutCitasInput
  }

  export type citasUncheckedCreateWithoutReporteClientesCitasInput = {
    citaID?: number
    clienteID?: number | null
    estilistaID?: number | null
    servicioID?: number | null
    fechaCita?: Date | string | null
    estiloID?: number | null
    comentarios?: string | null
    citasReagendadas?: citasReagendadasUncheckedCreateNestedManyWithoutCitasInput
    historialCitas?: historialCitasUncheckedCreateNestedManyWithoutCitasInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedCreateNestedManyWithoutCitasInput
  }

  export type citasCreateOrConnectWithoutReporteClientesCitasInput = {
    where: citasWhereUniqueInput
    create: XOR<citasCreateWithoutReporteClientesCitasInput, citasUncheckedCreateWithoutReporteClientesCitasInput>
  }

  export type clientesCreateWithoutReporteClientesCitasInput = {
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    puntosGanados?: number | null
    puntosCanjeados?: number | null
    contrase_a?: string | null
    estado?: string | null
    citas?: citasCreateNestedManyWithoutClientesInput
    roles?: rolesCreateNestedOneWithoutClientesInput
    historialCitas?: historialCitasCreateNestedManyWithoutClientesInput
    historialClientes?: historialClientesCreateNestedManyWithoutClientesInput
    historialCuenta?: historialCuentaCreateNestedManyWithoutClientesInput
    historialGastoPuntos?: historialGastoPuntosCreateNestedManyWithoutClientesInput
    puntosClientes?: puntosClientesCreateNestedManyWithoutClientesInput
    reporteCitasPendientes?: reporteCitasPendientesCreateNestedManyWithoutClientesInput
  }

  export type clientesUncheckedCreateWithoutReporteClientesCitasInput = {
    clienteID?: number
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    puntosGanados?: number | null
    puntosCanjeados?: number | null
    contrase_a?: string | null
    rolID?: number | null
    estado?: string | null
    citas?: citasUncheckedCreateNestedManyWithoutClientesInput
    historialCitas?: historialCitasUncheckedCreateNestedManyWithoutClientesInput
    historialClientes?: historialClientesUncheckedCreateNestedManyWithoutClientesInput
    historialCuenta?: historialCuentaUncheckedCreateNestedManyWithoutClientesInput
    historialGastoPuntos?: historialGastoPuntosUncheckedCreateNestedManyWithoutClientesInput
    puntosClientes?: puntosClientesUncheckedCreateNestedManyWithoutClientesInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedCreateNestedManyWithoutClientesInput
  }

  export type clientesCreateOrConnectWithoutReporteClientesCitasInput = {
    where: clientesWhereUniqueInput
    create: XOR<clientesCreateWithoutReporteClientesCitasInput, clientesUncheckedCreateWithoutReporteClientesCitasInput>
  }

  export type catalogoCreateWithoutReporteClientesCitasInput = {
    nombreServicio?: string | null
    descripcion?: string | null
    precio?: number | null
    citas?: citasCreateNestedManyWithoutCatalogoInput
    detalleServicio?: detalleServicioCreateNestedManyWithoutCatalogoInput
    historialClientes?: historialClientesCreateNestedManyWithoutCatalogoInput
    recompensas?: recompensasCreateNestedManyWithoutCatalogoInput
  }

  export type catalogoUncheckedCreateWithoutReporteClientesCitasInput = {
    servicioID?: number
    nombreServicio?: string | null
    descripcion?: string | null
    precio?: number | null
    citas?: citasUncheckedCreateNestedManyWithoutCatalogoInput
    detalleServicio?: detalleServicioUncheckedCreateNestedManyWithoutCatalogoInput
    historialClientes?: historialClientesUncheckedCreateNestedManyWithoutCatalogoInput
    recompensas?: recompensasUncheckedCreateNestedManyWithoutCatalogoInput
  }

  export type catalogoCreateOrConnectWithoutReporteClientesCitasInput = {
    where: catalogoWhereUniqueInput
    create: XOR<catalogoCreateWithoutReporteClientesCitasInput, catalogoUncheckedCreateWithoutReporteClientesCitasInput>
  }

  export type citasUpsertWithoutReporteClientesCitasInput = {
    update: XOR<citasUpdateWithoutReporteClientesCitasInput, citasUncheckedUpdateWithoutReporteClientesCitasInput>
    create: XOR<citasCreateWithoutReporteClientesCitasInput, citasUncheckedCreateWithoutReporteClientesCitasInput>
    where?: citasWhereInput
  }

  export type citasUpdateToOneWithWhereWithoutReporteClientesCitasInput = {
    where?: citasWhereInput
    data: XOR<citasUpdateWithoutReporteClientesCitasInput, citasUncheckedUpdateWithoutReporteClientesCitasInput>
  }

  export type citasUpdateWithoutReporteClientesCitasInput = {
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    clientes?: clientesUpdateOneWithoutCitasNestedInput
    estilistas?: estilistasUpdateOneWithoutCitasNestedInput
    galeriaEstilos?: galeriaEstilosUpdateOneWithoutCitasNestedInput
    catalogo?: catalogoUpdateOneWithoutCitasNestedInput
    citasReagendadas?: citasReagendadasUpdateManyWithoutCitasNestedInput
    historialCitas?: historialCitasUpdateManyWithoutCitasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUpdateManyWithoutCitasNestedInput
  }

  export type citasUncheckedUpdateWithoutReporteClientesCitasInput = {
    citaID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estiloID?: NullableIntFieldUpdateOperationsInput | number | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    citasReagendadas?: citasReagendadasUncheckedUpdateManyWithoutCitasNestedInput
    historialCitas?: historialCitasUncheckedUpdateManyWithoutCitasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedUpdateManyWithoutCitasNestedInput
  }

  export type clientesUpsertWithoutReporteClientesCitasInput = {
    update: XOR<clientesUpdateWithoutReporteClientesCitasInput, clientesUncheckedUpdateWithoutReporteClientesCitasInput>
    create: XOR<clientesCreateWithoutReporteClientesCitasInput, clientesUncheckedCreateWithoutReporteClientesCitasInput>
    where?: clientesWhereInput
  }

  export type clientesUpdateToOneWithWhereWithoutReporteClientesCitasInput = {
    where?: clientesWhereInput
    data: XOR<clientesUpdateWithoutReporteClientesCitasInput, clientesUncheckedUpdateWithoutReporteClientesCitasInput>
  }

  export type clientesUpdateWithoutReporteClientesCitasInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    puntosGanados?: NullableIntFieldUpdateOperationsInput | number | null
    puntosCanjeados?: NullableIntFieldUpdateOperationsInput | number | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    citas?: citasUpdateManyWithoutClientesNestedInput
    roles?: rolesUpdateOneWithoutClientesNestedInput
    historialCitas?: historialCitasUpdateManyWithoutClientesNestedInput
    historialClientes?: historialClientesUpdateManyWithoutClientesNestedInput
    historialCuenta?: historialCuentaUpdateManyWithoutClientesNestedInput
    historialGastoPuntos?: historialGastoPuntosUpdateManyWithoutClientesNestedInput
    puntosClientes?: puntosClientesUpdateManyWithoutClientesNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUpdateManyWithoutClientesNestedInput
  }

  export type clientesUncheckedUpdateWithoutReporteClientesCitasInput = {
    clienteID?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    puntosGanados?: NullableIntFieldUpdateOperationsInput | number | null
    puntosCanjeados?: NullableIntFieldUpdateOperationsInput | number | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    rolID?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    citas?: citasUncheckedUpdateManyWithoutClientesNestedInput
    historialCitas?: historialCitasUncheckedUpdateManyWithoutClientesNestedInput
    historialClientes?: historialClientesUncheckedUpdateManyWithoutClientesNestedInput
    historialCuenta?: historialCuentaUncheckedUpdateManyWithoutClientesNestedInput
    historialGastoPuntos?: historialGastoPuntosUncheckedUpdateManyWithoutClientesNestedInput
    puntosClientes?: puntosClientesUncheckedUpdateManyWithoutClientesNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedUpdateManyWithoutClientesNestedInput
  }

  export type catalogoUpsertWithoutReporteClientesCitasInput = {
    update: XOR<catalogoUpdateWithoutReporteClientesCitasInput, catalogoUncheckedUpdateWithoutReporteClientesCitasInput>
    create: XOR<catalogoCreateWithoutReporteClientesCitasInput, catalogoUncheckedCreateWithoutReporteClientesCitasInput>
    where?: catalogoWhereInput
  }

  export type catalogoUpdateToOneWithWhereWithoutReporteClientesCitasInput = {
    where?: catalogoWhereInput
    data: XOR<catalogoUpdateWithoutReporteClientesCitasInput, catalogoUncheckedUpdateWithoutReporteClientesCitasInput>
  }

  export type catalogoUpdateWithoutReporteClientesCitasInput = {
    nombreServicio?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: NullableIntFieldUpdateOperationsInput | number | null
    citas?: citasUpdateManyWithoutCatalogoNestedInput
    detalleServicio?: detalleServicioUpdateManyWithoutCatalogoNestedInput
    historialClientes?: historialClientesUpdateManyWithoutCatalogoNestedInput
    recompensas?: recompensasUpdateManyWithoutCatalogoNestedInput
  }

  export type catalogoUncheckedUpdateWithoutReporteClientesCitasInput = {
    servicioID?: IntFieldUpdateOperationsInput | number
    nombreServicio?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: NullableIntFieldUpdateOperationsInput | number | null
    citas?: citasUncheckedUpdateManyWithoutCatalogoNestedInput
    detalleServicio?: detalleServicioUncheckedUpdateManyWithoutCatalogoNestedInput
    historialClientes?: historialClientesUncheckedUpdateManyWithoutCatalogoNestedInput
    recompensas?: recompensasUncheckedUpdateManyWithoutCatalogoNestedInput
  }

  export type estilistasCreateWithoutReporteHorarioEstilistasInput = {
    nombre?: string | null
    apellidos?: string | null
    telefono?: string | null
    direccion?: string | null
    fechaIngreso?: Date | string | null
    fechaSalida?: Date | string | null
    correo?: string | null
    contrase_a?: string | null
    estado?: string | null
    bloqueoHorarios?: bloqueoHorariosCreateNestedManyWithoutEstilistasInput
    citas?: citasCreateNestedManyWithoutEstilistasInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealCreateNestedManyWithoutEstilistasInput
    roles?: rolesCreateNestedOneWithoutEstilistasInput
    historialCitas?: historialCitasCreateNestedManyWithoutEstilistasInput
    reporteCitasPendientes?: reporteCitasPendientesCreateNestedManyWithoutEstilistasInput
  }

  export type estilistasUncheckedCreateWithoutReporteHorarioEstilistasInput = {
    estilistaID?: number
    nombre?: string | null
    apellidos?: string | null
    telefono?: string | null
    direccion?: string | null
    fechaIngreso?: Date | string | null
    fechaSalida?: Date | string | null
    correo?: string | null
    contrase_a?: string | null
    rolID?: number | null
    estado?: string | null
    bloqueoHorarios?: bloqueoHorariosUncheckedCreateNestedManyWithoutEstilistasInput
    citas?: citasUncheckedCreateNestedManyWithoutEstilistasInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealUncheckedCreateNestedManyWithoutEstilistasInput
    historialCitas?: historialCitasUncheckedCreateNestedManyWithoutEstilistasInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedCreateNestedManyWithoutEstilistasInput
  }

  export type estilistasCreateOrConnectWithoutReporteHorarioEstilistasInput = {
    where: estilistasWhereUniqueInput
    create: XOR<estilistasCreateWithoutReporteHorarioEstilistasInput, estilistasUncheckedCreateWithoutReporteHorarioEstilistasInput>
  }

  export type estilistasUpsertWithoutReporteHorarioEstilistasInput = {
    update: XOR<estilistasUpdateWithoutReporteHorarioEstilistasInput, estilistasUncheckedUpdateWithoutReporteHorarioEstilistasInput>
    create: XOR<estilistasCreateWithoutReporteHorarioEstilistasInput, estilistasUncheckedCreateWithoutReporteHorarioEstilistasInput>
    where?: estilistasWhereInput
  }

  export type estilistasUpdateToOneWithWhereWithoutReporteHorarioEstilistasInput = {
    where?: estilistasWhereInput
    data: XOR<estilistasUpdateWithoutReporteHorarioEstilistasInput, estilistasUncheckedUpdateWithoutReporteHorarioEstilistasInput>
  }

  export type estilistasUpdateWithoutReporteHorarioEstilistasInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaIngreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    bloqueoHorarios?: bloqueoHorariosUpdateManyWithoutEstilistasNestedInput
    citas?: citasUpdateManyWithoutEstilistasNestedInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealUpdateManyWithoutEstilistasNestedInput
    roles?: rolesUpdateOneWithoutEstilistasNestedInput
    historialCitas?: historialCitasUpdateManyWithoutEstilistasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUpdateManyWithoutEstilistasNestedInput
  }

  export type estilistasUncheckedUpdateWithoutReporteHorarioEstilistasInput = {
    estilistaID?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaIngreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    rolID?: NullableIntFieldUpdateOperationsInput | number | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    bloqueoHorarios?: bloqueoHorariosUncheckedUpdateManyWithoutEstilistasNestedInput
    citas?: citasUncheckedUpdateManyWithoutEstilistasNestedInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealUncheckedUpdateManyWithoutEstilistasNestedInput
    historialCitas?: historialCitasUncheckedUpdateManyWithoutEstilistasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedUpdateManyWithoutEstilistasNestedInput
  }

  export type administradoresCreateWithoutRolesInput = {
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    contrase_a?: string | null
  }

  export type administradoresUncheckedCreateWithoutRolesInput = {
    adminID?: number
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    contrase_a?: string | null
  }

  export type administradoresCreateOrConnectWithoutRolesInput = {
    where: administradoresWhereUniqueInput
    create: XOR<administradoresCreateWithoutRolesInput, administradoresUncheckedCreateWithoutRolesInput>
  }

  export type administradoresCreateManyRolesInputEnvelope = {
    data: administradoresCreateManyRolesInput | administradoresCreateManyRolesInput[]
  }

  export type clientesCreateWithoutRolesInput = {
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    puntosGanados?: number | null
    puntosCanjeados?: number | null
    contrase_a?: string | null
    estado?: string | null
    citas?: citasCreateNestedManyWithoutClientesInput
    historialCitas?: historialCitasCreateNestedManyWithoutClientesInput
    historialClientes?: historialClientesCreateNestedManyWithoutClientesInput
    historialCuenta?: historialCuentaCreateNestedManyWithoutClientesInput
    historialGastoPuntos?: historialGastoPuntosCreateNestedManyWithoutClientesInput
    puntosClientes?: puntosClientesCreateNestedManyWithoutClientesInput
    reporteCitasPendientes?: reporteCitasPendientesCreateNestedManyWithoutClientesInput
    reporteClientesCitas?: reporteClientesCitasCreateNestedManyWithoutClientesInput
  }

  export type clientesUncheckedCreateWithoutRolesInput = {
    clienteID?: number
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    puntosGanados?: number | null
    puntosCanjeados?: number | null
    contrase_a?: string | null
    estado?: string | null
    citas?: citasUncheckedCreateNestedManyWithoutClientesInput
    historialCitas?: historialCitasUncheckedCreateNestedManyWithoutClientesInput
    historialClientes?: historialClientesUncheckedCreateNestedManyWithoutClientesInput
    historialCuenta?: historialCuentaUncheckedCreateNestedManyWithoutClientesInput
    historialGastoPuntos?: historialGastoPuntosUncheckedCreateNestedManyWithoutClientesInput
    puntosClientes?: puntosClientesUncheckedCreateNestedManyWithoutClientesInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedCreateNestedManyWithoutClientesInput
    reporteClientesCitas?: reporteClientesCitasUncheckedCreateNestedManyWithoutClientesInput
  }

  export type clientesCreateOrConnectWithoutRolesInput = {
    where: clientesWhereUniqueInput
    create: XOR<clientesCreateWithoutRolesInput, clientesUncheckedCreateWithoutRolesInput>
  }

  export type clientesCreateManyRolesInputEnvelope = {
    data: clientesCreateManyRolesInput | clientesCreateManyRolesInput[]
  }

  export type estilistasCreateWithoutRolesInput = {
    nombre?: string | null
    apellidos?: string | null
    telefono?: string | null
    direccion?: string | null
    fechaIngreso?: Date | string | null
    fechaSalida?: Date | string | null
    correo?: string | null
    contrase_a?: string | null
    estado?: string | null
    bloqueoHorarios?: bloqueoHorariosCreateNestedManyWithoutEstilistasInput
    citas?: citasCreateNestedManyWithoutEstilistasInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealCreateNestedManyWithoutEstilistasInput
    historialCitas?: historialCitasCreateNestedManyWithoutEstilistasInput
    reporteCitasPendientes?: reporteCitasPendientesCreateNestedManyWithoutEstilistasInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasCreateNestedManyWithoutEstilistasInput
  }

  export type estilistasUncheckedCreateWithoutRolesInput = {
    estilistaID?: number
    nombre?: string | null
    apellidos?: string | null
    telefono?: string | null
    direccion?: string | null
    fechaIngreso?: Date | string | null
    fechaSalida?: Date | string | null
    correo?: string | null
    contrase_a?: string | null
    estado?: string | null
    bloqueoHorarios?: bloqueoHorariosUncheckedCreateNestedManyWithoutEstilistasInput
    citas?: citasUncheckedCreateNestedManyWithoutEstilistasInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealUncheckedCreateNestedManyWithoutEstilistasInput
    historialCitas?: historialCitasUncheckedCreateNestedManyWithoutEstilistasInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedCreateNestedManyWithoutEstilistasInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasUncheckedCreateNestedManyWithoutEstilistasInput
  }

  export type estilistasCreateOrConnectWithoutRolesInput = {
    where: estilistasWhereUniqueInput
    create: XOR<estilistasCreateWithoutRolesInput, estilistasUncheckedCreateWithoutRolesInput>
  }

  export type estilistasCreateManyRolesInputEnvelope = {
    data: estilistasCreateManyRolesInput | estilistasCreateManyRolesInput[]
  }

  export type administradoresUpsertWithWhereUniqueWithoutRolesInput = {
    where: administradoresWhereUniqueInput
    update: XOR<administradoresUpdateWithoutRolesInput, administradoresUncheckedUpdateWithoutRolesInput>
    create: XOR<administradoresCreateWithoutRolesInput, administradoresUncheckedCreateWithoutRolesInput>
  }

  export type administradoresUpdateWithWhereUniqueWithoutRolesInput = {
    where: administradoresWhereUniqueInput
    data: XOR<administradoresUpdateWithoutRolesInput, administradoresUncheckedUpdateWithoutRolesInput>
  }

  export type administradoresUpdateManyWithWhereWithoutRolesInput = {
    where: administradoresScalarWhereInput
    data: XOR<administradoresUpdateManyMutationInput, administradoresUncheckedUpdateManyWithoutRolesInput>
  }

  export type administradoresScalarWhereInput = {
    AND?: administradoresScalarWhereInput | administradoresScalarWhereInput[]
    OR?: administradoresScalarWhereInput[]
    NOT?: administradoresScalarWhereInput | administradoresScalarWhereInput[]
    adminID?: IntFilter<"administradores"> | number
    nombre?: StringNullableFilter<"administradores"> | string | null
    apellidos?: StringNullableFilter<"administradores"> | string | null
    correo?: StringNullableFilter<"administradores"> | string | null
    contrase_a?: StringNullableFilter<"administradores"> | string | null
    rolID?: IntNullableFilter<"administradores"> | number | null
  }

  export type clientesUpsertWithWhereUniqueWithoutRolesInput = {
    where: clientesWhereUniqueInput
    update: XOR<clientesUpdateWithoutRolesInput, clientesUncheckedUpdateWithoutRolesInput>
    create: XOR<clientesCreateWithoutRolesInput, clientesUncheckedCreateWithoutRolesInput>
  }

  export type clientesUpdateWithWhereUniqueWithoutRolesInput = {
    where: clientesWhereUniqueInput
    data: XOR<clientesUpdateWithoutRolesInput, clientesUncheckedUpdateWithoutRolesInput>
  }

  export type clientesUpdateManyWithWhereWithoutRolesInput = {
    where: clientesScalarWhereInput
    data: XOR<clientesUpdateManyMutationInput, clientesUncheckedUpdateManyWithoutRolesInput>
  }

  export type clientesScalarWhereInput = {
    AND?: clientesScalarWhereInput | clientesScalarWhereInput[]
    OR?: clientesScalarWhereInput[]
    NOT?: clientesScalarWhereInput | clientesScalarWhereInput[]
    clienteID?: IntFilter<"clientes"> | number
    nombre?: StringNullableFilter<"clientes"> | string | null
    apellidos?: StringNullableFilter<"clientes"> | string | null
    correo?: StringNullableFilter<"clientes"> | string | null
    telefono?: StringNullableFilter<"clientes"> | string | null
    direccion?: StringNullableFilter<"clientes"> | string | null
    puntosGanados?: IntNullableFilter<"clientes"> | number | null
    puntosCanjeados?: IntNullableFilter<"clientes"> | number | null
    contrase_a?: StringNullableFilter<"clientes"> | string | null
    rolID?: IntNullableFilter<"clientes"> | number | null
    estado?: StringNullableFilter<"clientes"> | string | null
  }

  export type estilistasUpsertWithWhereUniqueWithoutRolesInput = {
    where: estilistasWhereUniqueInput
    update: XOR<estilistasUpdateWithoutRolesInput, estilistasUncheckedUpdateWithoutRolesInput>
    create: XOR<estilistasCreateWithoutRolesInput, estilistasUncheckedCreateWithoutRolesInput>
  }

  export type estilistasUpdateWithWhereUniqueWithoutRolesInput = {
    where: estilistasWhereUniqueInput
    data: XOR<estilistasUpdateWithoutRolesInput, estilistasUncheckedUpdateWithoutRolesInput>
  }

  export type estilistasUpdateManyWithWhereWithoutRolesInput = {
    where: estilistasScalarWhereInput
    data: XOR<estilistasUpdateManyMutationInput, estilistasUncheckedUpdateManyWithoutRolesInput>
  }

  export type estilistasScalarWhereInput = {
    AND?: estilistasScalarWhereInput | estilistasScalarWhereInput[]
    OR?: estilistasScalarWhereInput[]
    NOT?: estilistasScalarWhereInput | estilistasScalarWhereInput[]
    estilistaID?: IntFilter<"estilistas"> | number
    nombre?: StringNullableFilter<"estilistas"> | string | null
    apellidos?: StringNullableFilter<"estilistas"> | string | null
    telefono?: StringNullableFilter<"estilistas"> | string | null
    direccion?: StringNullableFilter<"estilistas"> | string | null
    fechaIngreso?: DateTimeNullableFilter<"estilistas"> | Date | string | null
    fechaSalida?: DateTimeNullableFilter<"estilistas"> | Date | string | null
    correo?: StringNullableFilter<"estilistas"> | string | null
    contrase_a?: StringNullableFilter<"estilistas"> | string | null
    rolID?: IntNullableFilter<"estilistas"> | number | null
    estado?: StringNullableFilter<"estilistas"> | string | null
  }

  export type citasCreateManyCatalogoInput = {
    clienteID?: number | null
    estilistaID?: number | null
    fechaCita?: Date | string | null
    estiloID?: number | null
    comentarios?: string | null
  }

  export type detalleServicioCreateManyCatalogoInput = {
    tiempoEstimado?: Date | string | null
  }

  export type historialClientesCreateManyCatalogoInput = {
    clienteID?: number | null
    nombreCliente?: string | null
    fechaRegistro?: Date | string | null
  }

  export type recompensasCreateManyCatalogoInput = {
    puntosRecompensa?: number | null
  }

  export type reporteClientesCitasCreateManyCatalogoInput = {
    clienteID?: number | null
    citaID?: number | null
    nombreCliente?: string | null
    fechaCita?: Date | string | null
  }

  export type citasUpdateWithoutCatalogoInput = {
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    clientes?: clientesUpdateOneWithoutCitasNestedInput
    estilistas?: estilistasUpdateOneWithoutCitasNestedInput
    galeriaEstilos?: galeriaEstilosUpdateOneWithoutCitasNestedInput
    citasReagendadas?: citasReagendadasUpdateManyWithoutCitasNestedInput
    historialCitas?: historialCitasUpdateManyWithoutCitasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUpdateManyWithoutCitasNestedInput
    reporteClientesCitas?: reporteClientesCitasUpdateManyWithoutCitasNestedInput
  }

  export type citasUncheckedUpdateWithoutCatalogoInput = {
    citaID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estiloID?: NullableIntFieldUpdateOperationsInput | number | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    citasReagendadas?: citasReagendadasUncheckedUpdateManyWithoutCitasNestedInput
    historialCitas?: historialCitasUncheckedUpdateManyWithoutCitasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedUpdateManyWithoutCitasNestedInput
    reporteClientesCitas?: reporteClientesCitasUncheckedUpdateManyWithoutCitasNestedInput
  }

  export type citasUncheckedUpdateManyWithoutCatalogoInput = {
    citaID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estiloID?: NullableIntFieldUpdateOperationsInput | number | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type detalleServicioUpdateWithoutCatalogoInput = {
    tiempoEstimado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type detalleServicioUncheckedUpdateWithoutCatalogoInput = {
    detalleID?: IntFieldUpdateOperationsInput | number
    tiempoEstimado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type detalleServicioUncheckedUpdateManyWithoutCatalogoInput = {
    detalleID?: IntFieldUpdateOperationsInput | number
    tiempoEstimado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type historialClientesUpdateWithoutCatalogoInput = {
    nombreCliente?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRegistro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientes?: clientesUpdateOneWithoutHistorialClientesNestedInput
  }

  export type historialClientesUncheckedUpdateWithoutCatalogoInput = {
    historialID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    nombreCliente?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRegistro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type historialClientesUncheckedUpdateManyWithoutCatalogoInput = {
    historialID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    nombreCliente?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRegistro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type recompensasUpdateWithoutCatalogoInput = {
    puntosRecompensa?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type recompensasUncheckedUpdateWithoutCatalogoInput = {
    recompensaID?: IntFieldUpdateOperationsInput | number
    puntosRecompensa?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type recompensasUncheckedUpdateManyWithoutCatalogoInput = {
    recompensaID?: IntFieldUpdateOperationsInput | number
    puntosRecompensa?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type reporteClientesCitasUpdateWithoutCatalogoInput = {
    nombreCliente?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    citas?: citasUpdateOneWithoutReporteClientesCitasNestedInput
    clientes?: clientesUpdateOneWithoutReporteClientesCitasNestedInput
  }

  export type reporteClientesCitasUncheckedUpdateWithoutCatalogoInput = {
    reporteID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    citaID?: NullableIntFieldUpdateOperationsInput | number | null
    nombreCliente?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reporteClientesCitasUncheckedUpdateManyWithoutCatalogoInput = {
    reporteID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    citaID?: NullableIntFieldUpdateOperationsInput | number | null
    nombreCliente?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type citasReagendadasCreateManyCitasInput = {
    idCitaNueva?: number | null
    fechaNuevaCita?: Date | string | null
    motivo?: string | null
  }

  export type historialCitasCreateManyCitasInput = {
    clienteID?: number | null
    estilistaID?: number | null
    fechaCita?: Date | string | null
    servicioID?: number | null
  }

  export type reporteCitasPendientesCreateManyCitasInput = {
    clienteID?: number | null
    fechaCita?: Date | string | null
    estilistaID?: number | null
  }

  export type reporteClientesCitasCreateManyCitasInput = {
    clienteID?: number | null
    nombreCliente?: string | null
    fechaCita?: Date | string | null
    servicioID?: number | null
  }

  export type citasReagendadasUpdateWithoutCitasInput = {
    idCitaNueva?: NullableIntFieldUpdateOperationsInput | number | null
    fechaNuevaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type citasReagendadasUncheckedUpdateWithoutCitasInput = {
    reagendadaID?: IntFieldUpdateOperationsInput | number
    idCitaNueva?: NullableIntFieldUpdateOperationsInput | number | null
    fechaNuevaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type citasReagendadasUncheckedUpdateManyWithoutCitasInput = {
    reagendadaID?: IntFieldUpdateOperationsInput | number
    idCitaNueva?: NullableIntFieldUpdateOperationsInput | number | null
    fechaNuevaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type historialCitasUpdateWithoutCitasInput = {
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
    clientes?: clientesUpdateOneWithoutHistorialCitasNestedInput
    estilistas?: estilistasUpdateOneWithoutHistorialCitasNestedInput
  }

  export type historialCitasUncheckedUpdateWithoutCitasInput = {
    historialID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type historialCitasUncheckedUpdateManyWithoutCitasInput = {
    historialID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type reporteCitasPendientesUpdateWithoutCitasInput = {
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientes?: clientesUpdateOneWithoutReporteCitasPendientesNestedInput
    estilistas?: estilistasUpdateOneWithoutReporteCitasPendientesNestedInput
  }

  export type reporteCitasPendientesUncheckedUpdateWithoutCitasInput = {
    reporteID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type reporteCitasPendientesUncheckedUpdateManyWithoutCitasInput = {
    reporteID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type reporteClientesCitasUpdateWithoutCitasInput = {
    nombreCliente?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clientes?: clientesUpdateOneWithoutReporteClientesCitasNestedInput
    catalogo?: catalogoUpdateOneWithoutReporteClientesCitasNestedInput
  }

  export type reporteClientesCitasUncheckedUpdateWithoutCitasInput = {
    reporteID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    nombreCliente?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type reporteClientesCitasUncheckedUpdateManyWithoutCitasInput = {
    reporteID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    nombreCliente?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type citasCreateManyClientesInput = {
    estilistaID?: number | null
    servicioID?: number | null
    fechaCita?: Date | string | null
    estiloID?: number | null
    comentarios?: string | null
  }

  export type historialCitasCreateManyClientesInput = {
    citaID?: number | null
    estilistaID?: number | null
    fechaCita?: Date | string | null
    servicioID?: number | null
  }

  export type historialClientesCreateManyClientesInput = {
    nombreCliente?: string | null
    fechaRegistro?: Date | string | null
    ultimoServicioID?: number | null
  }

  export type historialCuentaCreateManyClientesInput = {
    serviciosUtilizados?: number | null
    ultimaConexion?: Date | string | null
  }

  export type historialGastoPuntosCreateManyClientesInput = {
    puntosGastados?: number | null
    fecha?: Date | string | null
    descripcionGasto?: string | null
  }

  export type puntosClientesCreateManyClientesInput = {
    saldoPuntos?: number | null
  }

  export type reporteCitasPendientesCreateManyClientesInput = {
    citaID?: number | null
    fechaCita?: Date | string | null
    estilistaID?: number | null
  }

  export type reporteClientesCitasCreateManyClientesInput = {
    citaID?: number | null
    nombreCliente?: string | null
    fechaCita?: Date | string | null
    servicioID?: number | null
  }

  export type citasUpdateWithoutClientesInput = {
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    estilistas?: estilistasUpdateOneWithoutCitasNestedInput
    galeriaEstilos?: galeriaEstilosUpdateOneWithoutCitasNestedInput
    catalogo?: catalogoUpdateOneWithoutCitasNestedInput
    citasReagendadas?: citasReagendadasUpdateManyWithoutCitasNestedInput
    historialCitas?: historialCitasUpdateManyWithoutCitasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUpdateManyWithoutCitasNestedInput
    reporteClientesCitas?: reporteClientesCitasUpdateManyWithoutCitasNestedInput
  }

  export type citasUncheckedUpdateWithoutClientesInput = {
    citaID?: IntFieldUpdateOperationsInput | number
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estiloID?: NullableIntFieldUpdateOperationsInput | number | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    citasReagendadas?: citasReagendadasUncheckedUpdateManyWithoutCitasNestedInput
    historialCitas?: historialCitasUncheckedUpdateManyWithoutCitasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedUpdateManyWithoutCitasNestedInput
    reporteClientesCitas?: reporteClientesCitasUncheckedUpdateManyWithoutCitasNestedInput
  }

  export type citasUncheckedUpdateManyWithoutClientesInput = {
    citaID?: IntFieldUpdateOperationsInput | number
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estiloID?: NullableIntFieldUpdateOperationsInput | number | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type historialCitasUpdateWithoutClientesInput = {
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
    citas?: citasUpdateOneWithoutHistorialCitasNestedInput
    estilistas?: estilistasUpdateOneWithoutHistorialCitasNestedInput
  }

  export type historialCitasUncheckedUpdateWithoutClientesInput = {
    historialID?: IntFieldUpdateOperationsInput | number
    citaID?: NullableIntFieldUpdateOperationsInput | number | null
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type historialCitasUncheckedUpdateManyWithoutClientesInput = {
    historialID?: IntFieldUpdateOperationsInput | number
    citaID?: NullableIntFieldUpdateOperationsInput | number | null
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type historialClientesUpdateWithoutClientesInput = {
    nombreCliente?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRegistro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    catalogo?: catalogoUpdateOneWithoutHistorialClientesNestedInput
  }

  export type historialClientesUncheckedUpdateWithoutClientesInput = {
    historialID?: IntFieldUpdateOperationsInput | number
    nombreCliente?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRegistro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ultimoServicioID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type historialClientesUncheckedUpdateManyWithoutClientesInput = {
    historialID?: IntFieldUpdateOperationsInput | number
    nombreCliente?: NullableStringFieldUpdateOperationsInput | string | null
    fechaRegistro?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ultimoServicioID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type historialCuentaUpdateWithoutClientesInput = {
    serviciosUtilizados?: NullableIntFieldUpdateOperationsInput | number | null
    ultimaConexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type historialCuentaUncheckedUpdateWithoutClientesInput = {
    historialID?: IntFieldUpdateOperationsInput | number
    serviciosUtilizados?: NullableIntFieldUpdateOperationsInput | number | null
    ultimaConexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type historialCuentaUncheckedUpdateManyWithoutClientesInput = {
    historialID?: IntFieldUpdateOperationsInput | number
    serviciosUtilizados?: NullableIntFieldUpdateOperationsInput | number | null
    ultimaConexion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type historialGastoPuntosUpdateWithoutClientesInput = {
    puntosGastados?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descripcionGasto?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type historialGastoPuntosUncheckedUpdateWithoutClientesInput = {
    gastoID?: IntFieldUpdateOperationsInput | number
    puntosGastados?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descripcionGasto?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type historialGastoPuntosUncheckedUpdateManyWithoutClientesInput = {
    gastoID?: IntFieldUpdateOperationsInput | number
    puntosGastados?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    descripcionGasto?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type puntosClientesUpdateWithoutClientesInput = {
    saldoPuntos?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type puntosClientesUncheckedUpdateWithoutClientesInput = {
    puntosID?: IntFieldUpdateOperationsInput | number
    saldoPuntos?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type puntosClientesUncheckedUpdateManyWithoutClientesInput = {
    puntosID?: IntFieldUpdateOperationsInput | number
    saldoPuntos?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type reporteCitasPendientesUpdateWithoutClientesInput = {
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    citas?: citasUpdateOneWithoutReporteCitasPendientesNestedInput
    estilistas?: estilistasUpdateOneWithoutReporteCitasPendientesNestedInput
  }

  export type reporteCitasPendientesUncheckedUpdateWithoutClientesInput = {
    reporteID?: IntFieldUpdateOperationsInput | number
    citaID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type reporteCitasPendientesUncheckedUpdateManyWithoutClientesInput = {
    reporteID?: IntFieldUpdateOperationsInput | number
    citaID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type reporteClientesCitasUpdateWithoutClientesInput = {
    nombreCliente?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    citas?: citasUpdateOneWithoutReporteClientesCitasNestedInput
    catalogo?: catalogoUpdateOneWithoutReporteClientesCitasNestedInput
  }

  export type reporteClientesCitasUncheckedUpdateWithoutClientesInput = {
    reporteID?: IntFieldUpdateOperationsInput | number
    citaID?: NullableIntFieldUpdateOperationsInput | number | null
    nombreCliente?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type reporteClientesCitasUncheckedUpdateManyWithoutClientesInput = {
    reporteID?: IntFieldUpdateOperationsInput | number
    citaID?: NullableIntFieldUpdateOperationsInput | number | null
    nombreCliente?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type bloqueoHorariosCreateManyEstilistasInput = {
    dia?: string | null
    horaInicio?: Date | string | null
    horaFinal?: Date | string | null
    motivo?: string | null
  }

  export type citasCreateManyEstilistasInput = {
    clienteID?: number | null
    servicioID?: number | null
    fechaCita?: Date | string | null
    estiloID?: number | null
    comentarios?: string | null
  }

  export type disponibilidadTiempoRealCreateManyEstilistasInput = {
    diaSemana?: string | null
    horaInicio?: Date | string | null
    horaFinal?: Date | string | null
  }

  export type historialCitasCreateManyEstilistasInput = {
    citaID?: number | null
    clienteID?: number | null
    fechaCita?: Date | string | null
    servicioID?: number | null
  }

  export type reporteCitasPendientesCreateManyEstilistasInput = {
    citaID?: number | null
    clienteID?: number | null
    fechaCita?: Date | string | null
  }

  export type reporteHorarioEstilistasCreateManyEstilistasInput = {
    diaSemana?: string | null
    horaInicio?: Date | string | null
    horaFinal?: Date | string | null
  }

  export type bloqueoHorariosUpdateWithoutEstilistasInput = {
    dia?: NullableStringFieldUpdateOperationsInput | string | null
    horaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horaFinal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type bloqueoHorariosUncheckedUpdateWithoutEstilistasInput = {
    bloqueoID?: IntFieldUpdateOperationsInput | number
    dia?: NullableStringFieldUpdateOperationsInput | string | null
    horaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horaFinal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type bloqueoHorariosUncheckedUpdateManyWithoutEstilistasInput = {
    bloqueoID?: IntFieldUpdateOperationsInput | number
    dia?: NullableStringFieldUpdateOperationsInput | string | null
    horaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horaFinal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type citasUpdateWithoutEstilistasInput = {
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    clientes?: clientesUpdateOneWithoutCitasNestedInput
    galeriaEstilos?: galeriaEstilosUpdateOneWithoutCitasNestedInput
    catalogo?: catalogoUpdateOneWithoutCitasNestedInput
    citasReagendadas?: citasReagendadasUpdateManyWithoutCitasNestedInput
    historialCitas?: historialCitasUpdateManyWithoutCitasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUpdateManyWithoutCitasNestedInput
    reporteClientesCitas?: reporteClientesCitasUpdateManyWithoutCitasNestedInput
  }

  export type citasUncheckedUpdateWithoutEstilistasInput = {
    citaID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estiloID?: NullableIntFieldUpdateOperationsInput | number | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    citasReagendadas?: citasReagendadasUncheckedUpdateManyWithoutCitasNestedInput
    historialCitas?: historialCitasUncheckedUpdateManyWithoutCitasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedUpdateManyWithoutCitasNestedInput
    reporteClientesCitas?: reporteClientesCitasUncheckedUpdateManyWithoutCitasNestedInput
  }

  export type citasUncheckedUpdateManyWithoutEstilistasInput = {
    citaID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estiloID?: NullableIntFieldUpdateOperationsInput | number | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type disponibilidadTiempoRealUpdateWithoutEstilistasInput = {
    diaSemana?: NullableStringFieldUpdateOperationsInput | string | null
    horaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horaFinal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type disponibilidadTiempoRealUncheckedUpdateWithoutEstilistasInput = {
    disponibilidadID?: IntFieldUpdateOperationsInput | number
    diaSemana?: NullableStringFieldUpdateOperationsInput | string | null
    horaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horaFinal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type disponibilidadTiempoRealUncheckedUpdateManyWithoutEstilistasInput = {
    disponibilidadID?: IntFieldUpdateOperationsInput | number
    diaSemana?: NullableStringFieldUpdateOperationsInput | string | null
    horaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horaFinal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type historialCitasUpdateWithoutEstilistasInput = {
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
    citas?: citasUpdateOneWithoutHistorialCitasNestedInput
    clientes?: clientesUpdateOneWithoutHistorialCitasNestedInput
  }

  export type historialCitasUncheckedUpdateWithoutEstilistasInput = {
    historialID?: IntFieldUpdateOperationsInput | number
    citaID?: NullableIntFieldUpdateOperationsInput | number | null
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type historialCitasUncheckedUpdateManyWithoutEstilistasInput = {
    historialID?: IntFieldUpdateOperationsInput | number
    citaID?: NullableIntFieldUpdateOperationsInput | number | null
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type reporteCitasPendientesUpdateWithoutEstilistasInput = {
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    citas?: citasUpdateOneWithoutReporteCitasPendientesNestedInput
    clientes?: clientesUpdateOneWithoutReporteCitasPendientesNestedInput
  }

  export type reporteCitasPendientesUncheckedUpdateWithoutEstilistasInput = {
    reporteID?: IntFieldUpdateOperationsInput | number
    citaID?: NullableIntFieldUpdateOperationsInput | number | null
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reporteCitasPendientesUncheckedUpdateManyWithoutEstilistasInput = {
    reporteID?: IntFieldUpdateOperationsInput | number
    citaID?: NullableIntFieldUpdateOperationsInput | number | null
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reporteHorarioEstilistasUpdateWithoutEstilistasInput = {
    diaSemana?: NullableStringFieldUpdateOperationsInput | string | null
    horaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horaFinal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reporteHorarioEstilistasUncheckedUpdateWithoutEstilistasInput = {
    reporteID?: IntFieldUpdateOperationsInput | number
    diaSemana?: NullableStringFieldUpdateOperationsInput | string | null
    horaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horaFinal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reporteHorarioEstilistasUncheckedUpdateManyWithoutEstilistasInput = {
    reporteID?: IntFieldUpdateOperationsInput | number
    diaSemana?: NullableStringFieldUpdateOperationsInput | string | null
    horaInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horaFinal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type citasCreateManyGaleriaEstilosInput = {
    clienteID?: number | null
    estilistaID?: number | null
    servicioID?: number | null
    fechaCita?: Date | string | null
    comentarios?: string | null
  }

  export type citasUpdateWithoutGaleriaEstilosInput = {
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    clientes?: clientesUpdateOneWithoutCitasNestedInput
    estilistas?: estilistasUpdateOneWithoutCitasNestedInput
    catalogo?: catalogoUpdateOneWithoutCitasNestedInput
    citasReagendadas?: citasReagendadasUpdateManyWithoutCitasNestedInput
    historialCitas?: historialCitasUpdateManyWithoutCitasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUpdateManyWithoutCitasNestedInput
    reporteClientesCitas?: reporteClientesCitasUpdateManyWithoutCitasNestedInput
  }

  export type citasUncheckedUpdateWithoutGaleriaEstilosInput = {
    citaID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    citasReagendadas?: citasReagendadasUncheckedUpdateManyWithoutCitasNestedInput
    historialCitas?: historialCitasUncheckedUpdateManyWithoutCitasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedUpdateManyWithoutCitasNestedInput
    reporteClientesCitas?: reporteClientesCitasUncheckedUpdateManyWithoutCitasNestedInput
  }

  export type citasUncheckedUpdateManyWithoutGaleriaEstilosInput = {
    citaID?: IntFieldUpdateOperationsInput | number
    clienteID?: NullableIntFieldUpdateOperationsInput | number | null
    estilistaID?: NullableIntFieldUpdateOperationsInput | number | null
    servicioID?: NullableIntFieldUpdateOperationsInput | number | null
    fechaCita?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type administradoresCreateManyRolesInput = {
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    contrase_a?: string | null
  }

  export type clientesCreateManyRolesInput = {
    nombre?: string | null
    apellidos?: string | null
    correo?: string | null
    telefono?: string | null
    direccion?: string | null
    puntosGanados?: number | null
    puntosCanjeados?: number | null
    contrase_a?: string | null
    estado?: string | null
  }

  export type estilistasCreateManyRolesInput = {
    nombre?: string | null
    apellidos?: string | null
    telefono?: string | null
    direccion?: string | null
    fechaIngreso?: Date | string | null
    fechaSalida?: Date | string | null
    correo?: string | null
    contrase_a?: string | null
    estado?: string | null
  }

  export type administradoresUpdateWithoutRolesInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type administradoresUncheckedUpdateWithoutRolesInput = {
    adminID?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type administradoresUncheckedUpdateManyWithoutRolesInput = {
    adminID?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type clientesUpdateWithoutRolesInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    puntosGanados?: NullableIntFieldUpdateOperationsInput | number | null
    puntosCanjeados?: NullableIntFieldUpdateOperationsInput | number | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    citas?: citasUpdateManyWithoutClientesNestedInput
    historialCitas?: historialCitasUpdateManyWithoutClientesNestedInput
    historialClientes?: historialClientesUpdateManyWithoutClientesNestedInput
    historialCuenta?: historialCuentaUpdateManyWithoutClientesNestedInput
    historialGastoPuntos?: historialGastoPuntosUpdateManyWithoutClientesNestedInput
    puntosClientes?: puntosClientesUpdateManyWithoutClientesNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUpdateManyWithoutClientesNestedInput
    reporteClientesCitas?: reporteClientesCitasUpdateManyWithoutClientesNestedInput
  }

  export type clientesUncheckedUpdateWithoutRolesInput = {
    clienteID?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    puntosGanados?: NullableIntFieldUpdateOperationsInput | number | null
    puntosCanjeados?: NullableIntFieldUpdateOperationsInput | number | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    citas?: citasUncheckedUpdateManyWithoutClientesNestedInput
    historialCitas?: historialCitasUncheckedUpdateManyWithoutClientesNestedInput
    historialClientes?: historialClientesUncheckedUpdateManyWithoutClientesNestedInput
    historialCuenta?: historialCuentaUncheckedUpdateManyWithoutClientesNestedInput
    historialGastoPuntos?: historialGastoPuntosUncheckedUpdateManyWithoutClientesNestedInput
    puntosClientes?: puntosClientesUncheckedUpdateManyWithoutClientesNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedUpdateManyWithoutClientesNestedInput
    reporteClientesCitas?: reporteClientesCitasUncheckedUpdateManyWithoutClientesNestedInput
  }

  export type clientesUncheckedUpdateManyWithoutRolesInput = {
    clienteID?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    puntosGanados?: NullableIntFieldUpdateOperationsInput | number | null
    puntosCanjeados?: NullableIntFieldUpdateOperationsInput | number | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type estilistasUpdateWithoutRolesInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaIngreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    bloqueoHorarios?: bloqueoHorariosUpdateManyWithoutEstilistasNestedInput
    citas?: citasUpdateManyWithoutEstilistasNestedInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealUpdateManyWithoutEstilistasNestedInput
    historialCitas?: historialCitasUpdateManyWithoutEstilistasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUpdateManyWithoutEstilistasNestedInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasUpdateManyWithoutEstilistasNestedInput
  }

  export type estilistasUncheckedUpdateWithoutRolesInput = {
    estilistaID?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaIngreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    bloqueoHorarios?: bloqueoHorariosUncheckedUpdateManyWithoutEstilistasNestedInput
    citas?: citasUncheckedUpdateManyWithoutEstilistasNestedInput
    disponibilidadTiempoReal?: disponibilidadTiempoRealUncheckedUpdateManyWithoutEstilistasNestedInput
    historialCitas?: historialCitasUncheckedUpdateManyWithoutEstilistasNestedInput
    reporteCitasPendientes?: reporteCitasPendientesUncheckedUpdateManyWithoutEstilistasNestedInput
    reporteHorarioEstilistas?: reporteHorarioEstilistasUncheckedUpdateManyWithoutEstilistasNestedInput
  }

  export type estilistasUncheckedUpdateManyWithoutRolesInput = {
    estilistaID?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaIngreso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechaSalida?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    contrase_a?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use CatalogoCountOutputTypeDefaultArgs instead
     */
    export type CatalogoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CatalogoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CitasCountOutputTypeDefaultArgs instead
     */
    export type CitasCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CitasCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ClientesCountOutputTypeDefaultArgs instead
     */
    export type ClientesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ClientesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EstilistasCountOutputTypeDefaultArgs instead
     */
    export type EstilistasCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EstilistasCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use GaleriaEstilosCountOutputTypeDefaultArgs instead
     */
    export type GaleriaEstilosCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = GaleriaEstilosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RolesCountOutputTypeDefaultArgs instead
     */
    export type RolesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RolesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use administradoresDefaultArgs instead
     */
    export type administradoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = administradoresDefaultArgs<ExtArgs>
    /**
     * @deprecated Use bloqueoHorariosDefaultArgs instead
     */
    export type bloqueoHorariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = bloqueoHorariosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use catalogoDefaultArgs instead
     */
    export type catalogoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = catalogoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use citasDefaultArgs instead
     */
    export type citasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = citasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use citasReagendadasDefaultArgs instead
     */
    export type citasReagendadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = citasReagendadasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use clientesDefaultArgs instead
     */
    export type clientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = clientesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use detalleServicioDefaultArgs instead
     */
    export type detalleServicioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = detalleServicioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use disponibilidadTiempoRealDefaultArgs instead
     */
    export type disponibilidadTiempoRealArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = disponibilidadTiempoRealDefaultArgs<ExtArgs>
    /**
     * @deprecated Use estilistasDefaultArgs instead
     */
    export type estilistasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = estilistasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use galeriaEstilosDefaultArgs instead
     */
    export type galeriaEstilosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = galeriaEstilosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use historialCitasDefaultArgs instead
     */
    export type historialCitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = historialCitasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use historialClientesDefaultArgs instead
     */
    export type historialClientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = historialClientesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use historialCuentaDefaultArgs instead
     */
    export type historialCuentaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = historialCuentaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use historialGastoPuntosDefaultArgs instead
     */
    export type historialGastoPuntosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = historialGastoPuntosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use puntosClientesDefaultArgs instead
     */
    export type puntosClientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = puntosClientesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use recompensasDefaultArgs instead
     */
    export type recompensasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = recompensasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use reporteCitasPendientesDefaultArgs instead
     */
    export type reporteCitasPendientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = reporteCitasPendientesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use reporteClientesCitasDefaultArgs instead
     */
    export type reporteClientesCitasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = reporteClientesCitasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use reporteHorarioEstilistasDefaultArgs instead
     */
    export type reporteHorarioEstilistasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = reporteHorarioEstilistasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use rolesDefaultArgs instead
     */
    export type rolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = rolesDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}